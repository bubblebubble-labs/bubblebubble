File: ./app/(default)/customers/single-post/related-posts.tsx
Content:
import Link from 'next/link'
import Image from 'next/image'
import CustomerImg02 from '@/public/images/customer-02.svg'
import CustomerBg02 from '@/public/images/customer-bg-02.png'
import CustomerImg03 from '@/public/images/customer-03.svg'
import CustomerBg03 from '@/public/images/customer-bg-03.png'
import CustomerImg06 from '@/public/images/customer-06.svg'
import CustomerBg06 from '@/public/images/customer-bg-06.png'
import Particles from '@/components/particles'
import Highlighter, { HighlighterItem02 } from '@/components/highlighter'

export default function RelatedPosts() {

  const items = [
    {
      name: 'Customer name',
      img: CustomerImg02,
      bg: CustomerBg02,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg03,
      bg: CustomerBg03,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg06,
      bg: CustomerBg06,
      link: '/customers/single-post',
    },
  ]

  return (
    <aside>
      <h2 className="inline-flex font-bold text-lg bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8">Related stories</h2>
      <div className="mx-auto sm:max-w-[728px] lg:max-w-none">
        <Highlighter className="grid gap-4 lg:gap-6 sm:grid-cols-3 lg:grid-cols-3 group">

          {items.map((item, index) => (
            <div key={index}>
              <Link href={item.link}>
                <HighlighterItem02>
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10" quantity={3} />
                    <div className="flex items-center justify-center h-32 lg:h-36">
                      <Image className="w-full h-full aspect-video object-cover" src={item.bg} width={352} height={198} alt="Customer Background" aria-hidden="true" />
                      <Image className="absolute" src={item.img} alt={item.name} />
                    </div>
                  </div>
                </HighlighterItem02>
              </Link>
            </div>
          ))}

        </Highlighter>
      </div>
    </aside>
  )
}

File: ./app/(default)/customers/single-post/page.tsx
Content:
export const metadata = {
  title: 'Customer Post - Stellar',
  description: 'Page description',
}

import Link from 'next/link'
import Image from 'next/image'
import Illustration from '@/public/images/page-illustration.svg'
import CustomerBadge from '@/public/images/customer-badge.svg'
import Particles from '@/components/particles'
import RelatedPosts from './related-posts'

export default function CustomerSingle() {
  return (
    <section className="relative">

      {/* Radial gradient */}
      <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
        <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
      </div>

      {/* Particles animation */}
      <Particles className="absolute inset-0 h-96 -z-10" quantity={15} />

      {/* Illustration */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-32 md:pt-40 border-b [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">

          <div className="md:flex md:justify-between">

            {/* Page content */}
            <div className="md:grow pb-12 md:pb-20">
              <div className="max-w-3xl">

                <article className="pb-12 mb-12 border-b [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">

                  <div className="mb-4">
                    <Link className="inline-flex text-sm font-medium text-sky-500 group" href="/customers"><span className="tracking-normal group-hover:-translate-x-0.5 transition-transform duration-150 ease-in-out mr-1">&lt;-</span> Go Back</Link>
                  </div>

                  <header>
                    <h1 className="h2 inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">How Airbnb leverages Stellar X to onboard new hosts</h1>
                    <div className="text-sm flex items-center space-x-4 mb-8">
                      <img className="rounded-full" src="../images/customer-avatar-03.jpg" width="32" height="32" alt="Customer Avatar 03" />
                      <div>
                        <div className="text-slate-300 font-medium">Becky Taylor</div>
                        <div className="text-slate-500">Product Marketing Manager</div>
                      </div>
                    </div>
                  </header>

                  {/* Post content */}
                  <div className="prose max-w-none text-slate-400 prose-headings:text-slate-50 prose-h2:text-xl prose-h2:mt-8 prose-h2:mb-4 prose-p:leading-relaxed prose-a:text-sky-500 prose-a:no-underline hover:prose-a:underline prose-strong:text-slate-50 prose-strong:font-medium prose-blockquote:pl-5 prose-blockquote:xl:-ml-5 prose-blockquote:border-l-2 prose-blockquote:border-sky-500 prose-blockquote:font-medium prose-blockquote:text-slate-300 prose-blockquote:italic">
                    <p>
                      <a href="#0">Airbnb</a> is an American San Francisco-based company operating an online marketplace for short- and long-term homestays and experiences. The company acts as a broker and charges a commission from each booking. The company was founded in 2008 by Brian Chesky, Nathan Blecharczyk, and Joe Gebbia. Airbnb is a shortened version of its original name, AirBedandBreakfast.com. Airbnb is the most well-known company for short-term housing rentals.
                    </p>
                    <p>
                      Regulation of <strong>short-term rentals can include requirements for hosts to have business licenses</strong>, payment of hotel taxes and compliance with building, city and zoning standards. The hotel industry has lobbied for stricter regulations on short-term home rental and in addition to government-imposed restrictions, many homeowner associations also limit short term rentals.
                    </p>
                    <h2>Why do Airbnb need web governance policies?</h2>
                    <p>
                      Brian Chesky, Co-Founder and CEO at Airbnb:
                    </p>
                    <p>
                      Through spending twenty years working with hots, Airbnb reflected that a lack of governance policy is a systemic issue with most short rentals. Without web governance, hosts usually experience a lack of process and accountability leading to:
                    </p>
                    <ul>
                      <li>
                        An organic sprawl of content, creating bloated websites
                      </li>
                      <li>
                        Inconsistent, poorer quality content
                      </li>
                      <li>
                        Weak user experience impacting the ability to support digital goals
                      </li>
                    </ul>
                    <p>
                      When these problems become acute enough, large website redesign projects begin. But <strong>without governance being put in place at the same time, the same problem will only happen again</strong>. Airbnb mitigate this risk by baking web governance into their working process with clients from strategy through to site launch and beyond.
                    </p>
                    <h2>Good governance leads to stronger results</h2>
                    <p>
                      With a strong process for content governance, the benefits are clear for both Airbnb as a company and their clients. Since its founding in 2008, Airbnb has become one of the most successful and valuable start-ups in the world, and has had a significant impact on the industry of renting homes and the hospitality industry more generally.
                    </p>
                    <blockquote>
                      <p>
                        “With a strong process for content governance, the benefits are clear for both Airbnb as a company and their clients. Since its founding in 2008, Airbnb has become one of the most successful and valuable start-ups in the world, and has had a significant impact on the industry of renting homes and the hospitality industry more generally.”
                      </p>
                    </blockquote>
                    <p>
                      Airbnb has also had a significant impact on the hospitality industry, particularly in the area of hotels and other traditional accommodation providers, which are often referred to as the HORECA industry. Some industry experts believe that Airbnb's rapid growth has disrupted the traditional HORECA model, and has led to a decline in revenue and occupancy rates for traditional hotels in certain markets.
                    </p>
                    <h2>How do you get organisation wide buy-in?</h2>
                    <p>
                      Mike reflected that the optimum time to introduce a web governance policy is during a website relaunch project because of the collective energy focused on creating a better user experience.
                      Voltaire recommends starting governance policy in line with strategy kick-off.
                    </p>
                  </div>
                </article>

                <RelatedPosts />

              </div>
            </div>

            {/* Sidebar */}
            <aside className="md:w-64 lg:w-80 md:shrink-0 md:pt-[3.75rem] lg:pt-0 pb-12 md:pb-20">
              <div className="sticky top-6 md:pl-6 lg:pl-10">

                {/* Sidebar content */}
                <div className="space-y-6">

                  {/* Widget */}
                  <div className="bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800">
                    <div className="px-5 py-6">
                      <div className="mb-5">
                        <div className="flex items-center space-x-4">
                          <Image src={CustomerBadge} width={64} height={64} alt="Customer badge" />
                          <div className="text-lg font-semibold text-slate-100">Airbnb Inc.</div>
                        </div>
                      </div>
                      <ul className="text-sm">
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Location</span>
                          <span className="text-slate-300 font-medium">San Francisco</span>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Website</span>
                          <a className="text-sky-500 font-medium flex items-center space-x-1" href="#0">
                            <span>airbnb.com</span>
                            <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="9" height="9">
                              <path d="m1.285 8.514-.909-.915 5.513-5.523H1.663l.01-1.258h6.389v6.394H6.794l.01-4.226z" />
                            </svg>
                          </a>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Industry</span>
                          <span className="text-slate-300 font-medium">Hospitality</span>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Product</span>
                          <span className="text-slate-300 font-medium">Stellar X</span>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Impact</span>
                          <span className="text-slate-300 font-medium">+7% new hosts</span>
                        </li>
                      </ul>
                    </div>
                  </div>

                </div>

              </div>
            </aside>

          </div>

        </div>
      </div>
    </section>
  )
}

File: ./app/(default)/customers/page.tsx
Content:
export const metadata = {
  title: 'Customers - Stellar',
  description: 'Page description',
}

import Image from 'next/image'
import Illustration from '@/public/images/page-illustration.svg'
import Particles from '@/components/particles'
import CustomersList from './customers-list'

export default function Customers() {
  return (
    <>
      <section className="relative">

        {/* Radial gradient */}
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
          <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
        </div>

        {/* Particles animation */}
        <Particles className="absolute inset-0 h-96 -z-10" quantity={15} />

        {/* Illustration */}
        <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
          <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
        </div>

        <div className="max-w-6xl mx-auto px-4 sm:px-6">
          <div className="pt-32 md:pt-40">

            {/* Section header */}
            <div className="text-center pb-12 md:pb-20">
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">Leaders love Stellar</div>
              <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Trusted by leading companies</h1>
              <div className="max-w-3xl mx-auto">
                <p className="text-lg text-slate-400">Stellar powers thousands of high-impact product teams. From next-gen startups who reach for the stars to established greats who change the world.</p>
              </div>
            </div>

            <CustomersList />

          </div>
        </div>

      </section>
    </>
  )
}

File: ./app/(default)/customers/customers-list.tsx
Content:
import Link from 'next/link'
import Image from 'next/image'
import CustomerImg01 from '@/public/images/customer-01.svg'
import CustomerBg01 from '@/public/images/customer-bg-01.png'
import CustomerImg02 from '@/public/images/customer-02.svg'
import CustomerBg02 from '@/public/images/customer-bg-02.png'
import CustomerImg03 from '@/public/images/customer-03.svg'
import CustomerBg03 from '@/public/images/customer-bg-03.png'
import CustomerImg04 from '@/public/images/customer-04.svg'
import CustomerBg04 from '@/public/images/customer-bg-04.png'
import CustomerImg05 from '@/public/images/customer-05.svg'
import CustomerBg05 from '@/public/images/customer-bg-05.png'
import CustomerImg06 from '@/public/images/customer-06.svg'
import CustomerBg06 from '@/public/images/customer-bg-06.png'
import CustomerImg07 from '@/public/images/customer-07.svg'
import CustomerBg07 from '@/public/images/customer-bg-07.png'
import CustomerImg08 from '@/public/images/customer-08.svg'
import CustomerBg08 from '@/public/images/customer-bg-08.png'
import CustomerImg09 from '@/public/images/customer-09.svg'
import CustomerBg09 from '@/public/images/customer-bg-09.png'
import CustomerImg10 from '@/public/images/customer-10.svg'
import CustomerBg10 from '@/public/images/customer-bg-10.png'
import CustomerAvatar01 from '@/public/images/customer-avatar-01.jpg'
import CustomerAvatar02 from '@/public/images/customer-avatar-02.jpg'
import Particles from '@/components/particles'
import Highlighter, { HighlighterItem02 } from '@/components/highlighter'

export default function CustomersList() {

  const items = [
    {
      name: 'Customer name',
      img: CustomerImg01,
      bg: CustomerBg01,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg02,
      bg: CustomerBg02,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg03,
      bg: CustomerBg03,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg04,
      bg: CustomerBg04,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg05,
      bg: CustomerBg05,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg06,
      bg: CustomerBg06,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg07,
      bg: CustomerBg07,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg08,
      bg: CustomerBg08,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg09,
      bg: CustomerBg09,
      link: '/customers/single-post',
    },
    {
      name: 'Customer name',
      img: CustomerImg10,
      bg: CustomerBg10,
      link: '/customers/single-post',
    },
  ]

  return (
  <div className="max-w-[352px] mx-auto sm:max-w-[728px] lg:max-w-none pb-12 md:pb-20">
    <Highlighter className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 group [&_*:nth-child(n+5):not(:nth-child(n+12))]:order-1 [&_*:nth-child(n+10):not(:nth-child(n+11))]:!order-2">

      {items.map((item, index) => (
        <div key={index}>
          <Link href={item.link}>
            <HighlighterItem02>
              <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                {/* Particles animation */}
                <Particles className="absolute inset-0 -z-10" quantity={3} />
                <div className="flex items-center justify-center">
                  <Image className="w-full h-full aspect-video object-cover" src={item.bg} width={352} height={198} alt="Customer Background" aria-hidden="true" />
                  <Image className="absolute" src={item.img} alt={item.name} />
                </div>
              </div>
            </HighlighterItem02>
          </Link>
        </div>
      ))}

      {/* Testimonial #01 */}
      <div className="flex flex-col items-center justify-center text-center p-4">
        <p className="font-medium bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-3">
          <span className="line-clamp-4">
            “We struggled to bring all our conversations into one place until we found Stellar. The UI is very clean and we love the integration with Spark.”
          </span>
        </p>
        <div className="inline-flex mb-2">
          <Image className="rounded-full" src={CustomerAvatar01} width={32} height={32} alt="Customer Avatar 01" />
        </div>
        <div className="text-sm font-medium text-slate-300">
          Mike Hunt <span className="text-slate-700">-</span> <a className="text-sky-500 hover:underline" href="#0">Thunderbolt</a>
        </div>
      </div>
      {/* Testimonial #02 */}
      <div className="flex flex-col items-center justify-center text-center p-4">
        <p className="font-medium bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-3">
          <span className="line-clamp-4">
            “We struggled to bring all our conversations into one place until we found Stellar. The UI is very clean and we love the integration with Spark.”
          </span>
        </p>
        <div className="inline-flex mb-2">
          <Image className="rounded-full" src={CustomerAvatar02} width={32} height={32} alt="Customer Avatar 02" />
        </div>
        <div className="text-sm font-medium text-slate-300">
          Mirko Mitt <span className="text-slate-700">-</span> <a className="text-sky-500 hover:underline" href="#0">Mildrink</a>
        </div>
      </div>

    </Highlighter>
  </div>
  )
}

File: ./app/(default)/pricing-section.tsx
Content:
import Image from 'next/image'
import Illustration from '@/public/images/page-illustration.svg'
import Pricing from '@/components/pricing'

export default function PricingSection() {
  return (
    <section className="relative">
      {/* Radial gradient */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none -z-10" aria-hidden="true">
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 w-1/3 aspect-square">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-50" />
        </div>
      </div>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="py-12 md:py-20">
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <div>
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">Pricing plans</div>
            </div>
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Flexible plans and features</h2>
            <p className="text-lg text-slate-400">All the lorem ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet.</p>
          </div>
          <Pricing />
        </div>
      </div>

    </section>
  )
}

File: ./app/(default)/changelog/post-item.tsx
Content:
import Image from 'next/image'
import PostDate from '@/components/post-date'
import { UpdateMdx } from '@/components/mdx/update-mdx'

export default function PostItem({ ...props }) {
  return (
    <article className="pt-12 first-of-type:pt-0 group">
      <div className="md:flex">
        <div className="w-48 shrink-0">
          <time className="text-sm inline-flex items-center bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 md:leading-8 before:w-1.5 before:h-1.5 before:rounded-full before:bg-sky-500 before:ring-4 before:ring-sky-500/30 mb-3">
            <span className="ml-[1.625rem] md:ml-5"><PostDate dateString={props.publishedAt} /></span>
          </time>
        </div>
        <div className="grow ml-8 md:ml-0 pb-12 group-last-of-type:pb-0 border-b [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1] group-last-of-type:border-none">
          <header>
            <h2 className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 leading-8 pb-6">{props.title}</h2>
          </header>
          <figure className="bg-gradient-to-b from-slate-300/20 to-transparent rounded-3xl p-px mb-8">
            <Image className="w-full rounded-[inherit]" src={props.image} width={574} height={326} alt={props.title} />
          </figure>
          <UpdateMdx code={props.body.code} />
        </div>
      </div>
    </article>
  )
}

File: ./app/(default)/changelog/page.tsx
Content:
export const metadata = {
  title: 'Changelog - Stellar',
  description: 'Page description',
}

import { allUpdates } from 'contentlayer/generated'
import Image from 'next/image'
import Illustration from '@/public/images/page-illustration.svg'
import PostItem from './post-item'
import Cta from '@/components/cta-03'

export default function Changelog() {

  // Sort posts by date
  allUpdates.sort((a, b) => {
    return (new Date(a.publishedAt) > new Date(b.publishedAt)) ? -1 : 1
  })

  return (
    <>

      {/* Content */}
      <section className="relative">

        {/* Radial gradient */}
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
          <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
        </div>

        {/* Particles animation */}
        <div className="absolute inset-0 h-96 -z-10" aria-hidden="true">
          <canvas data-particle-animation data-particle-quantity="15"></canvas>
        </div>

        {/* Illustration */}
        <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
          <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
        </div>

        <div className="max-w-6xl mx-auto px-4 sm:px-6">
          <div className="pt-32 pb-12 md:pt-40 md:pb-20">

            {/* Page header */}
            <div className="text-center pb-12 md:pb-20">
              <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">What's New</h1>
              <div className="max-w-3xl mx-auto">
                <p className="text-lg text-slate-400">New updates and improvements to Stellar.</p>
              </div>
            </div>

            {/* Content */}
            <div className="max-w-3xl mx-auto">
              <div className="relative">
                <div className="absolute h-full top-4 left-[2px] w-0.5 bg-slate-800 [mask-image:_linear-gradient(0deg,transparent,theme(colors.white)_150px,theme(colors.white))] -z-10 overflow-hidden after:absolute after:h-4 after:top-0 after:-translate-y-full after:left-0 after:w-0.5 after:bg-[linear-gradient(180deg,_transparent,_theme(colors.amber.500/.65)_25%,_theme(colors.amber.200)_50%,_theme(colors.amber.500/.65)_75%,_transparent)] after:animate-shine" aria-hidden="true"></div>
                {allUpdates.map((post, postIndex) => (
                  <PostItem key={postIndex} {...post} />
                ))}
              </div>
            </div>

            {/* Pagination */}
            <div className="max-w-3xl mx-auto">
              <ul className="flex items-center justify-between mt-12 pl-8 md:pl-48">
                <li>
                  <span className="btn-sm text-slate-700 transition duration-150 ease-in-out group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none cursor-not-allowed">
                    <span className="relative inline-flex items-center">
                      <span className="tracking-normal text-slate-700 mr-1">&lt;-</span> Previous Page
                    </span>
                  </span>
                </li>
                <li>
                  <a className="btn-sm text-slate-300 hover:text-white transition duration-150 ease-in-out group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none" href="#0">
                    <span className="relative inline-flex items-center">
                      Next Page <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                    </span>
                  </a>
                </li>
              </ul>
            </div>

          </div>
        </div>

      </section>

      <Cta />
    </>
  )
}

File: ./app/(default)/about/page.tsx
Content:
export const metadata = {
  title: 'About - Stellar',
  description: 'Page description',
}

import Hero from '@/components/hero-about'
import Story from '@/components/story'
import Team from '@/components/team'
import Recruitment from '@/components/recruitment'
import Testimonials from '@/components/testimonials-02'
import Cta from '@/components/cta-02'

export default function About() {
  return (
    <>
      <Hero />
      <Story />
      <Team />
      <Recruitment />
      <Testimonials />
      <Cta />
    </>
  )
}

File: ./app/(default)/integrations/single-post/page.tsx
Content:
export const metadata = {
  title: 'Integrations Post - Stellar',
  description: 'Page description',
}

import Link from 'next/link'
import Image from 'next/image'
import Illustration from '@/public/images/page-illustration.svg'
import IntegrationImg from '@/public/images/integration-image.png'
import IntegrationIcon from '@/public/images/integrations-08.svg'
import Star from '@/public/images/star.svg'
import Avatar from '@/public/images/post-avatar.jpg'
import Particles from '@/components/particles'

export default function IntegrationsSingle() {
  return (
    <section className="relative">

      {/* Radial gradient */}
      <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
        <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
      </div>

      {/* Particles animation */}
      <Particles className="absolute inset-0 h-96 -z-10" quantity={15} />

      {/* Illustration */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-32 md:pt-40">

          <div className="md:flex md:justify-between">

            {/* Page content */}
            <div className="md:grow pb-12 md:pb-20">
              <div className="max-w-[720px]">

                <div className="flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-16">

                  {/* Back button */}
                  <div className="shrink-0">
                    <div className="sticky top-6">
                      <Link className="flex items-center justify-center w-9 h-9 group border border-transparent rounded-full [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none" href="/integrations">
                        <span className="sr-only">Go back</span>
                        <svg className="w-4 h-4 fill-sky-500" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                          <path d="M6.7 14.7l1.4-1.4L3.8 9H16V7H3.8l4.3-4.3-1.4-1.4L0 8z" />
                        </svg>
                      </Link>
                    </div>
                  </div>

                  {/* Content */}
                  <div>
                    <article className="pb-12 mb-12 border-b [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">

                      <figure className="bg-slate-700/20 border border-slate-300/10 p-4 rounded-3xl mb-8">
                        <Image className="w-full rounded-2xl" src={IntegrationImg} width={586} height={316} alt="Integration image" />
                      </figure>

                      <h1 className="sr-only">GitHub</h1>

                      {/* Post content */}
                      <div className="prose max-w-none text-slate-400 prose-headings:text-slate-50 prose-h2:text-xl prose-h2:mt-8 prose-h2:mb-4 prose-p:leading-relaxed prose-a:text-sky-500 prose-a:no-underline hover:prose-a:underline prose-strong:text-slate-50 prose-strong:font-medium prose-blockquote:pl-5 prose-blockquote:xl:-ml-5 prose-blockquote:border-l-2 prose-blockquote:border-sky-500 prose-blockquote:font-medium prose-blockquote:text-slate-300 prose-blockquote:italic">
                        <h2>Overview</h2>
                        <p>
                          This powerful GitHub integration keeps your work in sync in both applications. It links features to Pull Requests so that details update automatically from In Progress to Done as the PR moves from drafted to merged - there is no need to update the issue in Stellar at all.
                        </p>
                        <p>
                          Move even faster by using a keyboard shortcut that creates the issue's git branch name, assigns the issue and moves the issue to In Progress in one step. This integration supports <a href="#0">GitHub Enterprise</a>.
                        </p>
                        <h2>How it works</h2>
                        <p>
                          Configure the GitHub integration <strong className="text-slate-50 font-medium">in a couple of minutes</strong> by authenticating and selecting which repos to connect to Stellar. Once you do, anyone in the workspace can start linking PRs.
                        </p>
                        <p>
                          Link PRs to issues in a few ways. Use the issue ID in the branch name or PR title before creating the PR. To link multiple PRs, or link issues after creating the PR, use magic words along with the issue ID in the PR description.
                        </p>
                      </div>
                    </article>

                    <aside className="pl-6 border-l-2 border-sky-500">
                      <p className="inline-flex font-medium italic text-lg bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">“ This integration is so perfect it tickles my brain. It ensures that your work is in sync across your entire team. ”</p>
                      <footer className="flex items-center space-x-4">
                        <Image className="shrink-0 rounded-full" src={Avatar} width={32} height={32} alt="Author" />
                        <div className="text-sm font-medium text-slate-300">
                          Mike Hunt <span className="text-slate-700">-</span> <a className="text-sky-500 hover:underline" href="#0">Thunderbolt</a>
                        </div>
                      </footer>
                    </aside>
                  </div>

                </div>

              </div>
            </div>

            {/* Sidebar */}
            <aside className="md:w-64 lg:w-80 md:shrink-0 md:pt-[3.75rem] lg:pt-0 pb-12 md:pb-20">
              <div className="sticky top-6 md:pl-6 lg:pl-10">

                {/* Sidebar content */}
                <div className="space-y-6">

                  {/* Widget */}
                  <div className="bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800">
                    <div className="px-5 py-6">
                      <div className="text-center mb-5">
                        <div className="mb-4">
                          <div className="relative inline-flex">
                            <Image src={IntegrationIcon} width={80} height={80} alt="Icon 08" />
                            <Image className="absolute top-0 -right-1" src={Star} width={24} height={24} alt="Star" aria-hidden="true" />
                          </div>
                        </div>
                        <button className="btn-sm text-slate-300 hover:text-white transition duration-150 ease-in-out group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/70 before:rounded-full before:pointer-events-none">
                          <span className="relative inline-flex items-center">
                            Install Integration <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                          </span>
                        </button>
                      </div>
                      <ul className="text-sm">
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Company</span>
                          <span className="text-slate-300 font-medium">Github</span>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Website</span>
                          <a className="text-sky-500 font-medium flex items-center space-x-1" href="#0">
                            <span>github.com</span>
                            <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="9" height="9">
                              <path d="m1.285 8.514-.909-.915 5.513-5.523H1.663l.01-1.258h6.389v6.394H6.794l.01-4.226z" />
                            </svg>
                          </a>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Industry</span>
                          <span className="text-slate-300 font-medium">Technology</span>
                        </li>
                        <li className="flex items-center justify-between space-x-2 py-3 border-t [border-image:linear-gradient(to_right,theme(colors.slate.700/.3),theme(colors.slate.700),theme(colors.slate.700/.3))1]">
                          <span className="text-slate-400">Installs</span>
                          <span className="text-slate-300 font-medium">100K+</span>
                        </li>
                      </ul>
                    </div>
                  </div>

                </div>

              </div>
            </aside>

          </div>

        </div>
      </div>
    </section>
  )
}

File: ./app/(default)/integrations/integrations-list.tsx
Content:
import Link from 'next/link'
import Image from 'next/image'
import Star from '@/public/images/star.svg'
import IntegrationsImg01 from '@/public/images/integrations-01.svg'
import IntegrationsImg02 from '@/public/images/integrations-02.svg'
import IntegrationsImg03 from '@/public/images/integrations-03.svg'
import IntegrationsImg04 from '@/public/images/integrations-04.svg'
import IntegrationsImg05 from '@/public/images/integrations-05.svg'
import IntegrationsImg06 from '@/public/images/integrations-06.svg'
import IntegrationsImg07 from '@/public/images/integrations-07.svg'
import IntegrationsImg08 from '@/public/images/integrations-08.svg'
import IntegrationsImg09 from '@/public/images/integrations-09.svg'
import IntegrationsImg10 from '@/public/images/integrations-10.svg'
import IntegrationsImg11 from '@/public/images/integrations-11.svg'
import IntegrationsImg12 from '@/public/images/integrations-12.svg'
import IntegrationsImg13 from '@/public/images/integrations-13.svg'
import IntegrationsImg14 from '@/public/images/integrations-14.svg'
import IntegrationsImg15 from '@/public/images/integrations-15.svg'
import IntegrationsImg16 from '@/public/images/integrations-16.svg'
import IntegrationsImg17 from '@/public/images/integrations-17.svg'
import IntegrationsImg18 from '@/public/images/integrations-18.svg'
import IntegrationsImg19 from '@/public/images/integrations-19.svg'
import IntegrationsImg20 from '@/public/images/integrations-20.svg'
import IntegrationsImg21 from '@/public/images/integrations-21.svg'
import IntegrationsImg22 from '@/public/images/integrations-22.svg'
import IntegrationsImg23 from '@/public/images/integrations-23.svg'
import IntegrationsImg24 from '@/public/images/integrations-24.svg'

export default function IntegrationsList() {

  const items = [
    {
      img: IntegrationsImg06,
      name: 'Vercel',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg07,
      name: 'Sentry',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: false,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg04,
      name: 'Jira',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg08,
      name: 'GitHub',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg05,
      name: 'GitLab',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg01,
      name: 'Retool',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Engineering'
    },
    {
      img: IntegrationsImg02,
      name: 'Zapier',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'No-code'
    },
    {
      img: IntegrationsImg03,
      name: 'Airtable',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'No-code'
    },
    {
      img: IntegrationsImg09,
      name: 'Framer',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'No-code'
    },
    {
      img: IntegrationsImg10,
      name: 'Jotform',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: false,
      category: 'No-code'
    },
    {
      img: IntegrationsImg11,
      name: 'Webflow',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'No-code'
    },
    {
      img: IntegrationsImg12,
      name: 'Coda',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: false,
      category: 'No-code'
    },
    {
      img: IntegrationsImg13,
      name: 'Asana',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg14,
      name: 'Myngo',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg15,
      name: 'Bonsai',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg16,
      name: 'Decipad',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg17,
      name: 'Miro',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg18,
      name: 'Popform',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Collaboration'
    },
    {
      img: IntegrationsImg19,
      name: 'Linear',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Productivity'
    },
    {
      img: IntegrationsImg20,
      name: 'Microsoft',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Productivity'
    },
    {
      img: IntegrationsImg21,
      name: 'Google Drive',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Productivity'
    },
    {
      img: IntegrationsImg22,
      name: 'InVision',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Productivity'
    },
    {
      img: IntegrationsImg23,
      name: 'WeTransfer',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: false,
      category: 'Productivity'
    },
    {
      img: IntegrationsImg24,
      name: 'Hotjar',
      description: 'Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.',
      link: '/integrations/single-post',
      featured: true,
      category: 'Productivity'
    }
  ]

  return (
    <section>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">

        <div className="pb-12 md:pb-20">
          {/* Tobpabr */}
          <div className="flex justify-between items-center py-6 border-b [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1] space-x-8 overflow-x-scroll no-scrollbar">
            {/* Links */}
            <ul className="flex flex-nowrap text-sm font-medium space-x-8">
              <li>
                <a className="flex items-center text-slate-50 hover:text-white whitespace-nowrap transition-colors space-x-2" href="#engineering">
                  <svg className="fill-slate-500" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path d="m7.7 7.3-5-5c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4L5.6 8l-4.3 4.3c-.4.4-.4 1 0 1.4.2.2.4.3.7.3.3 0 .5-.1.7-.3l5-5c.4-.4.4-1 0-1.4ZM8 12h7v2H8z" />
                  </svg>
                  <span>Engineering</span>
                </a>
              </li>
              <li>
                <a className="flex items-center text-slate-50 hover:text-white whitespace-nowrap transition-colors space-x-2" href="#nocode">
                  <svg className="fill-slate-500" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path d="M10 15c-.4 0-.8-.3-.9-.7L5.8 4.6 3.9 8.4c-.2.4-.5.6-.9.6H0V7h2.4l2.7-5.4c.2-.4.6-.6 1-.6s.7.3.9.7l3.2 9.7 1.9-3.8c.2-.4.5-.6.9-.6h3v2h-2.4l-2.7 5.4c-.2.4-.5.6-.9.6Z" />
                  </svg>
                  <span>No-code</span>
                </a>
              </li>
              <li>
                <a className="flex items-center text-slate-50 hover:text-white whitespace-nowrap transition-colors space-x-2" href="#collaboration">
                  <svg className="fill-slate-500" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path d="M7.3 9.7c-.4-.4-.4-1 0-1.4l7-7c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-7 7c-.4.4-1 .4-1.4 0ZM7.3 15.7c-.4-.4-.4-1 0-1.4l7-7c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-7 7c-.4.4-1 .4-1.4 0ZM.3 10.7c-.4-.4-.4-1 0-1.4l7-7c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-7 7c-.4.4-1 .4-1.4 0Z" />
                  </svg>
                  <span>Collaboration</span>
                </a>
              </li>
              <li>
                <a className="flex items-center text-slate-50 hover:text-white whitespace-nowrap transition-colors space-x-2" href="#productivity">
                  <svg className="fill-slate-500" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path d="M11.505 14.135a1 1 0 0 1 .175-1.403A5.967 5.967 0 0 0 14 8c0-3.309-2.691-6-6-6S2 4.691 2 8c0 1.858.846 3.583 2.32 4.731a1 1 0 0 1-1.228 1.578A7.951 7.951 0 0 1 0 8c0-4.411 3.589-8 8-8s8 3.589 8 8a7.955 7.955 0 0 1-3.092 6.31 1.001 1.001 0 0 1-1.403-.175Z" />
                    <path d="M9.045 10.973a1 1 0 0 1 .175-1.404A1.98 1.98 0 0 0 10 8c0-1.103-.897-2-2-2s-2 .897-2 2c0 .611.284 1.184.78 1.569a1 1 0 1 1-1.228 1.578A3.967 3.967 0 0 1 4 8c0-2.206 1.794-4 4-4s4 1.794 4 4c0 1.232-.565 2.38-1.552 3.147a.999.999 0 0 1-1.403-.174Z" />
                  </svg>
                  <span>Productivity</span>
                </a>
              </li>
            </ul>
            <div>
              <form className="relative flex items-center">
                <input className="form-input pl-10 bg-transparent rounded-none focus:border-transparent focus:border-b-slate-700 lg:w-9 lg:focus:w-[200px] transition-[width]" type="text" id="search" aria-label="Search…" placeholder="Search…" autoComplete="off" />
                <div className="absolute inset-0 w-9 flex items-center justify-center pointer-events-none">
                  <svg className="absolute fill-slate-50 mx-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path d="M7 14c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7ZM7 2C4.243 2 2 4.243 2 7s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5Zm8.707 12.293a.999.999 0 1 1-1.414 1.414L11.9 13.314a8.019 8.019 0 0 0 1.414-1.414l2.393 2.393Z" />
                  </svg>
                </div>
              </form>
            </div>
          </div>

          {/* Cards */}
          <div>
            {/* Section #1 */}
            <div className="mt-12 md:mt-16">
              <h3 id="engineering" className="scroll-mt-8 text-2xl font-bold inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8">Engineering</h3>
              <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">

                {items.map((item, index) => (
                  item.category === 'Engineering' && (
                    <IntegrationCard item={item} index={index} />
                  )
                ))}

              </div>
            </div>
            {/* Section #2 */}
            <div className="mt-12 md:mt-16">
              <h3 id="nocode" className="scroll-mt-8 text-2xl font-bold inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8">No-code</h3>
              <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">

                {items.map((item, index) => (
                  item.category === 'No-code' && (
                    <IntegrationCard item={item} index={index} />
                  )
                ))}

              </div>
            </div>
            {/* Section #3 */}
            <div className="mt-12 md:mt-16">
              <h3 id="collaboration" className="scroll-mt-8 text-2xl font-bold inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8">Collaboration</h3>
              <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">

                {items.map((item, index) => (
                  item.category === 'Collaboration' && (
                    <IntegrationCard item={item} index={index} />
                  )
                ))}

              </div>
            </div>
            {/* Section #4 */}
            <div className="mt-12 md:mt-16">
              <h3 id="productivity" className="scroll-mt-8 text-2xl font-bold inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8">Productivity</h3>
              <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">

                {items.map((item, index) => (
                  item.category === 'Productivity' && (
                    <IntegrationCard item={item} index={index} />
                  )
                ))}

              </div>
            </div>
          </div>
        </div>

      </div>
    </section>
  )
}

type CardProps = {
  item: {
    category: string
    img: string
    name: string
    featured: boolean
    link: string
    description: string
  }
  index: number
}

export function IntegrationCard({ item, index }: CardProps) {
  return (
    <div key={index} className="bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
      <div className="flex flex-col p-5 h-full">
        <div className="flex items-center space-x-3 mb-3">
          <div className="relative">
            <Image src={item.img} width="40" height="40" alt={item.name} />
            {item.featured && (
              <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
            )}
          </div>
          <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href={item.link}>{item.name}</Link>
        </div>
        <div className="grow">
          <div className="text-sm text-slate-400">{item.description}</div>
        </div>
      </div>
    </div>
  )
}
File: ./app/(default)/integrations/integrations-section.tsx
Content:
import Image from 'next/image'
import Particles from '@/components/particles'
import Illustration from '@/public/images/page-illustration.svg'
import Illustration02 from '@/public/images/page-illustration-02.svg'
import IntegrationsCarousel from '@/components/integrations-carousel'

export default function IntegrationsSection() {
  return (
    <section className="relative">

      {/* Illustration 02 */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 bottom-0 -mb-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration02} className="max-w-none" width={1440} height={427} alt="Page Illustration 02" />
      </div>

      {/* Opacity layer */}
      <div className="absolute inset-0 bg-slate-900 opacity-60 -z-10" aria-hidden="true"></div>

      {/* Radial gradient */}
      <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
        <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
      </div>

      {/* Particles animation */}
      <Particles className="absolute inset-0 h-96 -z-10" quantity={15} />

      {/* Illustration */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-32 md:pt-40">

          {/* Section header */}
          <div className="text-center pb-12 md:pb-20">
            <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">Integrations & Add-ons</div>
            <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Make Stellar uniquely yours</h1>
            <div className="max-w-3xl mx-auto">
              <p className="text-lg text-slate-400">Our landing page template works on all devices, so you only have to set it up once, and get beautiful results forever.</p>
            </div>
          </div>

          <IntegrationsCarousel />

        </div>
      </div>
    </section>
  )
}

File: ./app/(default)/integrations/page.tsx
Content:
export const metadata = {
  title: 'Integrations - Stellar',
  description: 'Page description',
}

import IntegrationsSection from './integrations-section'
import IntegrationsList from './integrations-list'

export default function Integrations() {
  return (
    <>
      <IntegrationsSection />
      <IntegrationsList />
    </>
  )
}

File: ./app/(default)/layout.tsx
Content:
'use client'

import { useEffect } from 'react'

import AOS from 'aos'
import 'aos/dist/aos.css'

import Header from '@/components/ui/header'
import Footer from '@/components/ui/footer'

export default function DefaultLayout({
  children,
}: {
  children: React.ReactNode
}) {  

  useEffect(() => {
    AOS.init({
      once: true,
      disable: 'phone',
      duration: 1000,
      easing: 'ease-out-cubic',
    })
  })

  return (
    <>
      <Header />
      
      <main className="grow">

        {children}

      </main>

      <Footer />
    </>
  )
}

File: ./app/(default)/survey/pricing-section.tsx
Content:
import Image from 'next/image'
import Particles from '@/components/particles'
import Illustration from '@/public/images/page-illustration.svg'
import Pricing from '@/components/pricing'

export default function PricingSection() {
  return (
    <section className="relative">

      {/* Radial gradient */}
      <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
        <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
      </div>

      {/* Particles animation */}
      <Particles className="absolute inset-0 h-96 -z-10"  quantity={15} />

      {/* Illustration */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-32 pb-20 md:pt-40 md:pb-24">

          {/* Section header */}
          <div className="text-center pb-12 md:pb-20">
            <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">The security first platform</div>
            <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Simple plans for everyone</h1>
            <div className="max-w-3xl mx-auto">
              <p className="text-lg text-slate-400">Cut down overhead costs and ditch clunky software. Get a flexible, purpose-built tool to simplify your security with authentication services.</p>
            </div>
          </div>
          <Pricing />
        </div>
      </div>

    </section>
  )
}

File: ./app/(default)/survey/page.tsx
Content:
export const metadata = {
  title: '버블버블 - AI 법률 서비스',
  description: 'Page description',
}

import PricingSection from './pricing-section'
import Features from '@/components/features-05'
import Customers from '@/components/customers'
import Faqs from '@/components/faqs'
import Cta from '@/components/cta'
import { Survey } from '@/components/Survey'

export default function Pricing() {
  return (
    <>
      <Survey />
    </>
  )
}

File: ./app/(default)/page.tsx
Content:
export const metadata = {
  title: '버블버블 - AI 법률 서비스',
  description: '버블버블 - AI 법률 서비스',
}

import Hero from '@/components/hero'
import Clients from '@/components/clients'
import Features from '@/components/features'
import Features02 from '@/components/features-02'
import Features03 from '@/components/features-03'
import Features05 from '@/components/features-05'

import TestimonialsCarousel from '@/components/testimonials-carousel'
import Features04 from '@/components/features-04'
import Pricing from './pricing-section'
import Testimonials from '@/components/testimonials'
import Cta from '@/components/cta'
import Customers from '@/components/customers'
import Faqs from '@/components/faqs'
import Cta03 from '@/components/cta-03'

export default function Home() {
  return (
    <>
      <Hero />
      <Clients />
      <Features />
       <Features05 />
      {/* <Features02 /> */}
      {/* <Features03 /> */}
      {/* <TestimonialsCarousel /> */}
      {/* <Features04 /> */}
      {/* <Pricing /> */}
      <Customers />
      <Faqs />
      <Testimonials />
      <Cta />

    </>
  )
}

File: ./app/(default)/pricing/pricing-section.tsx
Content:
import Image from 'next/image'
import Particles from '@/components/particles'
import Illustration from '@/public/images/page-illustration.svg'
import Pricing from '@/components/pricing'

export default function PricingSection() {
  return (
    <section className="relative">

      {/* Radial gradient */}
      <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
        <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
      </div>

      {/* Particles animation */}
      <Particles className="absolute inset-0 h-96 -z-10"  quantity={15} />

      {/* Illustration */}
      <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
        <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-32 pb-20 md:pt-40 md:pb-24">

          {/* Section header */}
          <div className="text-center pb-12 md:pb-20">
            <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">The security first platform</div>
            <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Simple plans for everyone</h1>
            <div className="max-w-3xl mx-auto">
              <p className="text-lg text-slate-400">Cut down overhead costs and ditch clunky software. Get a flexible, purpose-built tool to simplify your security with authentication services.</p>
            </div>
          </div>
          <Pricing />
        </div>
      </div>

    </section>
  )
}

File: ./app/(default)/pricing/page.tsx
Content:
export const metadata = {
  title: 'Pricing - Stellar',
  description: 'Page description',
}

import PricingSection from './pricing-section'
import Features from '@/components/features-05'
import Customers from '@/components/customers'
import Faqs from '@/components/faqs'
import Cta from '@/components/cta'

export default function Pricing() {
  return (
    <>
      {/* <PricingSection /> */}
      <Features />
      <Customers />
      <Faqs />
      <Cta />
    </>
  )
}

File: ./app/atoms/chatAtoms.ts
Content:
import { atom } from 'recoil';
import { Chat } from '../types/chat';
import { Stock } from '../types/stock';
import { StreamStatus } from '../types/streamStatus';

export const chatListAtom = atom<Chat[]>({
  key: 'chatListAtom',
  default: [],
});

export const chatStageAtom = atom<StreamStatus>({
  key: 'chatStageAtom',
  default: StreamStatus.IDLE,

});

export const inputTextAtom = atom<string>({
  key: 'inputTextAtom',
  default: '',
});
File: ./app/types/streamStatus.ts
Content:
export enum StreamStatus {
  IDLE,
  INPUTSUBMITTED,
  ISRESPONSEFETCHED,
  ISFETCHING,
}
File: ./app/types/chat.ts
Content:
export interface Chat {
  content: string;
  role: 'user' | 'assistant';
}
File: ./app/types/stock.ts
Content:
export interface Stock {
  name: string;
  code: string;
  image: string;
  price: number;
  prevPrice: number;
  unit: string;
  priceChangeRate: number;
}
File: ./app/chat/ChatClient.tsx
Content:
'use client';

import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import Image from 'next/image';
import { useRecoilState } from 'recoil';
import { chatListAtom, chatStageAtom, inputTextAtom } from '../atoms/chatAtoms';
import { StreamStatus } from '../types/streamStatus';
import { Chat } from '../types/chat';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import { Toaster, toast } from "react-hot-toast";
import "../styles/Chat.css";
import { colors } from '../styles/colors'
import { useSurveyStore } from '../store/surveyStore';

const isLogAvailable = false;

const ChatClient: React.FC = () => {
  const router = useRouter();
  const searchParams = useSearchParams();
  const summary = searchParams.get('summary');
  const [chatList, setChatList] = useRecoilState(chatListAtom);
  const [chatStage, setChatStage] = useRecoilState(chatStageAtom);
  const [inputText, setInputText] = useRecoilState(inputTextAtom);
  const chatEndRef = useRef<HTMLDivElement>(null);
  const [thumbsUpClicked, setThumbsUpClicked] = useState<{ [key: number]: boolean }>({});
  const [thumbsDownClicked, setThumbsDownClicked] = useState<{ [key: number]: boolean }>({});
  const [isPlaying, setIsPlaying] = useState<{ [key: number]: boolean }>({});
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const [copiedIndex, setCopiedIndex] = useState<number | null>(null);
  const abortControllerRef = useRef<AbortController | null>(null);
  const chatContainerRef = useRef<HTMLDivElement>(null);
  const [showScrollToTop, setShowScrollToTop] = useState(false);
  const [showScrollToBottom, setShowScrollToBottom] = useState(false);
  const [lastEnterPress, setLastEnterPress] = useState<number | null>(null);

  const textareaRef = useRef<HTMLTextAreaElement>(null);

  const { currentQuestion, answers, setAnswer, nextQuestion, prevQuestion } = useSurveyStore()


  const resetTextareaHeight = () => {
    if (textareaRef.current) {
      textareaRef.current.style.height = 'auto';
    }
  };

  useEffect(() => {
    if (summary) {
      setChatList([{ role: 'assistant', content: summary }]);
    }
  }, [summary, setChatList]);

  useEffect(() => {
    // chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [chatList]);

  const scrollToBottom = () => {
    if (chatContainerRef.current) {
      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;
    }
  };

  const handleSend = async (text?: string) => {
    const messageToSend = text || inputText;
    if (messageToSend.trim() === '' || chatStage !== StreamStatus.IDLE) return;
    setChatStage(StreamStatus.INPUTSUBMITTED);
    const newUserChat: Chat = { content: messageToSend, role: 'user' };
    setChatList(prevList => [...prevList, newUserChat]);
    setTimeout(() => {
      setInputText('');
      resetTextareaHeight();
    }, 100);

    try {
      abortControllerRef.current = new AbortController();
      const response = await fetch('http://211.188.55.96:8080/api/v6/chat/completion', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          messages: [
            ...chatList,
            newUserChat
          ]
        }),
        signal: abortControllerRef.current.signal,
      });

      setChatStage(StreamStatus.ISRESPONSEFETCHED);

      const reader = response.body?.getReader();
      const decoder = new TextDecoder();
      let assistantResponse = '';
      let isChatFetching :boolean = false;
      let logData = [];

      while (true) {
        const { done, value } = await reader?.read() || {};
        if (done) break;
        if (!isChatFetching) {
          isChatFetching = true;
          setChatStage(StreamStatus.ISFETCHING);
          // 새로운 빈 응답 메시지 추가
          setChatList(prevList => [...prevList, { content: '', role: 'assistant' }]);
        }
        const chunk = decoder.decode(value);
        const regex = /data:{"output":"(.+?)"}/g;
        const matches = Array.from(chunk.matchAll(regex));
        
        if (isLogAvailable) {
          logData.push({
            chunk: chunk,
            data: matches.map(match => match[1]).join('')
          });
        }
        
        if (matches.length > 0) {
          matches.forEach(match => {
            const output = match[1]; 
            assistantResponse += output;
          });
          
          setChatList(prevList => {
            const newList = [...prevList];
            newList[newList.length - 1] = { content: assistantResponse, role: 'assistant' };
            return newList;
          });
          scrollToBottom();
        }
      }



      if (isLogAvailable) {
        const logContent = logData.map(row => `chunk: ${row.chunk}\ndata: ${row.data}\n\n`).join('');
        
        const blob = new Blob([logContent], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = 'chat.log';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
      }

    } catch (error) {
      if (error instanceof Error && error.name === 'AbortError') {
        console.log('Request was aborted');
      } else {
        console.error("Error fetching chat response:", error);
      }
    }
      setChatStage(StreamStatus.IDLE);
  };

  const handleStopRequest = () => {
    if (abortControllerRef.current) {
      abortControllerRef.current.abort();
      abortControllerRef.current = null;
      setChatStage(StreamStatus.IDLE);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
    if (e.key === 'Enter' && e.shiftKey) {
      return;
    } else if (e.key === 'Enter') {
      const now = Date.now();
      if (lastEnterPress && now - lastEnterPress < 1000) {
        handleSend();
        setLastEnterPress(null);
      } else {
        setLastEnterPress(now);
      }
    }
  };

  const handleTextToSpeech = (text: string, chatId: number) => {
    if (isPlaying[chatId]) {
      // 재생 중이면 중지
      if (audioRef.current) {
        audioRef.current.pause();
        audioRef.current = null;
      }
      setIsPlaying(prev => ({ ...prev, [chatId]: false }));
    } else {
      // 재생 시작
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'ja-JP'; // 일본로 설정
      utterance.onend = () => {
        setIsPlaying(prev => ({ ...prev, [chatId]: false }));
      };
      setIsPlaying(prev => ({ ...prev, [chatId]: true }));
      window.speechSynthesis.speak(utterance);
    }
  };

  const handleCopyText = useCallback((text: string, index: number) => {
    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard.writeText(text).then(() => {
        setCopiedIndex(index);
        toast("클립보드에 복사되었습니다.", { icon: '✅' });
        setTimeout(() => setCopiedIndex(null), 2000);
      });
    } else {
      const textArea = document.createElement("textarea");
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        document.execCommand('copy');
        setCopiedIndex(index);
        toast("클립보드에 복사되었습니다.", { icon: '✅' });
        setTimeout(() => setCopiedIndex(null), 2000);
      } catch (err) {
        console.error('텍스트 복사에 실패했습니다', err);
        toast("복사에 실패했습니다.", { icon: '❌' });
      }
      document.body.removeChild(textArea);
    }
  }, []);

  const handleFeedback = useCallback((chatId: number, isPositive: boolean) => {
    if (isPositive) {
      setThumbsUpClicked(prev => {
        const newState = { ...prev, [chatId]: !prev[chatId] };
        if (newState[chatId]) {
          setThumbsDownClicked(prev => ({ ...prev, [chatId]: false }));
          toast("피드백 감사합니다!", { icon: '✅' });
        }
        return newState;
      });
    } else {
      setThumbsDownClicked(prev => {
        const newState = { ...prev, [chatId]: !prev[chatId] };
        if (newState[chatId]) {
          setThumbsUpClicked(prev => ({ ...prev, [chatId]: false }));
          toast("피드백 감사합니다!", { icon: '✅' });
        }
        return newState;
      });
    }
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      if (chatContainerRef.current) {
        const { scrollTop, scrollHeight, clientHeight } = chatContainerRef.current;
        const isNearTop = scrollTop < 100;
        const isNearBottom = scrollTop + clientHeight > scrollHeight - 100;

        setShowScrollToTop(!isNearTop);
        setShowScrollToBottom(!isNearBottom);
      }
    };

    const chatContainer = chatContainerRef.current;
    if (chatContainer) {
      chatContainer.addEventListener('scroll', handleScroll);
    }

    return () => {
      if (chatContainer) {
        chatContainer.removeEventListener('scroll', handleScroll);
      }
    };
  }, []);

  const scrollToTop = () => {
    if (chatContainerRef.current) {
      chatContainerRef.current.scrollTop = 0;
    }
  };

  const MemoizedImage = useMemo(() => React.memo<{ src: string; alt: string; width: number; height: number; className?: string }>(
    ({ src, alt, width, height, className }) => {
      return (
        <Image
          src={src}
          alt={alt}
          width={width}
          height={height}
          className={className}
        />
      );
    }
  ), []);

  const MemoizedFeedbackButton = useMemo(() => React.memo<{ onClick: () => void; icon: string; isActive: boolean }>(
    ({ onClick, icon, isActive }) => {
      return (
        <button
          onClick={onClick}
          className={`p-2 rounded-full hover:bg-gray-100 transition-colors duration-200`}
        >
          <MemoizedImage
            src={`/images/${icon}${isActive ? '_fill' : ''}.svg`}
            alt={icon}
            width={18}
            height={18}
            className={isActive ? '' : 'opacity-70'} // 비활성 상태일 때 약간 투명하게
          />
        </button>
      );
    }
  ), []);

  const MemoizedCopyButton = useMemo(() => React.memo<{ onClick: () => void }>(
    ({ onClick }) => {
      return (
        <button
          onClick={onClick}
          className={`p-2 rounded-full hover:bg-gray-100 transition-colors duration-200`}
        >
          <MemoizedImage
            src="/images/svg_copy.svg"
            alt="Copy"
            width={18}
            height={18}
            className="opacity-70" // 복사 버튼도 약간 투명하게
          />
        </button>
      );
    }
  ), []);

  useEffect(() => {
      toast(`답변0: ${answers[0]}, 답변1: ${answers[1]}, 답변2: ${answers[2]}, 답변3: ${answers[3]}`, {
        duration: 3000,
        icon: 'ℹ️',
      });
  }, [currentQuestion, answers]);

  return (
    <div className="flex flex-col h-screen bg-purple-50">
      <Toaster position="top-center" reverseOrder={false} />
      <div className="p-4 flex items-center justify-between">
        <button onClick={() => router.back()} className="mr-4">
          <MemoizedImage src="/images/svg_back.svg" alt="Back" width={24} height={24} />
        </button>
      </div>

      {/* Chat area */}
      <div 
        ref={chatContainerRef}
        className="flex-grow overflow-y-auto p-4 pb-[200px] relative"
      >
        <div className="max-w-[800px] mx-auto">
          {chatList.map((chat, index) => (
            <div key={index} className={`mb-4 ${chat.role === 'user' ? 'flex justify-end' : ''}`}>
              {chat.role === 'assistant' && (
                <div className="flex items-center mb-2">
                  <MemoizedImage
                    src="/images/timo.png"
                    alt="Avatar"
                    width={40}
                    height={40}
                    className="rounded-full block mr-2"
                  />
                  <span className="text-sm font-semibold text-gray-600">티모</span>
                </div>
              )}
              <div 
                className={`p-3 rounded-lg ${
                  chat.role === 'user' 
                    ? 'text-white max-w-[70%] ml-auto shadow-md' 
                    : 'bg-white text-gray-800 max-w-[80%] shadow-sm border border-gray-200'
                } select-text`}
                style={{
                  backgroundColor: chat.role === 'user' ? colors.kPurpleColor : 'white',
                }}
              >
                {chat.role === 'user' ? (
                  <p className="whitespace-pre-wrap">{chat.content}</p>
                ) : (
                  <ReactMarkdown 
                    remarkPlugins={[remarkGfm]}
                    components={{
                      a: ({ node, ...props }) => (
                        <a {...props} target="_blank" rel="noopener noreferrer" className="text-purple-600" />
                      ),
                      li: ({ node, ...props }) => (
                        <li {...props} className="list-disc ml-5" />
                      ),
                      p: ({ node, ...props }) => (
                        <p {...props} className="my-2 whitespace-pre-wrap" />
                      ),
                      table: ({ node, ...props }) => (
                        <table {...props} className="border-collapse border border-gray-300 my-2 w-full" />
                      ),
                      thead: ({ node, ...props }) => (
                        <thead {...props} className="bg-gray-100" />
                      ),
                      tr: ({ node, ...props }) => (
                        <tr {...props} className="border-b border-gray-300" />
                      ),
                      th: ({ node, ...props }) => (
                        <th {...props} className="border border-gray-300 px-4 py-2 font-bold" />
                      ),
                      td: ({ node, ...props }) => (
                        <td {...props} className="border border-gray-300 px-4 py-2" />
                      ),
                      code: ({ node, ...props }) => (
                        <code {...props} className="bg-gray-100 p-1 rounded" />
                      ),
                    }}
                  >
                    {chat.content
                      .replace(/\\n/g, '\n')
                      .replace(/\\u0026/g, '&') + 
                      (index === chatList.length - 1 && 
                       chat.role === 'assistant' && 
                       [StreamStatus.ISRESPONSEFETCHED, StreamStatus.ISFETCHING].includes(chatStage) 
                        ? ' ●' 
                        : ''
                      )
                    }
                  </ReactMarkdown>
                )}
              </div>
              {chat.role === 'assistant' && (
                <div className="mt-2">
                  <div className="inline-flex items-center bg-white rounded-lg border border-gray-300 p-1 space-x-1">
                    <MemoizedCopyButton
                      onClick={() => handleCopyText(chat.content, index)}
                    />
                    <MemoizedFeedbackButton
                      onClick={() => handleFeedback(index, true)}
                      icon="svg_thumbs_up"
                      isActive={thumbsUpClicked[index]}
                    />
                    <MemoizedFeedbackButton
                      onClick={() => handleFeedback(index, false)}
                      icon="svg_thumbs_down"
                      isActive={thumbsDownClicked[index]}
                    />
                  </div>
                </div>
              )}

            </div>
          ))}

          {[StreamStatus.INPUTSUBMITTED, StreamStatus.ISRESPONSEFETCHED, ].includes(chatStage) && (
            <div className="text-left">
              <div className="flex items-center mb-2">
                <MemoizedImage
                  src="/images/timo.png"
                  alt="Avatar"
                  width={40}
                  height={40}
                  className="rounded-full block mr-2"
                />
                <span className="text-sm font-semibold text-gray-600">티모</span>
              </div>
              {/* <div className="inline-block p-3 rounded-lg bg-white text-black"> */}
                 <>
                  <div className="h-6 bg-purple-200 rounded w-3/4 mr-4 mb-2 animate-pulse"></div>
                  <div className="h-6 bg-purple-200 rounded w-3/4 mr-2 mb-2 animate-pulse"></div>
                  <div className="h-6 bg-purple-200 rounded w-3/4 mr-2 mb-2 animate-pulse"></div>
                  <div className="h-6 bg-purple-200 rounded w-3/4 mr-2 mb-2 animate-pulse"></div>
                  <div className="h-6 bg-purple-200 rounded w-1/2 mr-2 mb-2 animate-pulse"></div>
                </>
                {/* <span className="animate-pulse">●</span> */}
              {/* </div> */}
            </div>
          )}

          <div className='h-[50px]'></div>
        </div>

        {/* Scroll buttons */}
        <div className="fixed bottom-24 right-4 flex flex-col gap-2">
          {showScrollToTop && (
            <button
              onClick={scrollToTop}
              className="bg-white p-2 rounded-full shadow-md hover:bg-purple-300"
            >
              <MemoizedImage 
                src="/images/svg_arrow_up.svg" 
                alt="Scroll to top" 
                width={24} 
                height={24} 
                className="invert"
              />
            </button>
          )}
          {showScrollToBottom && (
            <button
              onClick={scrollToBottom}
              className="bg-white p-2 rounded-full shadow-md hover:bg-purple-300"
            >
              <MemoizedImage 
                src="/images/svg_arrow_down.svg" 
                alt="Scroll to bottom" 
                width={24} 
                height={24} 
                className="invert"
              />
            </button>
          )}
        </div>
      </div>

      {/* Input area */}
      <div className="p-4 fixed bottom-0 left-0 right-0 bg-white md:bg-transparent center z-30">
        <div className="mx-auto max-w-[800px]">
          <div className="flex items-center bg-gray-100 rounded-[26px]">
            <button className="p-2">
              <MemoizedImage src="/images/svg_plus.svg" alt="Add" width={24} height={24} />
            </button>
            <div className='w-full flex items-center'>
              <textarea
                ref={textareaRef}
                value={inputText}
                rows={1}
                onChange={(e) => {
                  setInputText(e.target.value);
                  e.target.style.height = 'auto';
                  e.target.style.height = `${e.target.scrollHeight}px`;
                }}
                onKeyDown={handleKeyPress}
                placeholder="메시지를 입력해주세요"
                className="flex-grow bg-transparent outline-none border-none resize-none overflow-hidden min-h-[24px] text-[#1F2937] mr-2 focus:ring-0 focus:outline-none"
                style={{ maxHeight: '120px' }}
              />
              <button 
                onClick={() => chatStage === StreamStatus.IDLE ? handleSend() : handleStopRequest()}
                className={`w-[32px] h-[32px] rounded-full flex items-center justify-center mr-2`}
              >
                { [StreamStatus.INPUTSUBMITTED, StreamStatus.ISRESPONSEFETCHED, StreamStatus.ISFETCHING].includes(chatStage) ? (
                  <MemoizedImage src="/images/stop-circle.svg" alt="stop" width={32} height={32} />
                ) : (
                  <MemoizedImage src="/images/arrow-up-circle.svg" alt="send" width={32} height={32} />
                )}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};  

export default ChatClient;
File: ./app/chat/page.tsx
Content:
import ChatClient from './ChatClient'

export default function ChatPage() {
  return <ChatClient />
}

export const dynamic = 'force-dynamic'

File: ./app/styles/colors.ts
Content:
// styles/colors.ts

export const colors = {
  kTopTextColor: '#363644',
  kSubTextColor: '#787887',
  kGrayBadgeColor: '#F1F1F8',
  kGrayBorderColor: '#E0E0E4',
  kActiveBtnColor: '#121315',
  kDisabledBtnColor: '#E8E9EB',
  kWhiteColor: '#FFFFFF',
  kActiveNavColor: '#242628',
  kDisabledNavColor: '#B9BEC1',
  kDisabledTopNavColor: '#A2A9AC',
  kDivideColor: '#F5F6F8',
  kBadgeBgColor: '#F4F5F7',
  kReviewColor: '#697375',
  kSearchSubColor: '#B8BCBF',
  kDialogBgColor: '#23272A',
  kBlueColor: '#4769F7',
  kActiveBlueBtnColor: '#4769F7',
  kDisabledBlueBtnColor: '#4769F7',
  kPercentColor: '#EF7CD9',
  kTimeColor: '#3B10B7',
  kPrimaryBlueColor: '#0000FF',
  kSecondaryBlueColor: '#4769F7',
  kBrandColor: '#3B1E1E',
  kKakaoBrownColor: '#3B1E1E',
  kKakaoYellowColor: '#FDE500',
  kAppleColor: '#23272A',
  kReviewStarColor: '#FFAB36',
  kSystemErrorColor: '#FC444F',
  kSystemSuccessColor: '#30E181',
  kSystemWarningColor: '#FFD362',
  kBlackColor: '#000000',
  kPrimaryColor: '#0000FF', // Same as kPrimaryBlueColor
  kPrimaryGreenColor: '#30E181',
  kLikeColor: '#FD4E4E',
  kMouseColor80: '#808080',
  kMouseColor5F: '#5F5F5F',
  kCharcoalColor: '#36454F',
  kPurpleColor: '#6248BF',
  kLightPurpleColor: '#F8F4FF',
  kReceivedChatColor: '#323F41',
  kChatTimeColor: '#929292',
  kChatInputTextColor: '#909090',
  kChatBackgroundColor: '#F2F2F2',
  kChatSendBackgroundColor: '#D1D1D1',
  kIndigoColor: '#063A67',
  kMinusBlueColor: '#0077C8',
  kMenuSelectedBlueColor: '#3477f5',
  kGreenColor: '#317933',
  kLightGrayColor: '#EFF4F8',
  kGrayColor: '#8999AF',
  kCandleRedColor: '#FF5E55',
  kCandleGreenColor: '#00C368',
  kGrayButtonColor: '#EBECEE',
  kGrayBorderColor2: '#F1F2F4',
  kGrayIconColor: '#727272',
  kGrayIconBorderColor: '#E5E5E5',
  kGrayChatIconColor: '#8F939B',
  kGrayChatBorderColor: '#E2E2DD',
  kGrayChatTextColor: '#85837D',
} as const;

export type ColorKeys = keyof typeof colors;
File: ./app/layout.tsx
Content:
'use client'

import { RecoilRoot } from 'recoil'
import './css/style.css'
import { Inter } from 'next/font/google'
// import './styles/globals.css';

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

const metadata = {
  title: '버블버블 - AI 법률 서비스',
  description: '버블버블 - AI 법률 서비스',
  openGraph: {
    title: '버블버블 - AI 법률 서비스',
    description: '버블버블 - AI 법률 서비스',
    images: [
      {
        url: '/images/og-image.png', // Update this path
        width: 1200,
        height: 630,
        alt: '버블버블',
      },
    ],
    type: 'website',
    url: 'https://yourwebsite.com',
    siteName: '버블버블',
    locale: 'ko_KR',
  },
  twitter: {
    card: 'summary_large_image',
    title: '버블버블 - AI 법률 서비스',
    description: '버블버블 - AI 법률 서비스',
    images: ['/images/og-image.png'], // Update this path
  },
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="ko" className="scroll-smooth">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff" />
        
      </head>
      <body className={`${inter.variable} font-inter antialiased bg-slate-900 text-slate-100 tracking-tight`}>
        <div className="flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip">
            {children}
        </div>
      </body>
    </html>
  )
}

File: ./app/api/submitFeedback/route.ts
Content:
import { NextResponse } from 'next/server';

export async function POST(req: Request) {
  try {
    console.log('Received request to send to Slack');
    
    const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL;
    console.log('Slack Webhook URL:', slackWebhookUrl ? 'Set' : 'Not set');

    if (!slackWebhookUrl) {
      console.error('Slack Webhook URL is not defined');
      return NextResponse.json({ message: 'Server configuration error' }, { status: 500 });
    }

    const { rating, feedback, contactInfo } = await req.json();
    console.log('Received rating:', rating);
    console.log('Received feedback:', feedback);
    console.log('Received contact info:', contactInfo);

    const message = {
      text: "🎉 새로운 피드백이 도착했습니다! 🎉",
      attachments: [
        {
          color: "#FF5918",
          title: "피드백",
          fields: [
            {
              title: "별점",
              value: `${rating} / 5`,
              short: false
            },
            {
              title: "피드백 내용",
              value: feedback || '응답 없음',
              short: false
            },
            {
              title: "연락처 정보",
              value: `전화번호: ${contactInfo.phone || '없음'}, 이메일: ${contactInfo.email || '없음'}`,
              short: false
            }
          ],
        }
      ],
      footer: `응답 시간: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}`
    };

    console.log('Sending message to Slack:', JSON.stringify(message));

    const response = await fetch(slackWebhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(message),
    });

    if (!response.ok) {
      console.error(`Slack API responded with status: ${response.status}`);
      const responseText = await response.text();
      console.error('Slack API response:', responseText);
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    console.log('Message sent to Slack successfully');
    return NextResponse.json({ message: '피드백이 Slack으로 전송되었습니다.' });
  } catch (error) {
    console.error('Error in submitFeedback route:', error);
    return NextResponse.json({ message: 'Slack으로 메시지 전송 중 오류 발생', error: (error as Error).message }, { status: 500 });
  }
}
File: ./app/api/hello/route.ts
Content:
export async function GET(request: Request) {
  return new Response('Hello, Next.js!')
}

File: ./app/api/sendQuestionToSlack/route.ts
Content:
import { NextResponse } from 'next/server';

export async function POST(req: Request) {
  try {
    console.log('Received request to send to Slack');
    
    const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL;
    console.log('Slack Webhook URL:', slackWebhookUrl ? 'Set' : 'Not set');

    if (!slackWebhookUrl) {
      console.error('Slack Webhook URL is not defined');
      return NextResponse.json({ message: 'Server configuration error' }, { status: 500 });
    }

    const { answers } = await req.json();
    console.log('Received answers:', answers);

    const surveyResults = Object.entries(answers).map(([key, value]) => ({
      question: key,
      answer: Array.isArray(value) ? value.join(', ') : value || '응답 없음'
    }));

    const message = {
      text: "🎉 새로운 설문 응답이 도착했습니다! 🎉",
      attachments: [
        {
          color: "#36a64f",
          title: "설문 응답",
          fields: surveyResults.map((result, index) => ({
            title: `Q${index + 1}: ${result.question}`,
            value: result.answer,
            short: false
          })),
        }
      ],
      footer: `응답 시간: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}`
    };

    console.log('Sending message to Slack:', JSON.stringify(message));

    const response = await fetch(slackWebhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(message),
    });

    if (!response.ok) {
      console.error(`Slack API responded with status: ${response.status}`);
      const responseText = await response.text();
      console.error('Slack API response:', responseText);
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    console.log('Message sent to Slack successfully');
    return NextResponse.json({ message: '설문 결과가 Slack으로 전송되었습니다.' });
  } catch (error) {
    console.error('Error in sendToSlack route:', error);
    return NextResponse.json({ message: 'Slack으로 메시지 전송 중 오류 발생', error: (error as Error).message }, { status: 500 });
  }
}
File: ./app/api/registerWaitList/route.ts
Content:
import { NextResponse } from 'next/server';

export async function POST(req: Request) {
  const { email } = await req.json();
  const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL;

  if (!slackWebhookUrl) {
    console.error('Slack Webhook URL is not defined');
    return NextResponse.json({ message: 'Server configuration error' }, { status: 500 });
  }

  const message = {
    text: "🎉 새로운 대기자 명단 등록이 있습니다! 🎉",
    blocks: [
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: `*새로운 대기자 등록*\n이메일: ${email}`
        }
      },
      {
        type: "context",
        elements: [
          {
            type: "mrkdwn",
            text: `등록 시간: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}`
          }
        ]
      }
    ]
  };

  try {
    const response = await fetch(slackWebhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(message),
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    return NextResponse.json({ message: '대기자 명단 등록이 완료되었습니다.' });
  } catch (error) {
    console.error('Slack으로 메시지 전송 중 오류 발생:', error);
    return NextResponse.json({ message: 'Slack으로 메시지 전송 중 오류 발생' }, { status: 500 });
  }
}
File: ./app/api/sendResponseToSlack/route.ts
Content:
import { NextResponse } from 'next/server';

export async function POST(req: Request) {
  try {
    console.log('Received request to send to Slack');
    
    const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL;
    console.log('Slack Webhook URL:', slackWebhookUrl ? 'Set' : 'Not set');

    if (!slackWebhookUrl) {
      console.error('Slack Webhook URL is not defined');
      return NextResponse.json({ message: 'Server configuration error' }, { status: 500 });
    }

    const { answers, recommendedBreads } = await req.json();
    console.log('Received answers:', answers);
    console.log('Received recommended breads:', recommendedBreads);

    const surveyResults = Object.entries(answers).map(([key, value]) => ({
      question: key,
      answer: Array.isArray(value) ? value.join(', ') : value || '응답 없음'
    }));

    const message = {
      text: "🎉 새로운 설문 응답이 도착했습니다! 🎉",
      attachments: [
        {
          color: "#36a64f",
          title: "설문 응답",
          fields: surveyResults.map((result, index) => ({
            title: `Q${index + 1}: ${result.question}`,
            value: result.answer,
            short: false
          })),
        },
        {
          color: "#f2c744",
          title: "추천된 빵",
          fields: recommendedBreads.map((bread: any, index: number) => ({
            title: `추천 ${index + 1}: ${bread.name}`,
            value: `가격: ${bread.price}\n특징: ${bread.features}\n추천 이유: ${bread.reason}\n`,
            short: false
          })),
        }
      ],
      footer: `응답 시간: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}`
    };

    console.log('Sending message to Slack:', JSON.stringify(message));

    const response = await fetch(slackWebhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(message),
    });

    if (!response.ok) {
      console.error(`Slack API responded with status: ${response.status}`);
      const responseText = await response.text();
      console.error('Slack API response:', responseText);
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    console.log('Message sent to Slack successfully');
    return NextResponse.json({ message: '설문 결과가 Slack으로 전송되었습니다.' });
  } catch (error) {
    console.error('Error in sendToSlack route:', error);
    return NextResponse.json({ message: 'Slack으로 메시지 전송 중 오류 발생', error: (error as Error).message }, { status: 500 });
  }
}
File: ./app/(auth)/signup/page.tsx
Content:
export const metadata = {
  title: 'Sign Up - Stellar',
  description: 'Page description',
}

import Link from 'next/link'
import AuthLogo from '../auth-logo'

export default function SignUp() {
  return (
    <>
      {/* Page header */}
      <div className="max-w-3xl mx-auto text-center pb-12">
        {/* Logo */}
        <AuthLogo />
        {/* Page title */}
        <h1 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">Create your free account</h1>
      </div>

      {/* Form */}
      <div className="max-w-sm mx-auto">

        <form>
          <div className="space-y-4">
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="company">Company <span className="text-rose-500">*</span></label>
              <input id="company" className="form-input w-full" type="text" placeholder="mE.g., Acme Inc." required />
            </div>
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="full-name">Full Name <span className="text-rose-500">*</span></label>
              <input id="full-name" className="form-input w-full" type="text" placeholder="E.g., Mark Rossi" required />
            </div>
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="email">Email <span className="text-rose-500">*</span></label>
              <input id="email" className="form-input w-full" type="email" placeholder="markrossi@company.com" required />
            </div>
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="password">Password <span className="text-rose-500">*</span></label>
              <input id="password" className="form-input w-full" type="password" autoComplete="on" required />
            </div>
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="referrer">Where did you hear about us? <span className="text-rose-500">*</span></label>
              <select id="referrer" className="form-select text-sm py-2 w-full" required>
                <option>Google</option>
                <option>Medium</option>
                <option>GitHub</option>
              </select>
            </div>
          </div>
          <div className="mt-6">
            <button className="btn text-sm text-white bg-sky-500 hover:bg-sky-600 w-full shadow-sm group">
              Sign Up <span className="tracking-normal text-sky-300 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </button>
          </div>
        </form>

        <div className="text-center mt-4">
          <div className="text-sm text-slate-400">
            Already have an account? <Link className="font-medium text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out" href="/signin">Sign in</Link>
          </div>
        </div>

        {/* Divider */}
        <div className="flex items-center my-6">
          <div className="border-t border-slate-800 grow mr-3" aria-hidden="true" />
          <div className="text-sm text-slate-500 italic">or</div>
          <div className="border-t border-slate-800 grow ml-3" aria-hidden="true" />
        </div>

        {/* Social login */}
        <div className="flex space-x-3">
          <button className="btn text-slate-300 hover:text-white transition duration-150 ease-in-out w-full group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none h-9">
            <span className="relative">
              <span className="sr-only">Continue with Twitter</span>
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="14" height="12">
                <path d="m4.34 0 2.995 3.836L10.801 0h2.103L8.311 5.084 13.714 12H9.482L6.169 7.806 2.375 12H.271l4.915-5.436L0 0h4.34Zm-.635 1.155H2.457l7.607 9.627h1.165L3.705 1.155Z" />
              </svg>
            </span>
          </button>
          <button className="btn text-slate-300 hover:text-white transition duration-150 ease-in-out w-full group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none h-9">
            <span className="relative">
              <span className="sr-only">Continue with GitHub</span>
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="16" height="15">
                <path d="M7.488 0C3.37 0 0 3.37 0 7.488c0 3.276 2.153 6.084 5.148 7.113.374.094.468-.187.468-.374v-1.31c-2.06.467-2.527-.936-2.527-.936-.375-.843-.843-1.124-.843-1.124-.655-.468.094-.468.094-.468.749.094 1.123.75 1.123.75.655 1.216 1.778.842 2.153.654.093-.468.28-.842.468-1.03-1.685-.186-3.37-.842-3.37-3.743 0-.843.281-1.498.75-1.966-.094-.187-.375-.936.093-1.965 0 0 .655-.187 2.059.749a6.035 6.035 0 0 1 1.872-.281c.655 0 1.31.093 1.872.28 1.404-.935 2.059-.748 2.059-.748.374 1.03.187 1.778.094 1.965.468.562.748 1.217.748 1.966 0 2.901-1.778 3.463-3.463 3.65.281.375.562.843.562 1.498v2.059c0 .187.093.468.561.374 2.996-1.03 5.148-3.837 5.148-7.113C14.976 3.37 11.606 0 7.488 0Z" />
              </svg>
            </span>
          </button>
        </div>

      </div>
    </>
  )
}

File: ./app/(auth)/signin/page.tsx
Content:
export const metadata = {
  title: 'Sign In - Stellar',
  description: 'Page description',
}

import Link from 'next/link'
import AuthLogo from '../auth-logo'

export default function SignIn() {
  return (
    <>
      {/* Page header */}
      <div className="max-w-3xl mx-auto text-center pb-12">
        {/* Logo */}
        <AuthLogo />
        {/* Page title */}
        <h1 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">Sign in to your account</h1>
      </div>

      {/* Form */}
      <div className="max-w-sm mx-auto">

        <form>
          <div className="space-y-4">
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="email">Email</label>
              <input id="email" className="form-input w-full" type="email" required />
            </div>
            <div>
              <div className="flex justify-between">
                <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="password">Password</label>
                <Link className="text-sm font-medium text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out ml-2" href="/reset-password">Forgot?</Link>
              </div>
              <input id="password" className="form-input w-full" type="password" autoComplete="on" required />
            </div>
          </div>
          <div className="mt-6">
            <button className="btn text-sm text-white bg-sky-500 hover:bg-sky-600 w-full shadow-sm group">
              Sign In <span className="tracking-normal text-sky-300 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </button>
          </div>
        </form>

        <div className="text-center mt-4">
          <div className="text-sm text-slate-400">
            Don't have an account? <Link className="font-medium text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out" href="/signup">Sign up</Link>
          </div>
        </div>

        {/* Divider */}
        <div className="flex items-center my-6">
          <div className="border-t border-slate-800 grow mr-3" aria-hidden="true" />
          <div className="text-sm text-slate-500 italic">or</div>
          <div className="border-t border-slate-800 grow ml-3" aria-hidden="true" />
        </div>

        {/* Social login */}
        <div className="flex space-x-3">
          <button className="btn text-slate-300 hover:text-white transition duration-150 ease-in-out w-full group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none h-9">
            <span className="relative">
              <span className="sr-only">Continue with Twitter</span>
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="14" height="12">
                <path d="m4.34 0 2.995 3.836L10.801 0h2.103L8.311 5.084 13.714 12H9.482L6.169 7.806 2.375 12H.271l4.915-5.436L0 0h4.34Zm-.635 1.155H2.457l7.607 9.627h1.165L3.705 1.155Z" />
              </svg>
            </span>
          </button>
          <button className="btn text-slate-300 hover:text-white transition duration-150 ease-in-out w-full group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none h-9">
            <span className="relative">
              <span className="sr-only">Continue with GitHub</span>
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="16" height="15">
                <path d="M7.488 0C3.37 0 0 3.37 0 7.488c0 3.276 2.153 6.084 5.148 7.113.374.094.468-.187.468-.374v-1.31c-2.06.467-2.527-.936-2.527-.936-.375-.843-.843-1.124-.843-1.124-.655-.468.094-.468.094-.468.749.094 1.123.75 1.123.75.655 1.216 1.778.842 2.153.654.093-.468.28-.842.468-1.03-1.685-.186-3.37-.842-3.37-3.743 0-.843.281-1.498.75-1.966-.094-.187-.375-.936.093-1.965 0 0 .655-.187 2.059.749a6.035 6.035 0 0 1 1.872-.281c.655 0 1.31.093 1.872.28 1.404-.935 2.059-.748 2.059-.748.374 1.03.187 1.778.094 1.965.468.562.748 1.217.748 1.966 0 2.901-1.778 3.463-3.463 3.65.281.375.562.843.562 1.498v2.059c0 .187.093.468.561.374 2.996-1.03 5.148-3.837 5.148-7.113C14.976 3.37 11.606 0 7.488 0Z" />
              </svg>
            </span>
          </button>
        </div>

      </div>
    </>
  )
}

File: ./app/(auth)/layout.tsx
Content:
import Image from 'next/image'
import Illustration from '@/public/images/auth-illustration.svg'

export default function AuthLayout({
  children,
}: {
  children: React.ReactNode
}) {  
  return (
    <main className="grow">

      <section className="relative">

        {/* Illustration */}
        <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-36 blur-2xl opacity-70 pointer-events-none -z-10" aria-hidden="true">
          <Image src={Illustration} className="max-w-none" width={1440} height={450} priority alt="Page Illustration" />
        </div>

        <div className="relative max-w-6xl mx-auto px-4 sm:px-6">
          <div className="pt-32 pb-12 md:pt-40 md:pb-20">

            {children}

          </div>
        </div>

      </section>

    </main>
  )
}

File: ./app/(auth)/reset-password/page.tsx
Content:
export const metadata = {
  title: 'Reset Password - Stellar',
  description: 'Page description',
}

import AuthLogo from '../auth-logo'

export default function ResetPassword() {
  return (
    <>
      {/* Page header */}
      <div className="max-w-3xl mx-auto text-center pb-12">
        {/* Logo */}
        <AuthLogo />
        {/* Page title */}
        <h1 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">Reset your password</h1>
      </div>

      {/* Form */}
      <div className="max-w-sm mx-auto">

        <form>
          <div className="space-y-4">
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="email">Email</label>
              <input id="email" className="form-input w-full" type="email" required />
            </div>
          </div>
          <div className="mt-6">
            <button className="btn text-sm text-white bg-sky-500 hover:bg-sky-600 w-full shadow-sm group">
              Reset Password <span className="tracking-normal text-sky-300 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </button>
          </div>
        </form>

      </div>
    </>
  )
}

File: ./app/(auth)/auth-logo.tsx
Content:
import Link from 'next/link'
import Image from 'next/image'
import Logo from '@/public/images/logo.svg'

export default function AuthLogo() {
  return (
    <div className="mb-5">
      <Link className="inline-flex" href="/">
        <div className="relative flex items-center justify-center w-16 h-16 border border-transparent rounded-2xl shadow-2xl [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-2xl">
          <Image className="relative" src={Logo} width={42} height={42} alt="Stellar" />
        </div>
      </Link>
    </div>
  )
}
File: ./app/store/surveyStore.ts
Content:
import { create } from 'zustand'
import { persist } from 'zustand/middleware'

interface SurveyState {
  currentQuestion: number
  answers: {
    age?: string
    category?: string
    subcategory?: string
    subsubcategory?: string
    [key: string]: string | string[] | undefined
  }
  setAnswer: (questionId: string, answer: string | string[]) => void
  nextQuestion: () => void
  prevQuestion: () => void
  resetSurvey: () => void
}

export const useSurveyStore = create<SurveyState>()(
  persist(
    (set) => ({
      currentQuestion: 0,
      answers: {},
      setAnswer: (questionId, answer) => 
        set((state) => ({
          answers: {
            ...state.answers,
            [questionId]: answer
          }
        })),
      nextQuestion: () => 
        set((state) => ({
          currentQuestion: state.currentQuestion + 1
        })),
      prevQuestion: () => 
        set((state) => ({
          currentQuestion: Math.max(0, state.currentQuestion - 1)
        })),
      resetSurvey: () => 
        set({
          currentQuestion: 0,
          answers: {}
        })
    }),
    {
      name: 'survey-storage',
    }
  )
)
File: ./.next/types/app/(default)/page.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/(default)/page.tsx
import * as entry from '../../../../app/(default)/page.js'
import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'

type TEntry = typeof import('../../../../app/(default)/page.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  
}, TEntry, ''>>()

// Check the prop type of the entry function
checkFields<Diff<PageProps, FirstArg<TEntry['default']>, 'default'>>()

// Check the arguments and return type of the generateMetadata function
if ('generateMetadata' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
  checkFields<Diff<ResolvingMetadata, SecondArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
}

// Check the arguments and return type of the generateViewport function
if ('generateViewport' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
  checkFields<Diff<ResolvingViewport, SecondArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never



function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./.next/types/app/(default)/layout.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/(default)/layout.tsx
import * as entry from '../../../../app/(default)/layout.js'
import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'

type TEntry = typeof import('../../../../app/(default)/layout.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  
}, TEntry, ''>>()

// Check the prop type of the entry function
checkFields<Diff<LayoutProps, FirstArg<TEntry['default']>, 'default'>>()

// Check the arguments and return type of the generateMetadata function
if ('generateMetadata' in entry) {
  checkFields<Diff<LayoutProps, FirstArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
  checkFields<Diff<ResolvingMetadata, SecondArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
}

// Check the arguments and return type of the generateViewport function
if ('generateViewport' in entry) {
  checkFields<Diff<LayoutProps, FirstArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
  checkFields<Diff<ResolvingViewport, SecondArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never



function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./.next/types/app/(default)/survey/page.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/(default)/survey/page.tsx
import * as entry from '../../../../../app/(default)/survey/page.js'
import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'

type TEntry = typeof import('../../../../../app/(default)/survey/page.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  
}, TEntry, ''>>()

// Check the prop type of the entry function
checkFields<Diff<PageProps, FirstArg<TEntry['default']>, 'default'>>()

// Check the arguments and return type of the generateMetadata function
if ('generateMetadata' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
  checkFields<Diff<ResolvingMetadata, SecondArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
}

// Check the arguments and return type of the generateViewport function
if ('generateViewport' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
  checkFields<Diff<ResolvingViewport, SecondArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never



function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./.next/types/app/chat/page.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/chat/page.tsx
import * as entry from '../../../../app/chat/page.js'
import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'

type TEntry = typeof import('../../../../app/chat/page.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  
}, TEntry, ''>>()

// Check the prop type of the entry function
checkFields<Diff<PageProps, FirstArg<TEntry['default']>, 'default'>>()

// Check the arguments and return type of the generateMetadata function
if ('generateMetadata' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
  checkFields<Diff<ResolvingMetadata, SecondArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
}

// Check the arguments and return type of the generateViewport function
if ('generateViewport' in entry) {
  checkFields<Diff<PageProps, FirstArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
  checkFields<Diff<ResolvingViewport, SecondArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never



function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./.next/types/app/layout.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/layout.tsx
import * as entry from '../../../app/layout.js'
import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'

type TEntry = typeof import('../../../app/layout.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  default: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
  metadata?: any
  generateMetadata?: Function
  viewport?: any
  generateViewport?: Function
  
}, TEntry, ''>>()

// Check the prop type of the entry function
checkFields<Diff<LayoutProps, FirstArg<TEntry['default']>, 'default'>>()

// Check the arguments and return type of the generateMetadata function
if ('generateMetadata' in entry) {
  checkFields<Diff<LayoutProps, FirstArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
  checkFields<Diff<ResolvingMetadata, SecondArg<MaybeField<TEntry, 'generateMetadata'>>, 'generateMetadata'>>()
}

// Check the arguments and return type of the generateViewport function
if ('generateViewport' in entry) {
  checkFields<Diff<LayoutProps, FirstArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
  checkFields<Diff<ResolvingViewport, SecondArg<MaybeField<TEntry, 'generateViewport'>>, 'generateViewport'>>()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never



function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./.next/types/app/api/sendQuestionToSlack/route.ts
Content:
// File: /Users/icheolhui/Mirror/Github/React_NextJS/bubblebubble/app/api/sendQuestionToSlack/route.ts
import * as entry from '../../../../../app/api/sendQuestionToSlack/route.js'
import type { NextRequest } from 'next/server.js'

type TEntry = typeof import('../../../../../app/api/sendQuestionToSlack/route.js')

// Check that the entry is a valid entry
checkFields<Diff<{
  GET?: Function
  HEAD?: Function
  OPTIONS?: Function
  POST?: Function
  PUT?: Function
  DELETE?: Function
  PATCH?: Function
  config?: {}
  generateStaticParams?: Function
  revalidate?: RevalidateRange<TEntry> | false
  dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
  dynamicParams?: boolean
  fetchCache?: 'auto' | 'force-no-store' | 'only-no-store' | 'default-no-store' | 'default-cache' | 'only-cache' | 'force-cache'
  preferredRegion?: 'auto' | 'global' | 'home' | string | string[]
  runtime?: 'nodejs' | 'experimental-edge' | 'edge'
  maxDuration?: number
  
}, TEntry, ''>>()

// Check the prop type of the entry function
if ('GET' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'GET'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'GET'>>
      },
      'GET'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'GET'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'GET'>>
      },
      'GET'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'GET',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'GET',
        __return_type__: ReturnType<MaybeField<TEntry, 'GET'>>
      },
      'GET'
    >
  >()
}
// Check the prop type of the entry function
if ('HEAD' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'HEAD'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'HEAD'>>
      },
      'HEAD'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'HEAD'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'HEAD'>>
      },
      'HEAD'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'HEAD',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'HEAD',
        __return_type__: ReturnType<MaybeField<TEntry, 'HEAD'>>
      },
      'HEAD'
    >
  >()
}
// Check the prop type of the entry function
if ('OPTIONS' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'OPTIONS'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'OPTIONS'>>
      },
      'OPTIONS'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'OPTIONS'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'OPTIONS'>>
      },
      'OPTIONS'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'OPTIONS',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'OPTIONS',
        __return_type__: ReturnType<MaybeField<TEntry, 'OPTIONS'>>
      },
      'OPTIONS'
    >
  >()
}
// Check the prop type of the entry function
if ('POST' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'POST'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'POST'>>
      },
      'POST'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'POST'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'POST'>>
      },
      'POST'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'POST',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'POST',
        __return_type__: ReturnType<MaybeField<TEntry, 'POST'>>
      },
      'POST'
    >
  >()
}
// Check the prop type of the entry function
if ('PUT' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'PUT'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PUT'>>
      },
      'PUT'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'PUT'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PUT'>>
      },
      'PUT'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'PUT',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'PUT',
        __return_type__: ReturnType<MaybeField<TEntry, 'PUT'>>
      },
      'PUT'
    >
  >()
}
// Check the prop type of the entry function
if ('DELETE' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'DELETE'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'DELETE'>>
      },
      'DELETE'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'DELETE'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'DELETE'>>
      },
      'DELETE'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'DELETE',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'DELETE',
        __return_type__: ReturnType<MaybeField<TEntry, 'DELETE'>>
      },
      'DELETE'
    >
  >()
}
// Check the prop type of the entry function
if ('PATCH' in entry) {
  checkFields<
    Diff<
      ParamCheck<Request | NextRequest>,
      {
        __tag__: 'PATCH'
        __param_position__: 'first'
        __param_type__: FirstArg<MaybeField<TEntry, 'PATCH'>>
      },
      'PATCH'
    >
  >()
  checkFields<
    Diff<
      ParamCheck<PageParams>,
      {
        __tag__: 'PATCH'
        __param_position__: 'second'
        __param_type__: SecondArg<MaybeField<TEntry, 'PATCH'>>
      },
      'PATCH'
    >
  >()
  
  checkFields<
    Diff<
      {
        __tag__: 'PATCH',
        __return_type__: Response | void | never | Promise<Response | void | never>
      },
      {
        __tag__: 'PATCH',
        __return_type__: ReturnType<MaybeField<TEntry, 'PATCH'>>
      },
      'PATCH'
    >
  >()
}

// Check the arguments and return type of the generateStaticParams function
if ('generateStaticParams' in entry) {
  checkFields<Diff<{ params: PageParams }, FirstArg<MaybeField<TEntry, 'generateStaticParams'>>, 'generateStaticParams'>>()
  checkFields<Diff<{ __tag__: 'generateStaticParams', __return_type__: any[] | Promise<any[]> }, { __tag__: 'generateStaticParams', __return_type__: ReturnType<MaybeField<TEntry, 'generateStaticParams'>> }>>()
}

type PageParams = any
export interface PageProps {
  params?: any
  searchParams?: any
}
export interface LayoutProps {
  children?: React.ReactNode

  params?: any
}

// =============
// Utility types
type RevalidateRange<T> = T extends { revalidate: any } ? NonNegative<T['revalidate']> : never

// If T is unknown or any, it will be an empty {} type. Otherwise, it will be the same as Omit<T, keyof Base>.
type OmitWithTag<T, K extends keyof any, _M> = Omit<T, K>
type Diff<Base, T extends Base, Message extends string = ''> = 0 extends (1 & T) ? {} : OmitWithTag<T, keyof Base, Message>

type FirstArg<T extends Function> = T extends (...args: [infer T, any]) => any ? unknown extends T ? any : T : never
type SecondArg<T extends Function> = T extends (...args: [any, infer T]) => any ? unknown extends T ? any : T : never
type MaybeField<T, K extends string> = T extends { [k in K]: infer G } ? G extends Function ? G : never : never

type ParamCheck<T> = {
  __tag__: string
  __param_position__: string
  __param_type__: T
}

function checkFields<_ extends { [k in keyof any]: never }>() {}

// https://github.com/sindresorhus/type-fest
type Numeric = number | bigint
type Zero = 0 | 0n
type Negative<T extends Numeric> = T extends Zero ? never : `${T}` extends `-${string}` ? T : never
type NonNegative<T extends Numeric> = T extends Zero ? T : Negative<T> extends never ? T : '__invalid_negative_number__'

File: ./next-env.d.ts
Content:
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

File: ./.contentlayer/generated/types.d.ts
Content:
// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Update = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Update'
  title: string
  publishedAt: string
  image: string
  /** MDX file body */
  body: MDX
  slug: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Update
export type DocumentTypeNames = 'Update'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allUpdates: Update[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Update: Update
}

export type NestedTypeMap = {

}

 
File: ./.contentlayer/generated/index.d.ts
Content:
// NOTE This file is auto-generated by Contentlayer

import { Update, DocumentTypes, DataExports } from './types'
import { SourceProvideSchemaErrorJSON, SourceFetchDataErrorJSON } from 'contentlayer/core'

export * from './types'

export declare const allUpdates: Update[]

export declare const allDocuments: DocumentTypes[]



File: ./components/mdx/update-mdx.tsx
Content:
import { useMDXComponent } from 'next-contentlayer/hooks'

const mdxComponents = {}

interface MdxProps {
  code: string
}

export function UpdateMdx({ code }: MdxProps) {
  const Component = useMDXComponent(code)

  return (
    <div className="prose max-w-none text-slate-400 prose-p:leading-relaxed prose-a:text-sky-500 prose-a:no-underline hover:prose-a:underline prose-strong:text-slate-50 prose-strong:font-medium">
      <Component components={{ ...mdxComponents }} />
    </div>
  )
}

File: ./components/hero.tsx
Content:
'use client'
import Image from 'next/image'
import Particles from './particles'
import Illustration from '@/public/images/glow-bottom.svg'
import { useState } from 'react';

export default function Hero() {
   const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      const response = await fetch('/api/registerWaitList', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });
      if (response.ok) {
        setMessage('버블버블 서비스 소식을 받아보실 수 있습니다!');
        setEmail('');
      } else {
        setMessage('등록 중 오류가 발생했습니다. 다시 시도해주세요.');
      }
    } catch (error) {
      setMessage('서버 오류가 발생했습니다. 나중에 다시 시도해주세요.');
    }
  };
  return (
    <section>
      <div className="relative max-w-6xl mx-auto px-4 sm:px-6">

        {/* Particles animation */}
        <Particles className="absolute inset-0 -z-10" />

        {/* Illustration */}
        <div className="absolute inset-0 -z-10 -mx-28 rounded-b-[3rem] pointer-events-none overflow-hidden" aria-hidden="true">
          <div className="absolute left-1/2 -translate-x-1/2 bottom-0 -z-10">
            <Image src={Illustration} className="max-w-none" width={2146} priority alt="Hero Illustration" />
          </div>
        </div>

        <div className="pt-32 pb-16 md:pt-52 md:pb-32">

          {/* Hero content */}
          <div className="max-w-3xl mx-auto text-center">
            <div className="mb-6" data-aos="fade-down">
              <div className="inline-flex relative before:absolute before:inset-0 before:bg-sky-500 before:blur-md">
                <a className="btn-sm py-0.5 text-slate-300 hover:text-white transition duration-150 ease-in-out group [background:linear-gradient(theme(colors.sky.500),_theme(colors.sky.500))_padding-box,_linear-gradient(theme(colors.sky.500),_theme(colors.sky.200)_75%,_theme(colors.transparent)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/50 before:rounded-full before:pointer-events-none shadow" href="#0">
                  <span className="relative inline-flex items-center">
                    버블버블 서비스 런칭!
                  </span>
                </a>
              </div>
            </div>
            <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4" data-aos="fade-down">버블버블: 우주에서 온 당신만의 법률 수호자</h1>
            <p className="text-lg text-slate-200 mb-8" data-aos="fade-down" data-aos-delay="200">
              법률 문제로 고민이신가요? 복잡한 법률 용어에 지치셨나요? 복잡한 법을 Bubble Bubble 해결하세요! 플로라의 따뜻한 위로와 티모의 명쾌한 해결책으로 여러분의 법률 고민을 편안하고 쉽게 해결해드려요. 
            </p>
            <p className="text-sm text-slate-300 mb-6" data-aos="fade-down" data-aos-delay="300">
              지구로부터 250만 광년 떨어진 '네오 주리디카' 행성에서 온 플로라와 티모. 대한민국의 복잡한 법률 시스템을 보고 안타까움을 느낀 두 친구는 이 문제를 쉽게 해결하기 위해 왔습니다. 플로라의 따뜻한 공감 능력과 티모의 날카로운 분석력으로 무장한 그들은 이제 대한민국 시민들에게 독보적인 법률 자문과 위로를 제공합니다. 그들의 목표는 단 하나, 복잡한 법의 세계에서 길을 잃은 이들에게 빛이 되는 것입니다.
            </p>
          
            <br/>
            <div className="mt-4 max-w-xs mx-auto space-y-4" data-aos="fade-down" data-aos-delay="400">
              <div>
                <a className="btn text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full transition duration-150 ease-in-out group" href="/survey">
                  플로라와 티모에게 물어보기 <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                </a>
              </div>
              {/* <div>
                <a className="btn text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full transition duration-150 ease-in-out group" href="/game">
                  버블버블 게임하기 <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                </a>
              </div> */}
              <br/>
              
           
              {/* <div>
                <a className="btn text-slate-200 hover:text-white bg-slate-900 bg-opacity-25 hover:bg-opacity-30 w-full transition duration-150 ease-in-out group" href="mailto:wks0968@gmail.com?subject=[버블버블]%20문의사항:%20&body=안녕하세요,%0D%0A%0D%0A버블버블에%20대한%20문의사항을%20아래에%20작성해%20주세요.%0D%0A%0D%0A1.%20문의%20유형:%20(예:%20서비스%20이용,%20기술적%20문제,%20제안사항%20등)%0D%0A2.%20상세내용:%0D%0A%0D%0A%0D%0A이름:%0D%0A연락처:%20(선택사항)%0D%0A%0D%0A감사합니다." target="_blank" rel="noopener noreferrer">
                  <svg className="shrink-0 fill-slate-300 mr-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                    <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                  </svg>
                  <span>협업 & 제안하기</span>
                </a>
              </div>
              <div>
                <a className="btn text-slate-200 hover:text-white bg-slate-900 bg-opacity-25 hover:bg-opacity-30 w-full transition duration-150 ease-in-out group" href="https://somoim.friendscube.com/g/b66c90ac-1765-11ef-be8e-0a1883465d731" target="_blank" rel="noopener noreferrer">
                  <span>코딩 교육받기</span>
                  <span className="text-xs text-sky-500 ml-2 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out">(64명)</span>
                </a>
              </div> */}
               
            </div>
            
            
            {/* <p className="text-sm text-slate-100 mt-8" data-aos="fade-down" data-aos-delay="300">
              Powered by{' '}
              <a 
                href="https://somoim.friendscube.com/g/b66c90ac-1765-11ef-be8e-0a1883465d731" 
                target="_blank" 
                rel="noopener noreferrer"
                className="underline decoration-dotted underline-offset-2 hover:text-sky-500 hover:decoration-sky-500 transition-all duration-300"
              >
                [대전 IT] 나는 솔로프리너
              </a>
            </p> */}
          </div>

        </div>
      </div>
    </section>
  )
}

File: ./components/ui/mobile-menu.tsx
Content:
'use client'

import { useState, useRef, useEffect } from 'react'
import Link from 'next/link'

export default function MobileMenu() {
  const [mobileNavOpen, setMobileNavOpen] = useState<boolean>(false)

  const trigger = useRef<HTMLButtonElement>(null)
  const mobileNav = useRef<HTMLDivElement>(null)

  // close the mobile menu on click outside
  useEffect(() => {
    const clickHandler = ({ target }: { target: EventTarget | null }): void => {
      if (!mobileNav.current || !trigger.current) return;
      if (!mobileNavOpen || mobileNav.current.contains(target as Node) || trigger.current.contains(target as Node)) return;
      setMobileNavOpen(false)
    };
    document.addEventListener('click', clickHandler)
    return () => document.removeEventListener('click', clickHandler)
  })

  // close the mobile menu if the esc key is pressed
  useEffect(() => {
    const keyHandler = ({ keyCode }: { keyCode: number }): void => {
      if (!mobileNavOpen || keyCode !== 27) return;
      setMobileNavOpen(false)
    };
    document.addEventListener('keydown', keyHandler)
    return () => document.removeEventListener('keydown', keyHandler)
  })

  return (
    <div className="md:hidden flex items-center ml-4">
      {/* Hamburger button */}
      <button
        ref={trigger}
        className={`hamburger ${mobileNavOpen && 'active'}`}
        aria-controls="mobile-nav"
        aria-expanded={mobileNavOpen}
        onClick={() => setMobileNavOpen(!mobileNavOpen)}
      >
        <span className="sr-only">Menu</span>
        <svg className="w-5 h-5 fill-current text-slate-300 hover:text-white transition duration-150 ease-in-out" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <rect y="2" width="20" height="2" rx="1" />
          <rect y="9" width="20" height="2" rx="1" />
          <rect y="16" width="20" height="2" rx="1" />
        </svg>
      </button>

      {/*Mobile navigation */}
      <nav
        id="mobile-nav"
        ref={mobileNav}
        className="absolute top-full z-20 left-0 w-full px-4 sm:px-6 overflow-hidden transition-all duration-300 ease-in-out"
        style={mobileNavOpen ? { maxHeight: mobileNav.current?.scrollHeight, opacity: 1 } : { maxHeight: 0, opacity: 0.8 }}
      >
        <ul className="border border-transparent [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] rounded-lg px-4 py-1.5">
          <li>
            <Link className="flex font-medium text-sm text-slate-300 hover:text-white py-1.5" href="/about">About</Link>
          </li>
          <li>
            <Link className="flex font-medium text-sm text-slate-300 hover:text-white py-1.5" href="/integrations">Integrations</Link>
          </li>
          <li>
            <Link className="flex font-medium text-sm text-slate-300 hover:text-white py-1.5" href="/pricing">Pricing</Link>
          </li>
          <li>
            <Link className="flex font-medium text-sm text-slate-300 hover:text-white py-1.5" href="/customers">Customers</Link>
          </li>
          <li>
            <Link className="flex font-medium text-sm text-slate-300 hover:text-white py-1.5" href="/changelog">Changelog</Link>
          </li>
        </ul>
      </nav>
    </div>
  )
}

File: ./components/ui/footer.tsx
Content:
import Logo from './logo'

export default function Footer() {
  return (
    <footer>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">

        {/* Blocks */}
        <div className="grid sm:grid-cols-12 gap-8 py-8 md:py-12">

          {/* 1st block */}
          <div className="sm:col-span-12 lg:col-span-4 order-1 lg:order-none">
            <div className="h-full flex flex-col sm:flex-row lg:flex-col justify-between">
              <div className="mb-4 sm:mb-0">
                <div className="mb-4">
                  <Logo />
                </div>
                <div className="text-sm text-slate-300">© 나는 솔로프리너 <span className="text-slate-500">-</span> All rights reserved.</div>
              </div>
              {/* Social links */}
              <ul className="flex">
                <li>
                  <a className="flex justify-center items-center text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out" href="#0" aria-label="Twitter">
                    <svg className="w-8 h-8 fill-current" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                      <path d="m13.063 9 3.495 4.475L20.601 9h2.454l-5.359 5.931L24 23h-4.938l-3.866-4.893L10.771 23H8.316l5.735-6.342L8 9h5.063Zm-.74 1.347h-1.457l8.875 11.232h1.36l-8.778-11.232Z" />
                    </svg>
                  </a>
                </li>
                <li className="ml-2">
                  <a className="flex justify-center items-center text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out" href="#0" aria-label="Dev.to">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32">
                      <path className="w-8 h-8 fill-current" d="M12.29 14.3a.69.69 0 0 0-.416-.155h-.623v3.727h.623a.689.689 0 0 0 .416-.156.543.543 0 0 0 .21-.466v-2.488a.547.547 0 0 0-.21-.462ZM22.432 8H9.568C8.704 8 8.002 8.7 8 9.564v12.872A1.568 1.568 0 0 0 9.568 24h12.864c.864 0 1.566-.7 1.568-1.564V9.564A1.568 1.568 0 0 0 22.432 8Zm-8.925 9.257a1.631 1.631 0 0 1-1.727 1.687h-1.657v-5.909h1.692a1.631 1.631 0 0 1 1.692 1.689v2.533ZM17.1 14.09h-1.9v1.372h1.163v1.057H15.2v1.371h1.9v1.056h-2.217a.72.72 0 0 1-.74-.7v-4.471a.721.721 0 0 1 .7-.739H17.1v1.054Zm3.7 4.118c-.471 1.1-1.316.88-1.694 0l-1.372-5.172H18.9l1.058 4.064 1.056-4.062h1.164l-1.378 5.17Z" />
                    </svg>
                  </a>
                </li>
                <li className="ml-2">
                  <a className="flex justify-center items-center text-sky-500 hover:text-sky-400 transition duration-150 ease-in-out" href="#0" aria-label="Github">
                    <svg className="w-8 h-8 fill-current" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                      <path d="M16 8.2c-4.4 0-8 3.6-8 8 0 3.5 2.3 6.5 5.5 7.6.4.1.5-.2.5-.4V22c-2.2.5-2.7-1-2.7-1-.4-.9-.9-1.2-.9-1.2-.7-.5.1-.5.1-.5.8.1 1.2.8 1.2.8.7 1.3 1.9.9 2.3.7.1-.5.3-.9.5-1.1-1.8-.2-3.6-.9-3.6-4 0-.9.3-1.6.8-2.1-.1-.2-.4-1 .1-2.1 0 0 .7-.2 2.2.8.6-.2 1.3-.3 2-.3s1.4.1 2 .3c1.5-1 2.2-.8 2.2-.8.4 1.1.2 1.9.1 2.1.5.6.8 1.3.8 2.1 0 3.1-1.9 3.7-3.7 3.9.3.4.6.9.6 1.6v2.2c0 .2.1.5.6.4 3.2-1.1 5.5-4.1 5.5-7.6-.1-4.4-3.7-8-8.1-8z" />
                    </svg>
                  </a>
                </li>
              </ul>
            </div>
          </div>

          {/* 2nd block */}
          <div className="sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h6 className="text-sm text-slate-50 font-medium mb-2">서비스</h6>
            <ul className="text-sm space-y-2">
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">개인 취향 기반 추천</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">시간대별 맞춤 추천</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">소셜 기반 협업 필터링</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">건강 목표 기반 추천</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">상황별 테마 추천</a>
              </li>
            </ul>
          </div>

          {/* 3rd block */}
          <div className="sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h6 className="text-sm text-slate-50 font-medium mb-2">회사 소개</h6>
            <ul className="text-sm space-y-2">
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">버블버블 소개</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">파트너십</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">블로그</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">채용 정보</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">투자 정보</a>
              </li>
            </ul>
          </div>

          {/* 4th block */}
          <div className="sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h6 className="text-sm text-slate-50 font-medium mb-2">고객 지원</h6>
            <ul className="text-sm space-y-2">
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">고객센터</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">이용 가이드</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">문의하기</a>
              </li>
            </ul>
          </div>

          {/* 5th block */}
          <div className="sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h6 className="text-sm text-slate-50 font-medium mb-2">법적 고지</h6>
            <ul className="text-sm space-y-2">
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">이용약관</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">개인정보 처리방침</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">책임의 한계와 법적고지</a>
              </li>
              <li>
                <a className="text-slate-400 hover:text-slate-200 transition duration-150 ease-in-out" href="#0">브랜드 가이드라인</a>
              </li>
            </ul>
          </div>

        </div>

      </div>
    </footer>
  )
}

File: ./components/ui/logo.tsx
Content:
import Link from 'next/link'
import Image from 'next/image'
import LogoImg from '@/public/images/bubblebubble.png'

export default function Logo() {
  return (
    <Link className="inline-flex" href="/" aria-label="Cruip">
      <Image 
        className="max-w-none animate-float" 
        src={LogoImg} 
        width={100} 
        height={100} 
        priority 
        alt="Stellar" 
      />
    </Link>
  )
}
File: ./components/ui/header.tsx
Content:
import Link from 'next/link'
import Logo from './logo'
import MobileMenu from './mobile-menu'

export default function Header() {
  return (
    <header className="absolute w-full z-30">
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="flex items-center justify-between h-16 md:h-20">

          {/* Site branding */}
          <div className="flex-1 mt-8">
            <Logo />
          </div>

          {/* Desktop navigation */}
          <nav className="hidden md:flex md:grow">

            {/* Desktop menu links */}
            {/* <ul className="flex grow justify-center flex-wrap items-center">
              <li>
                <Link className="font-medium text-sm text-slate-300 hover:text-white mx-4 lg:mx-5 transition duration-150 ease-in-out" href="/about">About</Link>
              </li>
              <li>
                <Link className="font-medium text-sm text-slate-300 hover:text-white mx-4 lg:mx-5 transition duration-150 ease-in-out" href="/integrations">Integrations</Link>
              </li>
              <li>
                <Link className="font-medium text-sm text-slate-300 hover:text-white mx-4 lg:mx-5 transition duration-150 ease-in-out" href="/pricing">Pricing</Link>
              </li>
              <li>
                <Link className="font-medium text-sm text-slate-300 hover:text-white mx-4 lg:mx-5 transition duration-150 ease-in-out" href="/customers">Customers</Link>
              </li>
              <li>
                <Link className="font-medium text-sm text-slate-300 hover:text-white mx-4 lg:mx-5 transition duration-150 ease-in-out" href="/changelog">Changelog</Link>
              </li>
            </ul> */}

          </nav>

          {/* Desktop sign in links */}
          {/* <ul className="flex-1 flex justify-end items-center">
            <li>
              <Link className="font-medium text-sm text-slate-300 hover:text-white whitespace-nowrap transition duration-150 ease-in-out" href="/signin">Sign in</Link>
            </li>
            <li className="ml-6">
              <Link className="btn-sm text-slate-300 hover:text-white transition duration-150 ease-in-out w-full group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none" href="/signup">
                <span className="relative inline-flex items-center">
                  Sign up <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                </span>
              </Link>
            </li>
          </ul> */}

          <MobileMenu />

        </div>
      </div>
    </header>
  )
}

File: ./components/cta-03.tsx
Content:
export default function Cta03() {
  return (
    <section>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="relative px-8 py-12 md:py-20 rounded-[3rem] overflow-hidden">
          {/* Radial gradient */}
          <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
            <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-70"></div>
            <div className="absolute w-1/4 h-1/4 translate-z-0 bg-sky-400 rounded-full blur-[40px]"></div>
          </div>
          {/* Blurred shape */}
          <div className="absolute bottom-0 translate-y-1/2 left-0 blur-2xl opacity-50 pointer-events-none -z-10" aria-hidden="true">
            <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
              <defs>
                <linearGradient id="bs5-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                  <stop offset="0%" stopColor="#A855F7" />
                  <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
                </linearGradient>
              </defs>
              <path fill="url(#bs5-a)" fillRule="evenodd" d="m0 0 461 369-284 58z" transform="matrix(1 0 0 -1 0 427)" />
            </svg>
          </div>
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center">
            <div>
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">Never miss an update</div>
            </div>
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Take control of your business</h2>
            <p className="text-lg text-slate-400 mb-8">Find out about our latest product changes as we continue improving Stellar to enable your team to collaborate better.</p>
            <form className="inline-flex max-w-sm w-full">
              <div className="w-full flex flex-col sm:flex-row justify-center max-w-xs mx-auto sm:max-w-none">
                <input type="email" className="form-input py-1.5 w-full mb-3 sm:mb-0 sm:mr-2 rounded-full bg-slate-800/30 border-slate-700" placeholder="Your email" aria-label="Your email" />
                  <button className="btn text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white transition duration-150 ease-in-out group" type="submit">Subscribe <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/pricing.tsx
Content:
'use client'

import { useState } from 'react'

export default function Pricing() {
  const [annual, setAnnual] = useState<boolean>(true)

  return (
    <div className="relative">
      {/* Blurred shape */}
      <div className="max-md:hidden absolute bottom-0 -mb-20 left-2/3 -translate-x-1/2 blur-2xl opacity-70 pointer-events-none" aria-hidden="true">
        <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
          <defs>
            <linearGradient id="bs5-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
              <stop offset="0%" stopColor="#A855F7" />
              <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
            </linearGradient>
          </defs>
          <path fill="url(#bs5-a)" fillRule="evenodd" d="m661 736 461 369-284 58z" transform="matrix(1 0 0 -1 -661 1163)" />
        </svg>
      </div>
      {/* Content */}
      <div className="grid md:grid-cols-4 xl:-mx-6 text-sm [&>div:nth-of-type(-n+4)]:py-6 [&>div:nth-last-of-type(-n+4)]:pb-6 max-md:[&>div:nth-last-of-type(-n+4)]:mb-8 max-md:[&>div:nth-of-type(-n+4):nth-of-type(n+1)]:rounded-t-3xl max-md:[&>div:nth-last-of-type(-n+4)]:rounded-b-3xl md:[&>div:nth-of-type(2)]:rounded-tl-3xl md:[&>div:nth-of-type(4)]:rounded-tr-3xl md:[&>div:nth-last-of-type(3)]:rounded-bl-3xl md:[&>div:nth-last-of-type(1)]:rounded-br-3xl [&>div]:bg-slate-700/20 [&>div:nth-of-type(4n+1)]:bg-transparent max-md:[&>div:nth-of-type(4n+5)]:hidden max-md:[&>div:nth-of-type(4n+2)]:order-1 max-md:[&>div:nth-of-type(4n+3)]:order-2 max-md:[&>div:nth-of-type(4n+4)]:order-3 max-md:md:[&>div:nth-of-type(n)]:mb-0 [&>div:nth-of-type(4n+3)]:relative before:[&>div:nth-of-type(4n+3)]:absolute before:[&>div:nth-of-type(4n+3)]:-inset-px before:[&>div:nth-of-type(4n+3)]:rounded-[inherit] before:[&>div:nth-of-type(4n+3)]:border-x-2 before:[&>div:nth-of-type(3)]:border-t-2 before:[&>div:nth-last-of-type(2)]:border-b-2 before:[&>div:nth-of-type(4n+3)]:border-sky-500 before:[&>div:nth-of-type(4n+3)]:-z-10 before:[&>div:nth-of-type(4n+3)]:pointer-events-none">
        {/* Pricing toggle */}
        <div className="px-6 flex flex-col justify-end">
          <div className="pb-5 md:border-b border-slate-800">
            {/* Toggle switch */}
            <div className="max-md:text-center">
              <div className="inline-flex items-center whitespace-nowrap">
                <div className="text-sm text-slate-500 font-medium mr-2 md:max-lg:hidden">Monthly</div>
                <div className="relative">
                  <input type="checkbox" id="toggle" className="peer sr-only" checked={annual} onChange={() => setAnnual(!annual)} />
                  <label htmlFor="toggle" className="relative flex h-6 w-11 cursor-pointer items-center rounded-full bg-slate-400 px-0.5 outline-slate-400 transition-colors before:h-5 before:w-5 before:rounded-full before:bg-white before:shadow-sm before:transition-transform before:duration-150 peer-checked:bg-sky-500 peer-checked:before:translate-x-full peer-focus-visible:outline peer-focus-visible:outline-offset-2 peer-focus-visible:outline-gray-400 peer-checked:peer-focus-visible:outline-sky-500">
                    <span className="sr-only">Pay Yearly</span>
                  </label>
                </div>
                <div className="text-sm text-slate-500 font-medium ml-2">Yearly <span className="text-teal-500">(-20%)</span></div>
              </div>
            </div>
          </div>
        </div>
        {/* Pro price */}
        <div className="px-6 flex flex-col justify-end">
          <div className="grow pb-4 mb-4 border-b border-slate-800">
            <div className="text-base font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-0.5">Pro</div>
            <div className="mb-1">
              <span className="text-lg font-medium text-slate-500">$</span><span className="text-3xl font-bold text-slate-50">{annual ? '24' : '29'}</span><span className="text-sm text-slate-600 font-medium">/mo</span>
            </div>
            <div className="text-slate-500">Everything at your fingertips.</div>
          </div>
          <div className="pb-4 border-b border-slate-800">
            <a className="btn-sm text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full transition duration-150 ease-in-out group" href="#0">
              Get Started <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </a>
          </div>
        </div>
        {/* Team price */}
        <div className="px-6 flex flex-col justify-end">
          <div className="grow pb-4 mb-4 border-b border-slate-800">
            <div className="text-base font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-0.5">Team</div>
            <div className="mb-1">
              <span className="text-lg font-medium text-slate-500">$</span><span className="text-3xl font-bold text-slate-50">{annual ? '49' : '54'}</span><span className="text-sm text-slate-600 font-medium">/mo</span>
            </div>
            <div className="text-slate-500">Everything at your fingertips.</div>
          </div>
          <div className="pb-4 border-b border-slate-800">
            <a className="btn-sm text-white bg-sky-500 hover:bg-sky-600 w-full transition duration-150 ease-in-out group" href="#0">
              Get Started <span className="tracking-normal text-sky-300 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </a>
          </div>
        </div>
        {/* Enterprise price */}
        <div className="px-6 flex flex-col justify-end">
          <div className="grow pb-4 mb-4 border-b border-slate-800">
            <div className="text-base font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-0.5">Enterprise</div>
            <div className="mb-1">
              <span className="text-lg font-medium text-slate-500">$</span><span className="text-3xl font-bold text-slate-50">{annual ? '79' : '85'}</span><span className="text-sm text-slate-600 font-medium">/mo</span>
            </div>
            <div className="text-slate-500">Everything at your fingertips.</div>
          </div>
          <div className="pb-4 border-b border-slate-800">
            <a className="btn-sm text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full transition duration-150 ease-in-out group" href="#0">
              Get Started <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
            </a>
          </div>
        </div>
        {/* # Usage */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4">Usage</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Usage</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Usage</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Usage</div>
        </div>
        {/* Social Connections */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Social Connections</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>100 <span className="md:hidden">Social Connections</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>250 <span className="md:hidden">Social Connections</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">Social Connections</span></span>
          </div>
        </div>
        {/* Custom Domains */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Custom Domains</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>4 <span className="md:hidden">Custom Domains</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">Custom Domains</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">Custom Domains</span></span>
          </div>
        </div>
        {/* User Role Management */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">User Role Management</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">User Role Management</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">User Role Management</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">User Role Management</span></span>
          </div>
        </div>
        {/* External Databases */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">External Databases</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>1 <span className="md:hidden">External Databases</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>5 <span className="md:hidden">External Databases</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span>Unlimited <span className="md:hidden">External Databases</span></span>
          </div>
        </div>
        {/* # Features */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4">Features</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Features</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Features</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Features</div>
        </div>
        {/* Custom Connection */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Custom Connection</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Custom Connection</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Custom Connection</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Custom Connection</span></span>
          </div>
        </div>
        {/* Advanced Deployment Options */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Advanced Deployment Options</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Advanced Deployment Options</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Advanced Deployment Options</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Advanced Deployment Options</span></span>
          </div>
        </div>
        {/* Extra Add-ons */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Extra Add-ons</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Extra Add-ons</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Extra Add-ons</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Extra Add-ons</span></span>
          </div>
        </div>
        {/* Admin Roles */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Admin Roles</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Admin Roles</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Admin Roles</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Admin Roles</span></span>
          </div>
        </div>
        {/* Deploy and Monitor */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Deploy and Monitor</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Deploy and Monitor</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Deploy and Monitor</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Deploy and Monitor</span></span>
          </div>
        </div>
        {/* Enterprise Add-ons */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Enterprise Add-ons</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Enterprise Add-ons</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Enterprise Add-ons</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Enterprise Add-ons</span></span>
          </div>
        </div>
        {/* # Support */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4">Support</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 hidden">Support</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Support</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-50 font-medium mt-4 md:hidden">Support</div>
        </div>
        {/* Premium Support */}
        <div className="px-6 flex flex-col justify-end">
          <div className="py-2 text-slate-400 border-b border-slate-800">Premium Support</div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center border-b border-slate-800 py-2 text-slate-400 max-md:hidden">
            <span><span className="md:hidden">Premium Support</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Premium Support</span></span>
          </div>
        </div>
        <div className="px-6 flex flex-col justify-end">
          <div className="flex items-center h-full border-b border-slate-800 py-2 text-slate-400">
            <svg className="shrink-0 fill-sky-500 mr-3" xmlns="http://www.w3.org/2000/svg" width="12" height="9">
              <path d="M10.28.28 3.989 6.575 1.695 4.28A1 1 0 0 0 .28 5.695l3 3a1 1 0 0 0 1.414 0l7-7A1 1 0 0 0 10.28.28Z" />
            </svg>
            <span><span className="md:hidden">Premium Support</span></span>
          </div>
        </div>
      </div>
    </div>
  )
}
File: ./components/cta-02.tsx
Content:
import Particles from './particles'

export default function Cta02() {
  return (
    <section className="relative">

      {/* Particles animation */}
      <div className="absolute left-1/2 -translate-x-1/2 top-0 -z-10 w-80 h-80 -mt-24">
        <Particles className="absolute inset-0 -z-10" quantity={6} staticity={30} />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="relative px-8 py-12 md:py-20 border-t border-b [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">
          {/* Blurred shape */}
          <div className="absolute top-0 -mt-24 left-1/2 -translate-x-1/2 ml-24 blur-2xl opacity-70 pointer-events-none -z-10" aria-hidden="true">
            <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
              <defs>
                <linearGradient id="bs4-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                  <stop offset="0%" stopColor="#A855F7"></stop>
                  <stop offset="100%" stopColor="#6366F1" stopOpacity="0"></stop>
                </linearGradient>
              </defs>
              <path fill="url(#bs4-a)" fillRule="evenodd" d="m0 0 461 369-284 58z" transform="matrix(1 0 0 -1 0 427)"></path>
            </svg>
          </div>
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center">
            <div>
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">The security first platform</div>
            </div>
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Supercharge your security</h2>
            <p className="text-lg text-slate-400 mb-8">All the lorem ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet.</p>
            <div>
              <a className="btn text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white transition duration-150 ease-in-out group" href="#0">
                Start Building <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/integrations-carousel.tsx
Content:
'use client'

import { useEffect, useState } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import IntegrationImg01 from '@/public/images/integrations-01.svg'
import IntegrationImg02 from '@/public/images/integrations-02.svg'
import IntegrationImg03 from '@/public/images/integrations-03.svg'
import IntegrationImg04 from '@/public/images/integrations-04.svg'
import IntegrationImg05 from '@/public/images/integrations-05.svg'
import Star from '@/public/images/star.svg'
import Avatar01 from '@/public/images/avatar-01.jpg'
import Avatar02 from '@/public/images/avatar-02.jpg'
import Avatar03 from '@/public/images/avatar-03.jpg'
import Avatar04 from '@/public/images/avatar-04.jpg'
import Avatar05 from '@/public/images/avatar-05.jpg'
import Avatar06 from '@/public/images/avatar-06.jpg'
import Avatar07 from '@/public/images/avatar-07.jpg'
import Avatar08 from '@/public/images/avatar-08.jpg'
import Avatar09 from '@/public/images/avatar-09.jpg'
import Avatar10 from '@/public/images/avatar-10.jpg'
import Avatar11 from '@/public/images/avatar-11.jpg'
import Avatar12 from '@/public/images/avatar-12.jpg'
import Avatar13 from '@/public/images/avatar-13.jpg'
import Avatar14 from '@/public/images/avatar-14.jpg'
import Avatar15 from '@/public/images/avatar-15.jpg'
import Avatar16 from '@/public/images/avatar-16.jpg'
import Avatar17 from '@/public/images/avatar-17.jpg'
import Avatar18 from '@/public/images/avatar-18.jpg'
import Avatar19 from '@/public/images/avatar-19.jpg'

// Import Swiper
import Swiper, { Navigation } from 'swiper'
import 'swiper/swiper.min.css'
Swiper.use([Navigation])

export default function IntegrationsCarousel() {

  const [swiperInitialized, setSwiperInitialized] = useState<boolean>(false)

  useEffect(() => {
    const carousel = new Swiper('.stellar-carousel', {
      breakpoints: {
        320: {
          slidesPerView: 1
        },
        640: {
          slidesPerView: 2
        },
        1024: {
          slidesPerView: 3
        }
      },
      grabCursor: true,
      loop: false,
      centeredSlides: false,
      initialSlide: 0,
      spaceBetween: 24,
      navigation: {
        nextEl: '.carousel-next',
        prevEl: '.carousel-prev',
      },
    })
    setSwiperInitialized(true)
  }, [])

  return (
    <>
      <div className="stellar-carousel swiper-container group">
        <div className="swiper-wrapper w-fit">
          {/* Carousel items */}
          <div className="swiper-slide h-auto bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
            <div className="flex flex-col p-5 h-full">
              <div className="flex items-center space-x-3 mb-3">
                <div className="relative">
                  <Image src={IntegrationImg01} width={40} height={40} alt="Icon 01" />
                  <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
                </div>
                <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href="/integrations/single-post">Retool</Link>
              </div>
              <div className="grow mb-4">
                <div className="text-sm text-slate-400">Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.</div>
              </div>
              <div className="flex justify-between">
                <div className="flex -space-x-3 -ml-0.5">
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar01} width={24} height={24} alt="Avatar 01" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar02} width={24} height={24} alt="Avatar 02" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar03} width={24} height={24} alt="Avatar 03" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar04} width={24} height={24} alt="Avatar 04" />
                </div>
                <button className="flex items-center space-x-2 font-medium text-sm text-slate-300 hover:text-white transition-colors">
                  <span className="sr-only">Like</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path className="fill-slate-500" d="M11.86 15.154 8 13.125l-3.86 2.03c-.726.386-1.591-.236-1.45-1.055l.737-4.299L.303 6.757a1 1 0 0 1 .555-1.706l4.316-.627L7.104.512c.337-.683 1.458-.683 1.794 0l1.93 3.911 4.317.627a1.001 1.001 0 0 1 .555 1.706l-3.124 3.045.737 4.3c.14.822-.726 1.435-1.452 1.053ZM8.468 11.11l2.532 1.331-.483-2.82a1 1 0 0 1 .287-.885l2.049-1.998-2.831-.41a.996.996 0 0 1-.753-.548L8 3.214 6.734 5.78a1 1 0 0 1-.753.547l-2.831.411 2.049 1.998a1 1 0 0 1 .287.885l-.483 2.82 2.532-1.33a.998.998 0 0 1 .932 0Z" />
                  </svg>
                  <span>2.3K</span>
                </button>
              </div>
            </div>
          </div>
          <div className="swiper-slide h-auto bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
            <div className="flex flex-col p-5 h-full">
              <div className="flex items-center space-x-3 mb-3">
                <div className="relative">
                  <Image src={IntegrationImg02} width={40} height={40} alt="Icon 02" />
                  <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
                </div>
                <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href="/integrations/single-post">Zapier</Link>
              </div>
              <div className="grow mb-4">
                <div className="text-sm text-slate-400">Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.</div>
              </div>
              <div className="flex justify-between">
                <div className="flex -space-x-3 -ml-0.5">
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar05} width={24} height={24} alt="Avatar 05" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar06} width={24} height={24} alt="Avatar 06" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar07} width={24} height={24} alt="Avatar 07" />
                </div>
                <button className="flex items-center space-x-2 font-medium text-sm text-slate-300 hover:text-white transition-colors">
                  <span className="sr-only">Like</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path className="fill-slate-500" d="M11.86 15.154 8 13.125l-3.86 2.03c-.726.386-1.591-.236-1.45-1.055l.737-4.299L.303 6.757a1 1 0 0 1 .555-1.706l4.316-.627L7.104.512c.337-.683 1.458-.683 1.794 0l1.93 3.911 4.317.627a1.001 1.001 0 0 1 .555 1.706l-3.124 3.045.737 4.3c.14.822-.726 1.435-1.452 1.053ZM8.468 11.11l2.532 1.331-.483-2.82a1 1 0 0 1 .287-.885l2.049-1.998-2.831-.41a.996.996 0 0 1-.753-.548L8 3.214 6.734 5.78a1 1 0 0 1-.753.547l-2.831.411 2.049 1.998a1 1 0 0 1 .287.885l-.483 2.82 2.532-1.33a.998.998 0 0 1 .932 0Z" />
                  </svg>
                  <span>4.5K</span>
                </button>
              </div>
            </div>
          </div>
          <div className="swiper-slide h-auto bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
            <div className="flex flex-col p-5 h-full">
              <div className="flex items-center space-x-3 mb-3">
                <div className="relative">
                  <Image src={IntegrationImg03} width={40} height={40} alt="Icon 03" />
                  <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
                </div>
                <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href="/integrations/single-post">Airtable</Link>
              </div>
              <div className="grow mb-4">
                <div className="text-sm text-slate-400">Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.</div>
              </div>
              <div className="flex justify-between">
                <div className="flex -space-x-3 -ml-0.5">
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar08} width={24} height={24} alt="Avatar 08" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar09} width={24} height={24} alt="Avatar 09" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar10} width={24} height={24} alt="Avatar 10" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar11} width={24} height={24} alt="Avatar 11" />
                </div>
                <button className="flex items-center space-x-2 font-medium text-sm text-slate-300 hover:text-white transition-colors">
                  <span className="sr-only">Like</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path className="fill-slate-500" d="M11.86 15.154 8 13.125l-3.86 2.03c-.726.386-1.591-.236-1.45-1.055l.737-4.299L.303 6.757a1 1 0 0 1 .555-1.706l4.316-.627L7.104.512c.337-.683 1.458-.683 1.794 0l1.93 3.911 4.317.627a1.001 1.001 0 0 1 .555 1.706l-3.124 3.045.737 4.3c.14.822-.726 1.435-1.452 1.053ZM8.468 11.11l2.532 1.331-.483-2.82a1 1 0 0 1 .287-.885l2.049-1.998-2.831-.41a.996.996 0 0 1-.753-.548L8 3.214 6.734 5.78a1 1 0 0 1-.753.547l-2.831.411 2.049 1.998a1 1 0 0 1 .287.885l-.483 2.82 2.532-1.33a.998.998 0 0 1 .932 0Z" />
                  </svg>
                  <span>4.7K</span>
                </button>
              </div>
            </div>
          </div>
          <div className="swiper-slide h-auto bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
            <div className="flex flex-col p-5 h-full">
              <div className="flex items-center space-x-3 mb-3">
                <div className="relative">
                  <Image src={IntegrationImg04} width={40} height={40} alt="Icon 04" />
                  <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
                </div>
                <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href="/integrations/single-post">Jira</Link>
              </div>
              <div className="grow mb-4">
                <div className="text-sm text-slate-400">Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.</div>
              </div>
              <div className="flex justify-between">
                <div className="flex -space-x-3 -ml-0.5">
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar12} width={24} height={24} alt="Avatar 12" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar13} width={24} height={24} alt="Avatar 13" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar14} width={24} height={24} alt="Avatar 14" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar15} width={24} height={24} alt="Avatar 15" />
                </div>
                <button className="flex items-center space-x-2 font-medium text-sm text-slate-300 hover:text-white transition-colors">
                  <span className="sr-only">Like</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path className="fill-slate-500" d="M11.86 15.154 8 13.125l-3.86 2.03c-.726.386-1.591-.236-1.45-1.055l.737-4.299L.303 6.757a1 1 0 0 1 .555-1.706l4.316-.627L7.104.512c.337-.683 1.458-.683 1.794 0l1.93 3.911 4.317.627a1.001 1.001 0 0 1 .555 1.706l-3.124 3.045.737 4.3c.14.822-.726 1.435-1.452 1.053ZM8.468 11.11l2.532 1.331-.483-2.82a1 1 0 0 1 .287-.885l2.049-1.998-2.831-.41a.996.996 0 0 1-.753-.548L8 3.214 6.734 5.78a1 1 0 0 1-.753.547l-2.831.411 2.049 1.998a1 1 0 0 1 .287.885l-.483 2.82 2.532-1.33a.998.998 0 0 1 .932 0Z" />
                  </svg>
                  <span>4.4K</span>
                </button>
              </div>
            </div>
          </div>
          <div className="swiper-slide h-auto bg-gradient-to-tr from-slate-800 to-slate-800/25 rounded-3xl border border-slate-800 hover:border-slate-700/60 transition-colors group relative">
            <div className="flex flex-col p-5 h-full">
              <div className="flex items-center space-x-3 mb-3">
                <div className="relative">
                  <Image src={IntegrationImg05} width={40} height={40} alt="Icon 05" />
                  <Image className="absolute top-0 -right-1" src={Star} width={16} height={16} alt="Star" aria-hidden="true" />
                </div>
                <Link className="font-semibold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 group-hover:before:absolute group-hover:before:inset-0" href="/integrations/single-post">GitLab</Link>
              </div>
              <div className="grow mb-4">
                <div className="text-sm text-slate-400">Stellar makes it easy to build extensions by providing an authentication provider that handles the OAuth flow.</div>
              </div>
              <div className="flex justify-between">
                <div className="flex -space-x-3 -ml-0.5">
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar16} width={24} height={24} alt="Avatar 16" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar17} width={24} height={24} alt="Avatar 17" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar18} width={24} height={24} alt="Avatar 18" />
                  <Image className="rounded-full border-2 border-slate-800 box-content" src={Avatar19} width={24} height={24} alt="Avatar 19" />
                </div>
                <button className="flex items-center space-x-2 font-medium text-sm text-slate-300 hover:text-white transition-colors">
                  <span className="sr-only">Like</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                    <path className="fill-slate-500" d="M11.86 15.154 8 13.125l-3.86 2.03c-.726.386-1.591-.236-1.45-1.055l.737-4.299L.303 6.757a1 1 0 0 1 .555-1.706l4.316-.627L7.104.512c.337-.683 1.458-.683 1.794 0l1.93 3.911 4.317.627a1.001 1.001 0 0 1 .555 1.706l-3.124 3.045.737 4.3c.14.822-.726 1.435-1.452 1.053ZM8.468 11.11l2.532 1.331-.483-2.82a1 1 0 0 1 .287-.885l2.049-1.998-2.831-.41a.996.996 0 0 1-.753-.548L8 3.214 6.734 5.78a1 1 0 0 1-.753.547l-2.831.411 2.049 1.998a1 1 0 0 1 .287.885l-.483 2.82 2.532-1.33a.998.998 0 0 1 .932 0Z" />
                  </svg>
                  <span>3.4K</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Arrows */}
      <div className="flex py-8 justify-end">
        <button className="carousel-prev relative z-20 w-12 h-12 flex items-center justify-center group">
          <span className="sr-only">Previous</span>
          <svg className="w-4 h-4 fill-slate-500 group-hover:fill-sky-500 transition duration-150 ease-in-out" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
            <path d="M6.7 14.7l1.4-1.4L3.8 9H16V7H3.8l4.3-4.3-1.4-1.4L0 8z" />
          </svg>
        </button>
        <button className="carousel-next relative z-20 w-12 h-12 flex items-center justify-center group">
          <span className="sr-only">Next</span>
          <svg className="w-4 h-4 fill-slate-500 group-hover:fill-sky-500 transition duration-150 ease-in-out" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.3 14.7l-1.4-1.4L12.2 9H0V7h12.2L7.9 2.7l1.4-1.4L16 8z" />
          </svg>
        </button>
      </div>

    </>
  )
}
File: ./components/team.tsx
Content:
import Image from 'next/image'
import { StaticImageData } from 'next/image'
import Member01 from '@/public/images/team-01.png'
import Member02 from '@/public/images/team-02.png'
import Member03 from '@/public/images/team-03.png'
import Member04 from '@/public/images/team-04.png'
import Member05 from '@/public/images/team-05.png'
import Member06 from '@/public/images/team-06.png'
import Member07 from '@/public/images/team-07.png'
import Member08 from '@/public/images/team-08.png'
import Member09 from '@/public/images/team-09.png'
import Member10 from '@/public/images/team-10.png'
import Member11 from '@/public/images/team-11.png'
import Member12 from '@/public/images/team-12.png'
import Member13 from '@/public/images/team-13.png'
import Member14 from '@/public/images/team-14.png'
import Member15 from '@/public/images/team-15.png'
import Member16 from '@/public/images/team-16.png'
import Member17 from '@/public/images/team-17.png'
import Member18 from '@/public/images/team-18.png'
import Member19 from '@/public/images/team-19.png'
import Member20 from '@/public/images/team-20.png'

interface Item {
  img: StaticImageData
  name: string
  role: string
  twitter: string
}

export default function Team() {

  const items: Item[] = [
    {
      img: Member01,
      name: 'Sarah Barnekow',
      role: 'CEO & Co-founder',
      twitter: '#0',
    },
    {
      img: Member02,
      name: 'Alex Suevalov',
      role: 'Tech Lead',
      twitter: '#0',
    },
    {
      img: Member03,
      name: 'Mark Lamprecht',
      role: 'Software Engineer',
      twitter: '#0',
    },
    {
      img: Member04,
      name: 'Scott Bailey',
      role: 'Software Engineer',
      twitter: '#0',
    },
    {
      img: Member05,
      name: 'Vedant Hegde',
      role: 'Customer Experience',
      twitter: '#0',
    },
    {
      img: Member06,
      name: 'Lucy Radux',
      role: 'Marketing Manager',
      twitter: '#0',
    },
    {
      img: Member07,
      name: 'Devani Janssen',
      role: 'Product Design',
      twitter: '#0',
    },
    {
      img: Member08,
      name: 'Dima Trystram',
      role: 'Customer Success',
      twitter: '#0',
    },
    {
      img: Member09,
      name: 'Fraser Davidson',
      role: 'Customer Success',
      twitter: '#0',
    },
    {
      img: Member10,
      name: 'William Adkins',
      role: 'Customer Experience',
      twitter: '#0',
    },
    {
      img: Member11,
      name: 'Debbie Poulin',
      role: 'Head of Talent',
      twitter: '#0',
    },
    {
      img: Member12,
      name: 'James Kudinov',
      role: 'Product Design',
      twitter: '#0',
    },
    {
      img: Member13,
      name: 'Zhenya Rynzhuk',
      role: 'Software Engineer',
      twitter: '#0',
    },
    {
      img: Member14,
      name: 'Mary Maka',
      role: 'Enterprise Architect',
      twitter: '#0',
    },
    {
      img: Member15,
      name: 'Monty Hayton',
      role: 'Video Producer',
      twitter: '#0',
    },
    {
      img: Member16,
      name: 'Srdjan Vidakovic',
      role: 'Operations Manager',
      twitter: '#0',
    },
    {
      img: Member17,
      name: 'David Cran',
      role: 'Financial Analyst',
      twitter: '#0',
    },
    {
      img: Member18,
      name: 'Jacek Janiczak',
      role: 'Data Engineer',
      twitter: '#0',
    },
    {
      img: Member19,
      name: 'Tommy Chandra',
      role: 'Head of Design',
      twitter: '#0',
    },
    {
      img: Member20,
      name: 'Ally Golovko',
      role: 'Software Engineer',
      twitter: '#0',
    },
  ]

  return (
    <section className="relative">
      {/* Radial gradient */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none -z-10" aria-hidden="true">
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 w-1/3 aspect-square">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-50"></div>
        </div>
      </div>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="py-12 md:py-20">
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">We are a happy, small team</h2>
            <p className="text-lg text-slate-400">Various versions of Lorem Ipsum have evolved over the years, sometimes by accident, sometimes on purpose, and by injecting humour and the like.</p>
          </div>
          {/* Team members */}
          <div className="grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 sm:gap-6">
            {items.map((item, index) => ( 
              <div key={index} className="relative flex items-center justify-between py-4 pl-4 pr-3 group before:absolute before:inset-0 before:-z-10 before:border before:border-slate-300 before:bg-slate-700 before:opacity-0 hover:before:opacity-10 focus-within:before:opacity-10 before:rounded-xl before:transition-opacity">
                <div className="flex items-center space-x-4">
                  <Image className="shrink-0" src={item.img} width="48" height="48" alt={item.name} />
                  <div className="grow">
                    <div className="font-bold text-slate-100 mb-0.5">{item.name}</div>
                    <div className="text-sm text-sky-500 font-medium">{item.role}</div>
                  </div>
                </div>
                <a className="shrink-0 text-slate-500 md:opacity-0 group-hover:opacity-100 transition-opacity focus-within:opacity-100 focus:outline-none group-hover:before:absolute group-hover:before:inset-0" href={item.twitter} aria-label={`${item.name}'s Twitter`}>
                  <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                    <path d="M11.297 13.807 7.424 18H5.276l5.019-5.436L5 6h4.43l3.06 3.836L16.025 6h2.147l-4.688 5.084L19 18h-4.32l-3.383-4.193Zm3.975 2.975h1.19L8.783 7.155H7.507l7.766 9.627Z" />
                  </svg>
                </a>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/Survey.tsx
Content:
'use client'
import React, { useState, useEffect } from 'react'
import { useSurveyStore } from '../app/store/surveyStore'
import breadData from '../bread.json'
const { GoogleGenerativeAI } = require("@google/generative-ai");
import { motion, AnimatePresence } from 'framer-motion'
import axios from 'axios';
import { ToastContainer, toast } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css';


const questions = [{
  id: 'age',
  question: '몇 살이신지 살짝 물어봐도 될까요?',
  options: Array.from({length: 91}, (_, i) => (i + 11).toString()),
  multiSelect: false,
  type: 'number',
},
{
  id: 'category',
  question: '다음 중 관심 있는 분야를 선택해주세요.',
  options: [
    '🔞 성범죄', '💰 재산범죄', '🚗 교통사고/범죄', '⚖️ 형사절차', '👊 폭행/협박', 
    '🗣️ 명예훼손/모욕', '🔍 기타 형사범죄', '🏠 부동산/임대차', '💼 금전/계약 문제', 
    '📜 민사절차', '🔎 기타 민사문제', '👪 가족', '🏢 회사', '🏥 의료/세금/행정', 
    '💻 IT/지식재산/금융'
  ],
  multiSelect: false,
},
{
  id: 'subcategory',
  question: '선택한 분야의 세부 항목을 선택해주세요.',
  options: [],
  multiSelect: false,
},
{
  id: 'subsubcategory',
  question: '선택한 세부 항목의 구체적인 항목을 선택해주세요.',
  options: [],
  multiSelect: false,
},
];


const SkeletonLoader: React.FC = () => (
  <div className="space-y-4">
    {[...Array(5)].map((_, index) => (
      <div key={index} className="bg-slate-700 p-4 rounded-lg animate-pulse">
        <div className="h-6 bg-slate-600 rounded w-3/4 mb-2"></div>
        <div className="h-4 bg-slate-600 rounded w-1/2 mb-2"></div>
        <div className="h-4 bg-slate-600 rounded w-5/6 mb-2"></div>
        <div className="h-4 bg-slate-600 rounded w-2/3"></div>
      </div>
    ))}
  </div>
)

const StarRating: React.FC<{ rating: number, setRating: (rating: number) => void }> = ({ rating, setRating }) => {
  return (
    <div className="flex space-x-1">
      {[1, 2, 3, 4, 5].map((star) => (
        <svg
          key={star}
          onClick={() => setRating(star)}
          className={`w-6 h-6 cursor-pointer ${star <= rating ? 'text-yellow-400' : 'text-gray-400'}`}
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.957a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.37 2.448a1 1 0 00-.364 1.118l1.286 3.957c.3.921-.755 1.688-1.54 1.118l-3.37-2.448a1 1 0 00-1.175 0l-3.37 2.448c-.784.57-1.838-.197-1.54-1.118l1.286-3.957a1 1 0 00-.364-1.118L2.05 9.384c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.957z" />
        </svg>
      ))}
    </div>
  );
};

export const Survey: React.FC = () => {
  const { currentQuestion, answers, setAnswer, nextQuestion, prevQuestion } = useSurveyStore()
  const [recommendations, setRecommendations] = useState<any[]>([])
  const [isLoading, setIsLoading] = useState(false)
  const [showAnswers, setShowAnswers] = useState(false)
  const [rating, setRating] = useState(0);
  const [feedback, setFeedback] = useState('');
  const [contactInfo, setContactInfo] = useState({ phone: '', email: '' });
  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);

  useEffect(() => {
    // Reset survey when component mounts
    useSurveyStore.getState().resetSurvey();
  }, []);

  const handleAnswer = (answer: string) => {
    const currentQ = questions[currentQuestion];
    if (currentQ?.id === 'category') {
      // Store category answer
      setAnswer('category', answer);
      toast(`현재 질문: ${currentQuestion}\n답변: ${answer}`, {
        autoClose: 3000,
      });
      
      // Define the type for subcategories
      const subcategories: Record<string, string[]> = {
        '🔞 성범죄': ['👠 성매매', '🚨 성폭력/강제추행 등', '👶 미성년 대상 성범죄', '💻 디지털 성범죄'],
        '💰 재산범죄': ['💼 횡령/배임', '📞 사기/공갈', '🔍 기타 재산범죄'],
        '🚗 교통사고/범죄': ['🚗 교통사고/도주', '🍷 음주/무면허'],
        '⚖️ 형사절차': ['📜 고소/소송절차', '🚔 수사/체포/구속'],
        '👊 폭행/협박': ['👊 폭행/협박/상해 일반'],
        '🗣️ 명예훼손/모욕': ['🗣️ 명예훼손/모욕 일반', '💻 사이버 명예훼손/모욕'],
        '🔍 기타 형사범죄': ['💊 마약/도박', '🏫 소년범죄/학교폭력', '⚖️ 형사일반/기타범죄'],
        '🏠 부동산/임대차': ['🏗️ 건축/부동산 일반', '🏢 재개발/재건축', '🏠 매매/소유권 등', '🏠 임대차'],
        '💼 금전/계약 문제': ['💰 손해배상', '💳 대여금/채권추심', '📄 계약일반/매매'],
        '📜 민사절차': ['⚖️ 소송/집행절차', '🔒 가압류/가처분', '📉 회생/파산'],
        '🔎 기타 민사문제': ['📜 공증/내용증명/조합/국제문제 등'],
        '👪 가족': ['💔 이혼', '🏡 상속', '👪 가사 일반'],
        '🏢 회사': ['🏢 기업법무', '👷 노동/인사'],
        '🏥 의료/세금/행정': ['💰 세금/행정/헌법', '🏥 의료/식품의약', '🪖 병역/군형법'],
        '💻 IT/지식재산/금융': ['🛍️ 소비자/공정거래', '💻 IT/개인정보', '🎨 지식재산권/엔터', '💰 금융/보험'],
      };
      const subcategoryQuestion = questions.find(q => q.id === 'subcategory');
      if (subcategoryQuestion) {
        subcategoryQuestion.options = subcategories[answer] || [];
      }
    } else if (currentQ?.id === 'subcategory') {
      // Store subcategory answer
      setAnswer('subcategory', answer);
      toast(`현재 질문: ${currentQuestion}\n답변: ${answer}`, {
        autoClose: 3000,
      });
      
      // Define the type for subsubcategories
      const subsubcategories: Record<string, string[]> = {
        '👠 성���매': ['📱 조건만남', '💬 랜덤채팅', '🎤 유흥업소', '🔞 유사성매매 등'],
        '🚨 성폭력/강제추행 등': ['🚨 성폭행', '💊 준강간', '💔 데이트폭력', '🗣️ 성희롱', '🙈 성추행 등'],
        '👶 미성년 대상 성범죄': ['👶 아동청소년보호법', '🔞 미성년성매매 등'],
        '💻 디지털 성범죄': ['📱 통신매체이용음란죄', '💻 웹하드', '📷 몰카', '📤 음란물유포 등'],
        '💼 횡령/배임': ['💼 업무상 횡령/배임', '💳 신용카드 범죄', '🔍 점유이탈물횡령 등'],
        '📞 사기/공갈': ['📞 보이스피싱', '🆔 명의 대여/도용', '💰 유사수신', '📦 중고사기 등'],
        '🔍 기타 재산범죄': ['🔑 절도', '🏠 주거침입', '🔨 재물손괴', '👜 장물 등'],
        '🚗 교통사고/도주': ['🚗 교통사고 합의', '📝 손해사정', '🚨 뺑소니', '🚗 보복운전 등'],
        '🍷 음주/무면허': ['🍷 음주운전', '🚗 음주사고', '🚫 무면허운전 등'],
        '📜 고소/소송절차': ['🤝 합의', '❌ 무혐의', '⏳ 공소시효', '🖋️ 고소대리', '📜 약식명령', '⚖️ 즉결심판 등'],
        '🚔 수사/체포/구속': ['🚔 체포/구속', '📜 현행법', '🔍 영장', '🔍 압수수색', '💻 포렌식 등'],
        '👊 폭행/협박/상해 일반': ['👊 폭행', '🗣️ 협박', '💥 상해', '🔒 감금', '🚫 유기', '👶 학대', '⚠️ 과실치상상', '🚔 공무집행방해 등'],
        '🗣️ 명예훼손/모욕 일반': ['🗣️ 명예훼손죄', '🗣️ 모욕죄', '❌ 허위사실유포', '🗣️ 언어폭력 등'],
        '💻 사이버 명예훼손/모욕': ['💻 정보통신망법', '💬 악성댓글 등'],
        '💊 마약/도박': ['💊 항정신성의약품', '🌿 대마', '🎲 사설토토', '🎮 사행성게임', '✈️ 원정도박 등'],
        '🏫 소년범죄/학교폭력': ['👶 아동학대', '🏫 학교폭력', '🚫 왕따', '👶 소년사건 등'],
        '⚖️ 형사일반/기타범죄': ['📜 위증', '🚫 무고', '💰 뇌물', '📄 문서위조', '🚶 스토킹', '🔥 실화/방화 등'],
        '🏗️ 건축/부동산 일반': ['🏗️ 건축법', '🔧 하자담보책임', '💧 누수', '🔊 층간소음', '💰 공사대금 등'],
        '🏢 재개발/재건축': ['🏢 재개발', '🏗️ 재건축', '🏘️ 지역주택조합', '🏠 수용', '💰 보상 등'],
        '🏠 매매/소유권 등': ['🏠 부동산매매', '🔒 유치권', '🏗️ 지상권', '🏠 경매', '📝 명의신탁 등'],
        '🏠 임대차': ['🏠 주택/상가임대차', '💰 계약금', '💳 관리금', '💰 보증금', '🏠 전세계약 등'],
        '💰 손해배상': ['💰 손해배상청구', '💔 정신적피해보상', '💰 위자료', '⚖️ 불법행위', '⚠️ 과실 등'],
        '💳 대여금/채권추심': ['💰 대여금반환청구', '💳 채권양류 및 추심', '🤝 연대보증 등'],
        '📄 계약일반/매매': ['📜 계약해지', '📝 계약서검토', '💰 계약금', '💰 중도금', '❌ 이중계약', '🚗 중고차매매 등'],
        '⚖️ 소송/집행절차': ['📜 지급명령', '📄 등기/등록', '🤝 조정/화해/중재', '🔄 재심', '💰 공탁 등'],
        '🔒 가압류/가처분': ['🔒 가처분/가압류 절차', '📜 가등기', '❌ 이의신청', '❌ 취소 등'],
        '📉 회생/파산': ['📉 개인회생', '🏢 법인회생', '📉 파산', '📉 도산', '❌ 면책 등'],
        '📜 공증/내용증명/조합/국제문제 등': ['📜 증여', '🔧 도급/용역', '🏢 조합/사단', '💰 부당이득', '🌍 국제', '⛪ 종교', '📜 공증 등'],
        '💔 이혼': ['💔 합의이혼', '⚖️ 재판이혼', '💰 재산분할', '👶 양육권', '💔 상간', '💰 위자료', '🚫 외도 등'],
        '🏡 상속': ['🏡 상속재산분할', '💰 증여세', '⚖️ 유류분', '❌ 한정승인', '🚫 상속포기 등'],
        '👪 가사 일반': ['👪 친족', '👴 성년후견', '💰 부양료', '👶 친자확인', '👪 친권', '⚖️ 가사소송 등'],
        '🏢 기업법무': ['🚫 경업금지', '🏢 합병', '🏢 영업양도', '🚀 스타트업', '📝 계약서검토', '🚫 부정경쟁방지법 등'],
        '👷 노동/인사': ['👷 노무', '🚫 직장 내 괴롭힘', '💰 임금체불', '🚫 부당해고', '💰 실업급여', '⚠️ 산업재해보상 등'],
        '💰 세금/행정/헌법': ['💰 세금', '💰 과태료', '🌿 환경', '🏢 인허가', '📜 헌법', '🛂 이민/비자', '🗳️ 선거', '📺 연금/방송', '⚖️ 행정소송 등'],
        '🏥 의료/식품의약': ['💉 의료사고', '⚖️ 의료소송', '💊 약사법', '🍽️ 식품위생법 등'],
        '🪖 병역/군형법': ['🪖 국방/병역', '⚖️ 군형법', '🎖️ 유공자/보훈', '⚖️ 군인징계 등'],
        '🛍️ 소비자/공정거래': ['🛍️ 소비자피해', '⚖️ 집단소송', '💻 전자상거래', '🚫 불공정거래', '📜 약관', '❌ 허위/과대광고 등'],
        '💻 IT/개인정보': ['🔒 개인정보유출/침해', '📞 감청', '📜 통신비밀�����법', '🤖 인공지능', '💬 SNS 등'],
        '📜 지식재산권/엔터': ['📜 상표권', '📜 저작권', '📜 특허', '📺 방송', '🎵 음악', '🎬 영화 등'],
        '💰 금융/보험': ['💰 가상화폐', '💰 투자', '📈 마진거래', '🛡️ 보험 등'],
      };
      const subsubcategoryQuestion = questions.find(q => q.id === 'subsubcategory');
      if (subsubcategoryQuestion) {
        subsubcategoryQuestion.options = subsubcategories[answer] || [];
      }
    } else if (currentQ?.id === 'subsubcategory') {
      // Store subsubcategory answer
      setAnswer('subsubcategory', answer);
      toast(`현재 질문: ${currentQuestion}\n답변: ${answer}`, {
        autoClose: 3000,
      });
    } else if (currentQ?.id === 'age') {
      // Store age answer
      setAnswer('age', answer);
      toast(`현재 질문: ${currentQuestion}\n답변: ${answer}`, {
        autoClose: 3000,
      });
    }

    if (currentQ?.multiSelect) {
      // Ensure we're working with an array
      const currentAnswers = Array.isArray(answers[currentQ.id]) 
        ? answers[currentQ.id] as string[]
        : [];

      let updatedAnswers: string[];
      if (answer === '없음 ✅') {
        updatedAnswers = ['없음 ✅'];
      } else {
        updatedAnswers = currentAnswers.includes(answer)
          ? currentAnswers.filter(a => a !== answer && a !== '없음 ✅')
          : [...currentAnswers.filter(a => a !== '없음 ✅'), answer];
      }
      setAnswer(currentQ.id, updatedAnswers);
    } else {
      setAnswer(currentQ?.id ?? '', answer);
      nextQuestion();
    }
  }

  const handleNextQuestion = () => {
    nextQuestion();
  }
// 빵요미 세계관의 재미있는 허구적 에피소드를 포함시켜주세요. 빵을 의인화하해주세요.
// 빵요미 세계관에서 허구적이고 창의적인 방식으로, 걱정되는 점과 좋은 점을 포함시켜주세요.
  const getRecommendations = async () => {
    setIsLoading(true)
const prompt = `다음은 사용자의 성심당 빵 선호도 설문 결과입니다:
${Object.entries(answers).map(([key, value]) => `${key}: ${value}`).join('\n')}

이 정보를 바탕으로 다음 빵 목록에서 가장 적합한 5개의 빵을 추천해주세요:
${JSON.stringify(breadData['빵 목록'])}

성심당 빵요리사인 빵요미 캐릭터의 귀여운 말투로 해주세요. 이모지는 적절히 사용해주세요. 

각 빵에 대해 다음 정보를 포함 세요:
1. 이름
2. 가격
3. 특징 (맛, 텍스처, 크기/중량 등) - 이모지를 적절히 활용하여 구체적으로 설명해주세요.
4. 추천 이유 - 사용자의 연령, 성별, 선호도, 구매 시간, 구매 빈도, 영양 선호도 등을 고려하여 상세히 설명해주세요.

응답은 다음과 ���은 JSON 형식으로만 제공해 주세요:
[
  {
    "name": "빵 이름",
    "price": "가격",
    "features": "특징 (맛, 텍스처, 크기/중량 등)",
    "reason": "추천 이유"
  },
  ...
]`;

    try {
      const genAI = new GoogleGenerativeAI(process.env.NEXT_PUBLIC_GOOGLE_API_KEY);
      const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

      const result = await model.generateContent(prompt);
      const response = await result.response;
      const text = await response.text();
      console.log('text', text);
      
      try {
        const jsonMatch = text.match(/\[[\s\S]*\]/);
        const jsonString = jsonMatch ? jsonMatch[0] : '[]';
        const recommendedBreads = JSON.parse(jsonString);
        console.log('recommendedBreads', recommendedBreads);
        setRecommendations(recommendedBreads);

        // 추천 결과를 Slack으로 전송
        await sendResponseToSlack(recommendedBreads);
      } catch (jsonError) {
        console.error('JSON 파싱 중 오류 발생:', jsonError);
        setRecommendations([]);
      }

    } catch (error) {
      console.error('빵 추천 중 오류 발생:', error);
      setRecommendations([]);
    } finally {
      setIsLoading(false);
    }
  }

  const sendResponseToSlack = async (recommendedBreads: any[]) => {
    try {
      const response = await axios.post('/api/sendResponseToSlack', { answers, recommendedBreads });
      console.log('설문 결과와 추천 빵이 서버로 전송되었습니다.', response.data);
    } catch (error) {
      console.error('서버로 설문 결과 및 추천 빵 전송 중 오류 발생:', error);
    }
  };

  const sendQuestionToSlack = async () => {
    try {
      const response = await axios.post('/api/sendQuestionToSlack', { answers });
      console.log('설문 결과가 서버로 전송되었습니다.', response.data);
    } catch (error) {
      console.error('서버로 설문 결과 전송 중 오류 발생:', error);
    }
  };

  const handleSubmitFeedback = async () => {
    try {
      const response = await axios.post('/api/submitFeedback', { rating, feedback, contactInfo });
      console.log('피드백이 서버로 전송되었습니다.', response.data);
      toast.success('피드백을 제출해주셔서 감사합니다! 😊');
      setFeedbackSubmitted(true); // 피드백 제출 상태 업데이트
    } catch (error) {
      console.error('서버로 피드백 전송 중 오류 발생:', error);
      toast.error('피드백 제출 중 오류가 발생했습니다. 다시 시도해주세요.');
    }
  };

  const currentQ = questions[currentQuestion];

  useEffect(() => {
    if (currentQuestion >= questions.length) {
      sendQuestionToSlack(); // 설문 결과 전송
      window.location.href = '/chat'; // 채팅 페이지로 리다이렉트
    }
  }, [currentQuestion]);

  const handleRecommendAgain = () => {
    // Reset the survey to the first question
    useSurveyStore.getState().resetSurvey();
    // Clear recommendations
    setRecommendations([]);
    // Reset loading state
    setIsLoading(false);
  };

  if (currentQuestion >= questions.length) {
    return (
      <div className="max-w-2xl mx-auto mt-20 p-8 bg-slate-800 rounded-lg shadow-xl text-white">
        <ToastContainer />
        <h2 className="text-3xl font-bold mb-6 text-center text-sky-400">채팅 페이지로 이동합니다...</h2>
        <div className="text-center">
          <p className="text-center mt-4 text-sky-400">잠시만 기다려주세요...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto mt-20 p-6 bg-slate-800 rounded-lg shadow-xl text-white">
      <ToastContainer />
      {/* Progress bar */}
      <div className="mb-6">
        <div className="w-full bg-slate-700 rounded-full h-2.5">
          <div
            className="bg-sky-600 h-2.5 rounded-full transition-all duration-300 ease-in-out"
            style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}
          ></div>
        </div>
        <div className="text-right text-sm text-slate-400 mt-2">
          {currentQuestion + 1} / {questions.length}
        </div>
      </div>

      <div className="flex flex-col">
        <h2 className="text-2xl font-bold mb-4">{currentQ.question}</h2>
          {/* 이전, 다음 버튼 */}
        <div className="flex justify-end mb-4">
          <button
            onClick={prevQuestion}
            disabled={currentQuestion === 0}
            className="px-4 py-2 bg-slate-700 rounded disabled:opacity-50 hover:bg-slate-600 transition duration-150 ease-in-out mr-2"
          >
            이전
          </button>
          <button
            onClick={handleNextQuestion}
            className="px-4 py-2 bg-sky-500 text-white rounded hover:bg-sky-600 transition duration-150 ease-in-out font-bold"
          >
            다음
          </button>
        </div>
        <AnimatePresence mode="wait">
          <motion.div
            key={currentQuestion}
            initial={{ y: 20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            exit={{ y: -20, opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            {currentQ?.options ? (
              <div className={`grid ${currentQ.id === 'age' ? 'grid-cols-5' : 'grid-cols-2'} gap-2 ${currentQ.id === 'age' ? 'mt-4' : ''}`}>
                {currentQ.options.map((option) => (
                  <button
                    key={option}
                    onClick={() => handleAnswer(option)}
                    className={`p-2 text-center rounded transition duration-150 ease-in-out ${
                      answers[currentQ.id]?.includes(option)
                        ? 'bg-sky-400 hover:bg-sky-500 text-slate-800'
                        : 'bg-slate-700 hover:bg-slate-600'
                    }`}
                  >
                    {option}
                  </button>
                ))}
              </div>
            ) : (
              <input
                type={currentQ?.type || 'text'}
                value={answers[currentQ?.id ?? ''] || ''}
                onChange={(e) => setAnswer(currentQ?.id ?? '', e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleNextQuestion()}
                className="w-full p-2 border rounded bg-slate-700 text-white"
              />
            )}
          </motion.div>
        </AnimatePresence>
        
      
      </div>
    </div>
  )
}
File: ./components/faqs.tsx
Content:
export default function Faqs() {
  return (
  <section className="relative">

    {/* Blurred shape */}
    <div className="absolute top-0 -translate-y-1/3 left-1/2 -translate-x-1/2 ml-24 blur-2xl opacity-50 pointer-events-none -z-10" aria-hidden="true">
      <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
        <defs>
          <linearGradient id="bs3-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
            <stop offset="0%" stopColor="#6366F1" />
            <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
          </linearGradient>
        </defs>
        <path fill="url(#bs3-a)" fillRule="evenodd" d="m410 0 461 369-284 58z" transform="matrix(1 0 0 -1 -410 427)" />
      </svg>
    </div>

    <div className="max-w-6xl mx-auto px-4 sm:px-6">
      <div className="py-12 md:py-20 border-t [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">

        {/* Section header */}
        <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
          <div>
            <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">버블버블 AI 법률 서비스</div>
          </div>
          <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">자주 묻는 질문</h2>
        </div>

        {/* Columns */}
        <div className="md:flex md:space-x-12 space-y-8 md:space-y-0">

          {/* Column */}
          <div className="w-full md:w-1/2 space-y-8">

            {/* Item */}
            <div className="space-y-2">
              <h4 className="font-semibold">Bubble Bubble(버블버블) AI 법률 서비스란 무엇인가요?</h4>
              <p className="text-slate-400">Bubble Bubble은 AI 기술을 활용하여 모든 연령대의 시민들에게 접근 가능한 법률 정보와 범죄 예방 서비스를 제공하는 혁신적인 플랫폼입니다. 생애주기별 맞춤 서비스, 시민체감형 서비스, 원스톱 서비스를 통해 다양한 법률 문제에 대응합니다.</p>
            </div>

            {/* Item */}
            <div className="space-y-2">
              <h4 className="font-semibold">이 서비스는 어떤 기능을 제공하나요?</h4>
              <p className="text-slate-400">생애주기별 맞춤 서비스, 음성 및 채팅 기반 인터페이스, 최신 사례 기반 피해 예방 정보, 게임형 학습 서비스, 사용자 위험도에 따른 맞춤형 안내 및 정서적 지원, 다양한 법률 문제에 대한 원스톱 서비스 등을 제공합니다.</p>
            </div>

            {/* Item */}
            <div className="space-y-2">
              {/* <h4 className="font-semibold">이 서비스는 무료인가요?</h4> */}
              {/* <p className="text-slate-400">기본 서비스는 무료로 제공되며,</p> */}
            </div>

          </div>

          {/* Column */}
          <div className="w-full md:w-1/2 space-y-8">

            {/* Item */}
            <div className="space-y-2">
              <h4 className="font-semibold">개인정보는 안전하게 보호되나요?</h4>
              <p className="text-slate-400">네, 철저한 개인정보 보호 정책을 수립하고 시행하고 있습니다. 사용자의 데이터는 암호화되어 안전하게 저장되며, 법적 요구사항을 준수합니다.</p>
            </div>

            {/* Item */}
            <div className="space-y-2">
              <h4 className="font-semibold">고객 지원은 어떻게 이루어지나요?</h4>
              <p className="text-slate-400">24/7 AI 기반 자동 응답 시스템을 운영하고 있으며, 필요한 경우 전문 고객지원팀이 추가적인 도움을 제공합니다.</p>
            </div>

            {/* Item */}
            <div className="space-y-2">
              <h4 className="font-semibold">이 서비스의 향후 계획은 무엇인가요?</h4>
              <p className="text-slate-400">AI 기술 고도화를 통한 서비스 정확도 개선, 더 많은 법률 분야로의 서비스 확장, 그리고 국제적인 법률 지원 서비스로의 발전을 계획하고 있습니다.</p>
            </div>

          </div>

        </div>

      </div>
    </div>
  </section>
  )
}
File: ./components/features.tsx
Content:
'use client'

import { useState } from 'react'
import Image from 'next/image'
import { Transition } from '@headlessui/react'
import Particles from './particles'
import Illustration from '@/public/images/glow-top.svg'

export default function Features() {
  const [tab, setTab] = useState<number>(1)

  return (
    <section>
      <div className="relative max-w-6xl mx-auto px-4 sm:px-6">
        {/* Illustration */}
        <div className="absolute inset-0 -z-10 -mx-28 rounded-t-[3rem] pointer-events-none overflow-hidden" aria-hidden="true">
          <div className="absolute left-1/2 -translate-x-1/2 top-0 -z-10">
            <Image src={Illustration} className="max-w-none" width={1404} height={658} alt="Features Illustration" />
          </div>
        </div>

        <div className="pt-16 pb-12 md:pt-52 md:pb-20">
          <div>
            {/* Section content */}
            <div className="max-w-xl mx-auto md:max-w-none flex flex-col md:flex-row md:space-x-8 lg:space-x-16 xl:space-x-20 space-y-8 space-y-reverse md:space-y-0">
              {/* Content */}
              <div className="md:w-7/12 lg:w-1/2 order-1 md:order-none max-md:text-center" data-aos="fade-down">
                {/* Content #1 */}
                <div>
                  <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">AI 기반 법률 솔루션</div>
                </div>
                <h3 className="h3 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-3">법률 문제, 복잡한 법을 Bubble Bubble로 해결하세요</h3>
                <p className="text-lg text-slate-400 mb-8">24시간 대기 중인 AI 법률 비서, 플로라와 티모가 당신의 모든 법률 문제를 스마트하게 해결해드립니다. 전세사기부터 디지털 성범죄까지, 어떤 문제든 상담해보세요.</p>
                <div className="mt-8 max-w-xs max-md:mx-auto space-y-2">
                  <button className={`flex items-center text-sm font-medium text-slate-50 rounded border bg-slate-800/25 w-full px-3 py-2 transition duration-150 ease-in-out hover:opacity-100 ${tab !== 1 ? 'border-slate-700 opacity-50' : 'border-sky-700 shadow shadow-sky-500/25'}`} onClick={() => setTab(1)}>
                    <svg className="shrink-0 fill-slate-300 mr-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M14 0a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12Zm0 14V2H2v12h12Zm-3-7H5a1 1 0 1 1 0-2h6a1 1 0 0 1 0 2Zm0 4H5a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2Z" />
                    </svg>
                    <span>음성으로 묻고 AI로 답하는 상담</span>
                  </button>
                  <button className={`flex items-center text-sm font-medium text-slate-50 rounded border bg-slate-800/25 w-full px-3 py-2 transition duration-150 ease-in-out hover:opacity-100 ${tab !== 2 ? 'border-slate-700 opacity-50' : 'border-sky-700 shadow shadow-sky-500/25'}`} onClick={() => setTab(2)}>
                    <svg className="shrink-0 fill-slate-300 mr-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M2 6H0V2a2 2 0 0 1 2-2h4v2H2v4ZM16 6h-2V2h-4V0h4a2 2 0 0 1 2 2v4ZM14 16h-4v-2h4v-4h2v4a2 2 0 0 1-2 2ZM6 16H2a2 2 0 0 1-2-2v-4h2v4h4v2Z" />
                    </svg>
                    <span>생애주기별 맞춤 법률 서비스</span>
                  </button>
                  <button className={`flex items-center text-sm font-medium text-slate-50 rounded border bg-slate-800/25 w-full px-3 py-2 transition duration-150 ease-in-out hover:opacity-100 ${tab !== 3 ? 'border-slate-700 opacity-50' : 'border-sky-700 shadow shadow-sky-500/25'}`} onClick={() => setTab(3)}>
                    <svg className="shrink-0 fill-slate-300 mr-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M14.3.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-8 8c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4l8-8ZM15 7c.6 0 1 .4 1 1 0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8c.6 0 1 .4 1 1s-.4 1-1 1C4.7 2 2 4.7 2 8s2.7 6 6 6 6-2.7 6-6c0-.6.4-1 1-1Z" />
                    </svg>
                    <span>원스톱 법률 솔루션</span>
                  </button>
                </div>
              </div>

              {/* Image */}
              <div className="md:w-5/12 lg:w-1/2" data-aos="fade-up" data-aos-delay="100">
                <div className="relative py-24 -mt-12">
                  {/* Particles animation */}
                  <Particles className="absolute inset-0 -z-10" quantity={8} staticity={30} />

                  <div className="flex items-center justify-center">
                    <div className="relative w-48 h-48 flex justify-center items-center">
                      {/* Halo effect */}
                      <svg className="absolute inset-0 left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 will-change-transform pointer-events-none blur-md" width="480" height="480" viewBox="0 0 480 480" xmlns="http://www.w3.org/2000/svg">
                        <defs>
                          <linearGradient id="pulse-a" x1="50%" x2="50%" y1="100%" y2="0%">
                            <stop offset="0%" stopColor="#A855F7" />
                            <stop offset="76.382%" stopColor="#FAF5FF" />
                            <stop offset="100%" stopColor="#6366F1" />
                          </linearGradient>
                        </defs>
                        <g fillRule="evenodd">
                          <path className="pulse" fill="url(#pulse-a)" fillRule="evenodd" d="M240,0 C372.5484,0 480,107.4516 480,240 C480,372.5484 372.5484,480 240,480 C107.4516,480 0,372.5484 0,240 C0,107.4516 107.4516,0 240,0 Z M240,88.8 C156.4944,88.8 88.8,156.4944 88.8,240 C88.8,323.5056 156.4944,391.2 240,391.2 C323.5056,391.2 391.2,323.5056 391.2,240 C391.2,156.4944 323.5056,88.8 240,88.8 Z" />
                          <path className="pulse pulse-1" fill="url(#pulse-a)" fillRule="evenodd" d="M240,0 C372.5484,0 480,107.4516 480,240 C480,372.5484 372.5484,480 240,480 C107.4516,480 0,372.5484 0,240 C0,107.4516 107.4516,0 240,0 Z M240,88.8 C156.4944,88.8 88.8,156.4944 88.8,240 C88.8,323.5056 156.4944,391.2 240,391.2 C323.5056,391.2 391.2,323.5056 391.2,240 C391.2,156.4944 323.5056,88.8 240,88.8 Z" />
                          <path className="pulse pulse-2" fill="url(#pulse-a)" fillRule="evenodd" d="M240,0 C372.5484,0 480,107.4516 480,240 C480,372.5484 372.5484,480 240,480 C107.4516,480 0,372.5484 0,240 C0,107.4516 107.4516,0 240,0 Z M240,88.8 C156.4944,88.8 88.8,156.4944 88.8,240 C88.8,323.5056 156.4944,391.2 240,391.2 C323.5056,391.2 391.2,323.5056 391.2,240 C391.2,156.4944 323.5056,88.8 240,88.8 Z" />
                        </g>
                      </svg>
                      {/* Grid */}
                      <div className="absolute inset-0 left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 pointer-events-none w-[500px] h-[500px] rounded-full overflow-hidden [mask-image:_radial-gradient(black,_transparent_60%)]">
                        <div className="h-[200%] animate-endless">
                          <div className="absolute inset-0 [background:_repeating-linear-gradient(transparent,_transparent_48px,_theme(colors.white)_48px,_theme(colors.white)_49px)] blur-[2px] opacity-20" />
                          <div className="absolute inset-0 [background:_repeating-linear-gradient(transparent,_transparent_48px,_theme(colors.amber.500)_48px,_theme(colors.amber.500)_49px)]" />
                          <div className="absolute inset-0 [background:_repeating-linear-gradient(90deg,transparent,_transparent_48px,_theme(colors.white)_48px,_theme(colors.white)_49px)] blur-[2px] opacity-20" />
                          <div className="absolute inset-0 [background:_repeating-linear-gradient(90deg,transparent,_transparent_48px,_theme(colors.amber.500)_48px,_theme(colors.amber.500)_49px)]" />
                        </div>
                      </div>
                      {/* Icons */}
                      <Transition
                        show={tab === 1}
                        className="absolute"
                        enter="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700 order-first"
                        enterFrom="opacity-0 -rotate-[60deg]"
                        enterTo="opacity-100 rotate-0"
                        leave="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700"
                        leaveFrom="opacity-100 rotate-0"
                        leaveTo="opacity-0 rotate-[60deg]"
                      >
                        <div className="relative flex items-center justify-center w-16 h-16 border border-transparent rounded-2xl shadow-2xl -rotate-[14deg] [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-2xl">
                          <svg className="relative fill-slate-200" xmlns="http://www.w3.org/2000/svg" width="23" height="25">
                            <path fillRule="nonzero" d="M18 2h-2c0-1.1-.9-2-2-2s-2 .9-2 2H8c0-1.1-.9-2-2-2S4 .9 4 2H2C.9 2 0 2.9 0 4v18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 20H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4v-2h2v2zm10 8h-8v-2h8v-4h2v4a2 2 0 0 1-2 2Zm0-4h-8v-2h8v2zm0-4h-8v-2h8v2z"/>
                          </svg>
                        </div>
                      </Transition>
                      <Transition
                        show={tab === 2}
                        className="absolute"
                        enter="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700 order-first"
                        enterFrom="opacity-0 -rotate-[60deg]"
                        enterTo="opacity-100 rotate-0"
                        leave="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700"
                        leaveFrom="opacity-100 rotate-0"
                        leaveTo="opacity-0 rotate-[60deg]"
                      >
                        <div className="relative flex items-center justify-center w-16 h-16 border border-transparent rounded-2xl shadow-2xl -rotate-[14deg] [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-2xl">
                          <svg className="relative fill-slate-200" xmlns="http://www.w3.org/2000/svg" width="22" height="22">
                            <path d="M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm5.8 8.4L15.3 12l2.5 3.6c.1.2.1.4 0 .6l-1.7 1.7c-.2.1-.4.1-.6 0L12 15.3l-3.6 2.5c-.2.1-.4.1-.6 0l-1.7-1.7c-.1-.2-.1-.4 0-.6l2.5-3.6-2.5-3.6c-.1-.2-.1-.4 0-.6l1.7-1.7c.2-.1.4-.1.6 0L12 8.7l3.6-2.5c.2-.1.4-.1.6 0l1.7 1.7c.1.2.1.4 0 .6z"/>
                          </svg>
                        </div>
                      </Transition>
                      <Transition
                        show={tab === 3}
                        className="absolute"
                        enter="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700 order-first"
                        enterFrom="opacity-0 -rotate-[60deg]"
                        enterTo="opacity-100 rotate-0"
                        leave="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700"
                        leaveFrom="opacity-100 rotate-0"
                        leaveTo="opacity-0 rotate-[60deg]"
                      >
                        <div className="relative flex items-center justify-center w-16 h-16 border border-transparent rounded-2xl shadow-2xl -rotate-[14deg] [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-2xl">
                          <svg className="relative fill-slate-200" xmlns="http://www.w3.org/2000/svg" width="26" height="14">
                            <path fillRule="nonzero" d="M21.9 6.4C21.7 3.8 19.6 2 17 2c-2.2 0-4.1 1.3-4.9 3.2C10.9 3.9 9 3 7 3 4.2 3 2 5.2 2 8c0 2.8 2.2 5 5 5h14c2.8 0 5-2.2 5-5 0-.9-.2-1.7-.6-2.4C24.8 6.1 23.4 6.4 21.9 6.4z"/>
                          </svg>
                        </div>
                      </Transition>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/particles.tsx
Content:
'use client'

import React, { useRef, useEffect } from 'react'
import MousePosition from './utils/mouse-position'

interface ParticlesProps {
  className?: string
  quantity?: number
  staticity?: number
  ease?: number,
  refresh?: boolean
}

export default function Particles({
  className = '',
  quantity = 30,
  staticity = 50,
  ease = 50,
  refresh = false
}: ParticlesProps) {
  const canvasRef = useRef<HTMLCanvasElement>(null)
  const canvasContainerRef = useRef<HTMLDivElement>(null)
  const context = useRef<CanvasRenderingContext2D | null>(null)
  const circles = useRef<any[]>([])
  const mousePosition = MousePosition()
  const mouse = useRef<{ x: number; y: number }>({ x: 0, y: 0 })
  const canvasSize = useRef<{ w: number; h: number }>({ w: 0, h: 0 })
  const dpr = typeof window !== 'undefined' ? window.devicePixelRatio : 1

  useEffect(() => {    
    if (canvasRef.current) {
      context.current = canvasRef.current.getContext('2d')
    }
    initCanvas()
    animate()
    window.addEventListener('resize', initCanvas)

    return () => {
      window.removeEventListener('resize', initCanvas)
    }
  }, [])

  useEffect(() => {
    onMouseMove()
  }, [mousePosition.x, mousePosition.y])

  useEffect(() => {
    initCanvas()
  }, [refresh])  

  const initCanvas = () => {
    resizeCanvas()
    drawParticles()
  }

  const onMouseMove = () => {
    if (canvasRef.current) {
      const rect = canvasRef.current.getBoundingClientRect()
      const { w, h } = canvasSize.current
      const x = mousePosition.x - rect.left - w / 2
      const y = mousePosition.y - rect.top - h / 2
      const inside = x < w / 2 && x > -w / 2 && y < h / 2 && y > -h / 2
      if (inside) {
        mouse.current.x = x
        mouse.current.y = y
      }
    }
  }

  type Circle = {
    x: number
    y: number
    translateX: number
    translateY: number
    size: number
    alpha: number
    targetAlpha: number
    dx: number
    dy: number
    magnetism: number
  }

  const resizeCanvas = () => {
    if (canvasContainerRef.current && canvasRef.current && context.current) {
      circles.current.length = 0
      canvasSize.current.w = canvasContainerRef.current.offsetWidth
      canvasSize.current.h = canvasContainerRef.current.offsetHeight
      canvasRef.current.width = canvasSize.current.w * dpr
      canvasRef.current.height = canvasSize.current.h * dpr
      canvasRef.current.style.width = canvasSize.current.w + 'px'
      canvasRef.current.style.height = canvasSize.current.h + 'px'
      context.current.scale(dpr, dpr)
    }
  }

  const circleParams = (): Circle => {
    const x = Math.floor(Math.random() * canvasSize.current.w)
    const y = Math.floor(Math.random() * canvasSize.current.h)
    const translateX = 0
    const translateY = 0
    const size = Math.floor(Math.random() * 2) + 1
    const alpha = 0
    const targetAlpha = parseFloat((Math.random() * 0.6 + 0.1).toFixed(1))
    const dx = (Math.random() - 0.5) * 0.2
    const dy = (Math.random() - 0.5) * 0.2
    const magnetism = 0.1 + Math.random() * 4
    return { x, y, translateX, translateY, size, alpha, targetAlpha, dx, dy, magnetism }
  }

  const drawCircle = (circle: Circle, update = false) => {
    if (context.current) {
      const { x, y, translateX, translateY, size, alpha } = circle
      context.current.translate(translateX, translateY)
      context.current.beginPath()
      context.current.arc(x, y, size, 0, 2 * Math.PI)
      context.current.fillStyle = `rgba(255, 255, 255, ${alpha})`
      context.current.fill()
      context.current.setTransform(dpr, 0, 0, dpr, 0, 0)

      if (!update) {
        circles.current.push(circle)
      }
    }
  }

  const clearContext = () => {
    if (context.current) {
      context.current.clearRect(0, 0, canvasSize.current.w, canvasSize.current.h)
    }
  }

  const drawParticles = () => {
    clearContext()
    const particleCount = quantity
    for (let i = 0; i < particleCount; i++) {
      const circle = circleParams()
      drawCircle(circle)
    }
  }

  const remapValue = (
    value: number,
    start1: number,
    end1: number,
    start2: number,
    end2: number
  ): number => {
    const remapped = ((value - start1) * (end2 - start2)) / (end1 - start1) + start2
    return remapped > 0 ? remapped : 0
  }

  const animate = () => {
    clearContext()
    circles.current.forEach((circle: Circle, i: number) => {
      // Handle the alpha value
      const edge = [
        circle.x + circle.translateX - circle.size, // distance from left edge
        canvasSize.current.w - circle.x - circle.translateX - circle.size, // distance from right edge
        circle.y + circle.translateY - circle.size, // distance from top edge
        canvasSize.current.h - circle.y - circle.translateY - circle.size, // distance from bottom edge
      ]
      const closestEdge = edge.reduce((a, b) => Math.min(a, b))
      const remapClosestEdge = parseFloat(remapValue(closestEdge, 0, 20, 0, 1).toFixed(2))
      if (remapClosestEdge > 1) {
        circle.alpha += 0.02
        if (circle.alpha > circle.targetAlpha) circle.alpha = circle.targetAlpha
      } else {
        circle.alpha = circle.targetAlpha * remapClosestEdge
      }
      circle.x += circle.dx
      circle.y += circle.dy
      circle.translateX += ((mouse.current.x / (staticity / circle.magnetism)) - circle.translateX) / ease
      circle.translateY += ((mouse.current.y / (staticity / circle.magnetism)) - circle.translateY) / ease
      // circle gets out of the canvas
      if (
        circle.x < -circle.size ||
        circle.x > canvasSize.current.w + circle.size ||
        circle.y < -circle.size ||
        circle.y > canvasSize.current.h + circle.size
      ) {
        // remove the circle from the array
        circles.current.splice(i, 1)
        // create a new circle
        const newCircle = circleParams()
        drawCircle(newCircle)
        // update the circle position
      } else {
        drawCircle(
          {
            ...circle,
            x: circle.x,
            y: circle.y,
            translateX: circle.translateX,
            translateY: circle.translateY,
            alpha: circle.alpha,
          },
          true
        )
      }
    })
    window.requestAnimationFrame(animate)
  }

  return (
    <div className={className} ref={canvasContainerRef} aria-hidden="true">
      <canvas ref={canvasRef} />
    </div>
  )

}

File: ./components/features-03.tsx
Content:
import Image from 'next/image'
import Highlighter, { HighlighterItem } from './highlighter'

import FeatureImg04 from '@/public/images/feature-image-04.png'

export default function Features03() {
  return (
    <section className="relative">

      {/* Blurred shape */}
      <div className="absolute top-0 -translate-y-1/4 left-1/2 -translate-x-1/2 blur-2xl opacity-50 pointer-events-none -z-10" aria-hidden="true">
        <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
          <defs>
            <linearGradient id="bs3-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
              <stop offset="0%" stopColor="#6366F1" />
              <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
            </linearGradient>
          </defs>
          <path fill="url(#bs3-a)" fillRule="evenodd" d="m410 0 461 369-284 58z" transform="matrix(1 0 0 -1 -410 427)" />
        </svg>
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-16 pb-12 md:pt-32 md:pb-20 border-b border-slate-800">

          {/* Section header */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">More than a login box</h2>
            <p className="text-lg text-slate-400">There are many variations available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>
          </div>

          <div className="max-w-3xl mx-auto">
            <div data-aos="fade-down">
              <Highlighter className="group">
                <HighlighterItem>
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/2 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px]" />
                    </div>
                    <Image src={FeatureImg04} width={768} height={400} alt="Feature 04" />
                  </div>
                </HighlighterItem>
              </Highlighter>
            </div>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/post-date.tsx
Content:
import { parseISO, format } from 'date-fns'

export default function PostDate({ dateString }: {
  dateString: string
}) {
  const date = parseISO(dateString)
  return <time dateTime={dateString}>{format(date, 'MMM d, yyyy')}</time>
}

File: ./components/features-02.tsx
Content:
import Image from 'next/image'
import Particles from './particles'
import Highlighter, { HighlighterItem } from './highlighter'

import FeatureImg01 from '@/public/images/feature-image-01.png'
import FeatureImg02 from '@/public/images/feature-image-02.png'
import FeatureImg03 from '@/public/images/feature-image-03.png'

export default function Features02() {
  return (
    <section className="relative">

      {/* Particles animation */}
      <div className="absolute left-1/2 -translate-x-1/2 top-0 -z-10 w-80 h-80 -mt-24 -ml-32">
        <Particles className="absolute inset-0 -z-10" quantity={6} staticity={30} />    
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-16 md:pt-32">

          {/* Section header */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Faster. Smarter.</h2>
            <p className="text-lg text-slate-400">There are many variations available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>
          </div>

          {/* Highlighted boxes */}
          <div className="relative pb-12 md:pb-20">
            {/* Blurred shape */}
            <div className="absolute bottom-0 -mb-20 left-1/2 -translate-x-1/2 blur-2xl opacity-50 pointer-events-none" aria-hidden="true">
              <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
                <defs>
                  <linearGradient id="bs2-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                    <stop offset="0%" stopColor="#6366F1" />
                    <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
                  </linearGradient>
                </defs>
                <path fill="url(#bs2-a)" fillRule="evenodd" d="m346 898 461 369-284 58z" transform="translate(-346 -898)" />
              </svg>
            </div>
            {/* Grid */}
            <Highlighter className="grid md:grid-cols-12 gap-6 group">
              {/* Box #1 */}
              <div className="md:col-span-12" data-aos="fade-down">
                <HighlighterItem>
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    <div className="flex flex-col md:flex-row md:items-center md:justify-between">
                      {/* Blurred shape */}
                      <div className="absolute right-0 top-0 blur-2xl" aria-hidden="true">
                        <svg xmlns="http://www.w3.org/2000/svg" width="342" height="393">
                          <defs>
                            <linearGradient id="bs-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                              <stop offset="0%" stopColor="#6366F1" />
                              <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
                            </linearGradient>
                          </defs>
                          <path fill="url(#bs-a)" fillRule="evenodd" d="m104 .827 461 369-284 58z" transform="translate(0 -112.827)" opacity=".7" />
                        </svg>
                      </div>
                      {/* Radial gradient */}
                      <div className="absolute flex items-center justify-center bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 h-full aspect-square" aria-hidden="true">
                        <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-70" />
                        <div className="absolute w-1/4 h-1/4 translate-z-0 bg-sky-400 rounded-full blur-[40px]" />
                      </div>
                      {/* Text */}
                      <div className="md:max-w-[480px] shrink-0 order-1 md:order-none p-6 pt-0 md:p-8 md:pr-0">
                        <div className="mb-5">
                          <div>
                            <h3 className="inline-flex text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-1">Optimized for security</h3>
                            <p className="text-slate-400">Optimize for user experience and privacy. Use social login integrations, lower user friction, incorporate rich user profiling, and facilitate more transactions.</p>
                          </div>
                        </div>
                        <div>
                          <a className="btn-sm text-slate-300 hover:text-white transition duration-150 ease-in-out group [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none" href="#0">
                            <span className="relative inline-flex items-center">
                              Learn more <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                            </span>
                          </a>
                        </div>
                      </div>
                      {/* Image */}
                      <div className="relative w-full h-64 md:h-auto overflow-hidden">
                        <Image className="absolute bottom-0 left-1/2 -translate-x-1/2 mx-auto max-w-none md:relative md:left-0{md}transla{}-x-0" src={FeatureImg01} width="504" height="400" alt="Feature 01" />
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
              </div>
              {/* Box #2 */}
              <div className="md:col-span-7" data-aos="fade-down">
                <HighlighterItem>
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    <div className="flex flex-col">
                      {/* Radial gradient */}
                      <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/2 aspect-square" aria-hidden="true">
                        <div className="absolute inset-0 translate-z-0 bg-slate-800 rounded-full blur-[80px]" />
                      </div>
                      {/* Text */}
                      <div className="md:max-w-[480px] shrink-0 order-1 md:order-none p-6 pt-0 md:p-8">
                        <div>
                          <h3 className="inline-flex text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-1">Extensibility</h3>
                          <p className="text-slate-400">Your login box must find the right balance between user convenience, privacy and security.</p>
                        </div>
                      </div>
                      {/* Image */}
                      <div className="relative w-full h-64 md:h-auto overflow-hidden md:pb-8">
                        <Image className="absolute bottom-0 left-1/2 -translate-x-1/2 mx-auto max-w-none md:max-w-full md:relative md:left-0 md:translate-x-0" src={FeatureImg02} width={536} height={230} alt="Feature 02" />
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
              </div>
              {/* Box #3 */}
              <div className="md:col-span-5" data-aos="fade-down">
                <HighlighterItem>
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    <div className="flex flex-col">
                      {/* Radial gradient */}
                      <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/2 aspect-square" aria-hidden="true">
                        <div className="absolute inset-0 translate-z-0 bg-slate-800 rounded-full blur-[80px]" />
                      </div>
                      {/* Text */}
                      <div className="md:max-w-[480px] shrink-0 order-1 md:order-none p-6 pt-0 md:p-8">
                        <div>
                          <h3 className="inline-flex text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-1">Infinite options</h3>
                          <p className="text-slate-400">Quickly apply filters to refine your issues lists and create custom views.</p>
                        </div>
                      </div>
                      {/* Image */}
                      <div className="relative w-full h-64 md:h-auto overflow-hidden md:pb-8">
                        <Image className="absolute bottom-0 left-1/2 -translate-x-1/2 mx-auto max-w-none md:max-w-full md:relative md:left-0 md:translate-x-0" src={FeatureImg03} width={230} height={230} alt="Feature 03" />
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
              </div>
            </Highlighter>
          </div>

          {/* Features list */}
          <div className="grid md:grid-cols-3 gap-8 md:gap-12">
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M7.999 2.34a4.733 4.733 0 0 0-6.604 6.778l5.904 5.762a1 1 0 0 0 1.4 0l5.915-5.77a4.733 4.733 0 0 0-6.615-6.77Zm5.208 5.348-5.208 5.079-5.2-5.07a2.734 2.734 0 0 1 3.867-3.864c.182.19.335.404.455.638a1.04 1.04 0 0 0 1.756 0 2.724 2.724 0 0 1 5.122 1.294 2.7 2.7 0 0 1-.792 1.923Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Filters</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M11 0c1.3 0 2.6.5 3.5 1.5 1 .9 1.5 2.2 1.5 3.5 0 1.3-.5 2.6-1.4 3.5l-1.2 1.2c-.2.2-.5.3-.7.3-.2 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4l1.1-1.2c.6-.5.9-1.3.9-2.1s-.3-1.6-.9-2.2C12 1.7 10 1.7 8.9 2.8L7.7 4c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4l1.2-1.1C8.4.5 9.7 0 11 0ZM8.3 12c.4-.4 1-.5 1.4-.1.4.4.4 1 0 1.4l-1.2 1.2C7.6 15.5 6.3 16 5 16c-1.3 0-2.6-.5-3.5-1.5C.5 13.6 0 12.3 0 11c0-1.3.5-2.6 1.5-3.5l1.1-1.2c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L2.9 8.9c-.6.5-.9 1.3-.9 2.1s.3 1.6.9 2.2c1.1 1.1 3.1 1.1 4.2 0L8.3 12Zm1.1-6.8c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-4.2 4.2c-.2.2-.5.3-.7.3-.2 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4l4.2-4.2Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Configurable</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M14 0a2 2 0 0 1 2 2v4a1 1 0 0 1-2 0V2H2v12h4a1 1 0 0 1 0 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12Zm-1.957 10.629 3.664 3.664a1 1 0 0 1-1.414 1.414l-3.664-3.664-.644 2.578a.5.5 0 0 1-.476.379H9.5a.5.5 0 0 1-.48-.362l-2-7a.5.5 0 0 1 .618-.618l7 2a.5.5 0 0 1-.017.965l-2.578.644Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Adaptable</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M14.3.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-8 8c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4l8-8ZM15 7c.6 0 1 .4 1 1 0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8c.6 0 1 .4 1 1s-.4 1-1 1C4.7 2 2 4.7 2 8s2.7 6 6 6 6-2.7 6-6c0-.6.4-1 1-1Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Authorization</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M14 0a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12Zm0 14V2H2v12h12Zm-3-7H5a1 1 0 1 1 0-2h6a1 1 0 0 1 0 2Zm0 4H5a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Management</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
            {/* Feature */}
            <div>
              <div className="flex items-center space-x-2 mb-1">
                <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                  <path d="M14.574 5.67a13.292 13.292 0 0 1 1.298 1.842 1 1 0 0 1 0 .98C15.743 8.716 12.706 14 8 14a6.391 6.391 0 0 1-1.557-.2l1.815-1.815C10.97 11.82 13.06 9.13 13.82 8c-.163-.243-.39-.56-.669-.907l1.424-1.424ZM.294 15.706a.999.999 0 0 1-.002-1.413l2.53-2.529C1.171 10.291.197 8.615.127 8.49a.998.998 0 0 1-.002-.975C.251 7.29 3.246 2 8 2c1.331 0 2.515.431 3.548 1.038L14.293.293a.999.999 0 1 1 1.414 1.414l-14 14a.997.997 0 0 1-1.414 0ZM2.18 8a12.603 12.603 0 0 0 2.06 2.347l1.833-1.834A1.925 1.925 0 0 1 6 8a2 2 0 0 1 2-2c.178 0 .348.03.512.074l1.566-1.566C9.438 4.201 8.742 4 8 4 5.146 4 2.958 6.835 2.181 8Z" />
                </svg>
                <h4 className="font-medium text-slate-50">Building</h4>
              </div>
              <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
            </div>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/features-05.tsx
Content:
import Image from 'next/image'
import Illustration from '@/public/images/pricing-illustration.svg'
import IllustrationTop from '@/public/images/pricing-illustration-top.svg'
import Icon01 from '@/public/images/pricing-icon-01.svg'
import Icon02 from '@/public/images/pricing-icon-02.svg'
import Icon03 from '@/public/images/pricing-icon-03.svg'
import Icon04 from '@/public/images/pricing-icon-04.svg'
import Icon05 from '@/public/images/pricing-icon-05.svg'
import Icon06 from '@/public/images/pricing-icon-06.svg'
import Icon07 from '@/public/images/pricing-icon-07.svg'
import Particles from '@/components/particles'

export default function Features05() {
  return (
    <section className="relative">

      {/* Particles animation */}
      <div className="absolute left-1/2 -translate-x-1/2 top-0 -z-10 w-64 h-64 -mt-24">
        <Particles className="absolute inset-0 -z-10" quantity={6} staticity={30} />
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pb-12 md:pb-20">

          {/* Section header */}
          <div className="max-w-3xl mx-auto text-center pb-12">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">플로라와 티모를 만나보세요</h2>
            <p className="text-lg text-slate-400">
              감성적인 플로라와 논리적인 티모가 함께하는 AI 법률 비서, Bubble Bubble. 모든 법률 문제를 쉽고 편리하게 해결해드립니다.
            </p>
          </div>

          {/* Rings illustration */}
          <div className="text-center pb-8">
            <div className="inline-flex items-center justify-center relative">
              {/* Particles animation */}
              <Particles className="absolute inset-0 -z-10" quantity={10} />
              <div className="inline-flex">
                <Image src={Illustration} width="334" height="334" alt="Features illustration" />
              </div>
              <Image className="absolute -mt-[40%]" src={IllustrationTop} width="396" height="328" alt="Features illustration top" aria-hidden="true" />
              <div className="absolute w-[200%] flex items-center justify-center space-x-5">
                <div className="-rotate-[4deg]">
                  <Image className="w-11 h-11 drop-shadow-lg animate-[float_2.6s_ease-in-out_infinite] opacity-10" src={Icon01} width={80} height={80} alt="Pricing icon 01" />
                </div>
                <div className="rotate-[4deg]">
                  <Image className="w-14 h-14 drop-shadow-lg animate-[float_2.4s_ease-in-out_infinite] opacity-25" src={Icon02} width={80} height={80} alt="Pricing icon 02" />
                </div>
                <div className="-rotate-[4deg]">
                  <Image className="w-16 h-16 drop-shadow-lg animate-[float_2.2s_ease-in-out_infinite] opacity-60" src={Icon03} width={80} height={80} alt="Pricing icon 03" />
                </div>
                <Image className="drop-shadow-lg animate-float" src={Icon04} width={80} height={80} alt="Pricing icon 04" />
                <div className="rotate-[4deg]">
                  <Image className="w-16 h-16 drop-shadow-lg animate-[float_2.2s_ease-in-out_infinite] opacity-60" src={Icon05} width={80} height={80} alt="Pricing icon 05" />
                </div>
                <div className="-rotate-[4deg]">
                  <Image className="w-14 h-14 drop-shadow-lg animate-[float_2.4s_ease-in-out_infinite] opacity-25" src={Icon06} width={80} height={80} alt="Pricing icon 06" />
                </div>
                <div className="rotate-[4deg]">
                  <Image className="w-11 h-11 drop-shadow-lg animate-[float_2.6s_ease-in-out_infinite] opacity-10" src={Icon07} width={80} height={80} alt="Pricing icon 07" />
                </div>
              </div>
            </div>
          </div>

          {/* Features list */}
          <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {/* Card #1 - Flora */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-pink-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-pink-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">플로라의 감성 케어</strong>: 법률 문제로 불안할 때 공감과 위로를 제공합니다.
                </p>
              </div>
            </div>
            {/* Card #2 - Timo */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-blue-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-blue-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">티모의 논리적 조언</strong>: 구체적인 법률 해결책과 행동 요령을 제시합니다.
                </p>
              </div>
            </div>
            {/* Card #3 */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-sky-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-sky-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">24/7 AI 법률 비서</strong>: 언제 어디서나 접근 가능한 법률 도우미를 만나보세요.
                </p>
              </div>
            </div>
            {/* Card #4 */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-sky-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-sky-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">음성 기반 상담</strong>: 편리한 음성 인터페이스로 신속한 법률 상담을 받아보세요.
                </p>
              </div>
            </div>
            {/* Card #5 */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-sky-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-sky-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">맞춤형 법률 솔루션</strong>: 개인화된 법률 서비스로 모든 연령대의 문제를 해결합니다.
                </p>
              </div>
            </div>
            {/* Card #6 */}
            <div className="bg-gradient-to-tr from-slate-800/50 to-slate-800/10 rounded-3xl border border-slate-800">
              <div className="flex items-center space-x-4 p-4 h-full">
                <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-sky-500" fillOpacity=".24" d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0Z" />
                  <path className="fill-sky-400" fillRule="nonzero" d="M13 6.586 14.414 8l-5.747 5.748-3.081-3.081L7 9.252l1.667 1.667z" />
                </svg>
                <p className="text-sm text-slate-400">
                  <strong className="text-slate-300 font-medium">원스톱 솔루션</strong>: 보이스피싱부터 학교폭력까지, 모든 법률 문제에 대응합니다.
                </p>
              </div>
            </div>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/features-04.tsx
Content:
export default function Features04() {
  return (
    <section className="relative">
      <div className="relative max-w-6xl mx-auto px-4 sm:px-6">

        {/* Blurred shape */}
        <div className="absolute top-0 -mt-24 left-0 -ml-16 blur-2xl opacity-70 pointer-events-none -z-10" aria-hidden="true">
          <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
            <defs>
              <linearGradient id="bs4-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                <stop offset="0%" stopColor="#A855F7" />
                <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
              </linearGradient>
            </defs>
            <path fill="url(#bs4-a)" fillRule="evenodd" d="m0 0 461 369-284 58z" transform="matrix(1 0 0 -1 0 427)" />
          </svg>
        </div>

        <div className="pt-16 pb-12 md:pt-32 md:pb-20">

          {/* Section header */}
          <div className="max-w-3xl pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Why trust us?</h2>
            <p className="text-lg text-slate-400">Many desktop publishing packages and web page editors now use lorem ipsum as their default model text, and a search will uncover many web sites still in their infancy.</p>
          </div>

          {/* Rows */}
          <div className="divide-y divide-slate-800">
            {/* Row */}
            <div className="py-8 first-of-type:pt-0 last-of-type:pb-0">
              <div>
                <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-6">API Authorization</div>
              </div>
              <div className="grid md:grid-cols-3 gap-8 md:gap-12 mb-2">
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M13 16c-.153 0-.306-.035-.447-.105l-3.851-1.926c-.231.02-.465.031-.702.031-4.411 0-8-3.14-8-7s3.589-7 8-7 8 3.14 8 7c0 1.723-.707 3.351-2 4.63V15a1.003 1.003 0 0 1-1 1Zm-4.108-4.054c.155 0 .308.036.447.105L12 13.382v-2.187c0-.288.125-.562.341-.752C13.411 9.506 14 8.284 14 7c0-2.757-2.691-5-6-5S2 4.243 2 7s2.691 5 6 5c.266 0 .526-.02.783-.048a1.01 1.01 0 0 1 .109-.006Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Discussions</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M15 9a3.841 3.841 0 0 0-2.661 1.545A2.524 2.524 0 0 0 10 9a1 1 0 1 0 0 2c.361 0 .57.279.89 1.284C10.243 13.08 9.441 14 9 14a1 1 0 0 0 0 2 3.841 3.841 0 0 0 2.661-1.545A2.524 2.524 0 0 0 14 16a1 1 0 0 0 0-2c-.361 0-.571-.279-.89-1.284C13.757 11.92 14.559 11 15 11a1 1 0 0 0 0-2Z" /><path d="M10 8a1 1 0 0 0 0-2H7.825c.432-2.421.983-4 2.175-4a1 1 0 0 1 1 1 1 1 0 0 0 2 0 3 3 0 0 0-3-3C7.193 0 6.313 2.9 5.793 6H3a1 1 0 1 0 0 2h2.49c-.506 3.52-1 6-2.49 6a1 1 0 0 1-1-1 1 1 0 0 0-2 0 3 3 0 0 0 3 3c3.367 0 3.964-4.175 4.49-7.858L7.51 8H10Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Team views</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M7 14c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7ZM7 2C4.243 2 2 4.243 2 7s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5ZM15.707 14.293 13.314 11.9a8.019 8.019 0 0 1-1.414 1.414l2.393 2.393a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Powerful search</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
              </div>
            </div>
            {/* Row */}
            <div className="py-8">
              <div>
                <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-6">User Management</div>
              </div>
              <div className="grid md:grid-cols-3 gap-8 md:gap-12 mb-2">
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M2 6H0V2a2 2 0 0 1 2-2h4v2H2v4ZM16 6h-2V2h-4V0h4a2 2 0 0 1 2 2v4ZM14 16h-4v-2h4v-4h2v4a2 2 0 0 1-2 2ZM6 16H2a2 2 0 0 1-2-2v-4h2v4h4v2Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Analytics</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M6.974 14c-.3 0-.7-.2-.9-.5l-2.2-3.7-2.1 2.8c-.3.4-1 .5-1.4.2-.4-.3-.5-1-.2-1.4l3-4c.2-.3.5-.4.9-.4.3 0 .6.2.8.5l2 3.3 3.3-8.1c0-.4.4-.7.8-.7s.8.2.9.6l4 8c.2.5 0 1.1-.4 1.3-.5.2-1.1 0-1.3-.4l-3-6-3.2 7.9c-.2.4-.6.6-1 .6Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Notifications</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M14 0H2c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h8l5-5V1c0-.6-.4-1-1-1ZM3 2h10v8H9v4H3V2Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Integrations</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
              </div>
            </div>
            {/* Row */}
            <div className="py-8">
              <div>
                <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-6">Standard Security</div>
              </div>
              <div className="grid md:grid-cols-3 gap-8 md:gap-12 mb-2">
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M15.5 11H13a5.022 5.022 0 0 1-3.453-1.4l-1.2 1.607A7.065 7.065 0 0 0 12 12.92v1.586a.5.5 0 0 0 .853.349l3-3A.5.5 0 0 0 15.5 11ZM1 5a5.022 5.022 0 0 1 3.453 1.4l1.205-1.61A7.028 7.028 0 0 0 1 3a1 1 0 1 0 0 2ZM13 5h2.5a.5.5 0 0 0 .354-.853l-3-3A.5.5 0 0 0 12 1.5v1.58a7.032 7.032 0 0 0-4.6 2.72L5 9a5.025 5.025 0 0 1-4 2 1 1 0 0 0 0 2 7.034 7.034 0 0 0 5.6-2.8L9 7a5.025 5.025 0 0 1 4-2Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Privacy</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M14 14H2a1 1 0 0 0 0 2h12a1 1 0 0 0 0-2ZM7.293 11.707a1 1 0 0 0 1.414 0l5-5a1 1 0 1 0-1.414-1.414L9 8.586V1a1 1 0 1 0-2 0v7.586L3.707 5.293a1 1 0 0 0-1.414 1.414l5 5Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Data export</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
                {/* Feature */}
                <div>
                  <div className="flex items-center space-x-2 mb-1">
                    <svg className="shrink-0 fill-slate-300" xmlns="http://www.w3.org/2000/svg" width="16" height="16">
                      <path d="M14.6.085 8 2.885 1.4.085c-.5-.2-1.4-.1-1.4.9v11c0 .4.2.8.6.9l7 3c.3.1.5.1.8 0l7-3c.4-.2.6-.5.6-.9v-11c0-1-.9-1.1-1.4-.9ZM2 2.485l5 2.1v8.8l-5-2.1v-8.8Zm12 8.8-5 2.1v-8.7l5-2.1v8.7Z" />
                    </svg>
                    <h4 className="font-medium text-slate-50">Real-time sync</h4>
                  </div>
                  <p className="text-sm text-slate-400">Login box must find the right balance for the user convenience, privacy and security.</p>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/utils/mouse-position.tsx
Content:
import { useState, useEffect } from 'react';

interface MousePosition {
  x: number;
  y: number;
}

export default function useMousePosition(): MousePosition {
  const [mousePosition, setMousePosition] = useState<MousePosition>({ x: 0, y: 0 });

  useEffect(() => {
    const handleMouseMove = (event: MouseEvent) => {
      setMousePosition({ x: event.clientX, y: event.clientY });
    }

    window.addEventListener('mousemove', handleMouseMove);

    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
    }
  }, []);

  return mousePosition;
}

File: ./components/testimonials-02.tsx
Content:
import Image from 'next/image'
import { StaticImageData } from 'next/image'
import Testimonial01 from '@/public/images/testimonial-01.png'
import Testimonial02 from '@/public/images/testimonial-02.png'
import Testimonial03 from '@/public/images/testimonial-03.png'

interface Item {
  img: StaticImageData
  name: string
  role: string
  twitter: string
  quote: string
}

export default function Testimonials02() {

  const items: Item[] = [
    {
      img: Testimonial01,
      name: 'Mary Janiczak',
      role: 'Data Engineer',
      twitter: '#0',
      quote: "The pace of change and velocity of the product force you to pick up new skills, experiment with new tactics, and walk in a variety of users' shoes.",
    },
    {
      img: Testimonial02,
      name: 'Jack Smith',
      role: 'Software Engineer',
      twitter: '#0',
      quote: "The pace of change and velocity of the product force you to pick up new skills, experiment with new tactics, and walk in a variety of users' shoes.",
    },
    {
      img: Testimonial03,
      name: 'Anna Johnson',
      role: 'Product Designer',
      twitter: '#0',
      quote: "The pace of change and velocity of the product force you to pick up new skills, experiment with new tactics, and walk in a variety of users' shoes.",
    },
  ]

  return (
    <section className="relative">
      {/* Radial gradient */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none -z-10" aria-hidden="true">
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 w-1/3 aspect-square">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-50"></div>
        </div>
      </div>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="py-12 md:py-20">
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Hear from our people</h2>
            <p className="text-lg text-slate-400">Our company is comprised of people who make bold choices for our clients and the security sector. It's in our DNA to push our limits and make bold changes.</p>
          </div>
          {/* Grid */}
          <div className="grid lg:grid-cols-3 gap-4 sm:gap-6 max-w-xs mx-auto lg:max-w-none">
            {items.map((item, index) => ( 
              <div key={index} className="relative p-5 before:absolute before:inset-0 before:-z-10 before:border before:border-slate-300 before:bg-slate-700 before:opacity-10 before:rounded-xl">
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center space-x-4">
                    <Image className="shrink-0" src={item.img} width={44} height={44} alt={item.name} />
                    <div className="grow">
                      <div className="font-bold text-slate-100">{item.name}</div>
                      <div className="text-sm text-sky-500 font-medium">{item.role}</div>
                    </div>
                  </div>
                  <a className="shrink-0 text-slate-500" href="#0" aria-label="Member's Twitter">
                    <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                      <path d="M11.297 13.807 7.424 18H5.276l5.019-5.436L5 6h4.43l3.06 3.836L16.025 6h2.147l-4.688 5.084L19 18h-4.32l-3.383-4.193Zm3.975 2.975h1.19L8.783 7.155H7.507l7.766 9.627Z" />
                    </svg>
                  </a>
                </div>
                <p className="text-sm text-slate-400">“{item.quote}”</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/testimonials.tsx
Content:
'use client'

import { useState, useRef, useEffect } from 'react'
import Image, { StaticImageData } from 'next/image'
import { Transition } from '@headlessui/react'
import Particles from './particles'

import TestimonialImg01 from '@/public/images/testimonial-01.jpg'
import TestimonialImg02 from '@/public/images/testimonial-02.jpg'
import TestimonialImg03 from '@/public/images/testimonial-03.jpg'

interface Item {
  img: StaticImageData
  quote: string
  name: string
  role: string
}

export default function Testimonials() {

  const [active, setActive] = useState<number>(0)
  const [autorotate, setAutorotate] = useState<boolean>(true)
  const [autorotateTiming] = useState<number>(7000)

  const items: Item[] = [
    {
      img: TestimonialImg01,
      quote: "Bubble Bubble 서비스로 전세사기 피해를 예방할 수 있었어요. AI가 계약서 검토부터 주의사항까지 꼼꼼히 알려줘서 안심하고 계약할 수 있었습니다. 이제 주변 사람들에게도 이 서비스를 적극 추천하고 있어요.",
      name: '김민지',
      role: '28세 직장인'
    },
    {
      img: TestimonialImg02,
      quote: "Bubble Bubble 덕분에 딥페이크 피해를 신속하고 효과적으로 해결할 수 있었어요. AI 법률 조언으로 제 권리를 정확히 알게 되었고, 대응 절차를 단계별로 안내받아 자신감 있게 대처할 수 있었죠. 특히 24시간 상담 가능한 점이 정말 큰 도움이 되었어요. 온라인상의 복잡한 법적 문제도 이제 Bubble Bubble과 함께라면 두렵지 않아요. 기술의 발전으로 생긴 새로운 법적 문제에 이렇게 혁신적으로 대응할 수 있다니 정말 감사해요.",
      name: '김서연',
      role: '26세 회사원'
    },
    {
      img: TestimonialImg03,
      quote: "학교폭력 문제로 고민할 때 Bubble Bubble의 도움을 받았어요. 플로라가 제 마음을 위로해주고, 티모가 구체적인 대처 방법을 알려줘서 문제를 해결할 수 있었습니다. 모든 학생들에게 추천하고 싶은 서비스예요!",
      name: '박서연',
      role: '17세 고등학생'
    }
  ]

  const testimonials = useRef<HTMLDivElement>(null)

  useEffect(() => {
    if (!autorotate) return
    const interval = setInterval(() => {
      setActive(active + 1 === items.length ? 0 : active => active + 1)
    }, autorotateTiming)
    return () => clearInterval(interval)
  }, [active, autorotate])

  const heightFix = () => {
    if (testimonials.current && testimonials.current.parentElement) testimonials.current.parentElement.style.height = `${testimonials.current.clientHeight}px`
  }

  useEffect(() => {
    heightFix()
  }, [])  

  return (
    <section>
      <div className="max-w-3xl mx-auto px-4 sm:px-6">
        <div className="relative pb-12 md:pb-20">

          {/* Particles animation */}
          <div className="absolute left-1/2 -translate-x-1/2 top-0 -z-10 w-80 h-80 -mt-6">
            <Particles className="absolute inset-0 -z-10" quantity={10} staticity={40} /> 
          </div>

          {/* Carousel */}
          <div className="text-center">
            {/* Testimonial image */}
            <div className="relative h-32 [mask-image:_linear-gradient(0deg,transparent,theme(colors.white)_40%,theme(colors.white))]">
              <div className="absolute top-0 left-1/2 -translate-x-1/2 w-[480px] h-[480px] -z-10 pointer-events-none before:rounded-full rounded-full before:absolute before:inset-0 before:bg-gradient-to-b before:from-slate-400/20 before:to-transparent before:to-20% after:rounded-full after:absolute after:inset-0 after:bg-slate-900 after:m-px before:-z-20 after:-z-20">

                {items.map((item, index) => (
                  <Transition
                    key={index}
                    show={active === index}
                    className="absolute inset-0 h-full -z-10"
                    enter="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700 order-first"
                    enterFrom="opacity-0 -rotate-[60deg]"
                    enterTo="opacity-100 rotate-0"
                    leave="transition ease-[cubic-bezier(0.68,-0.3,0.32,1)] duration-700"
                    leaveFrom="opacity-100 rotate-0"
                    leaveTo="opacity-0 rotate-[60deg]"
                    beforeEnter={() => heightFix()}
                  >
                    <Image className="relative top-11 left-1/2 -translate-x-1/2 rounded-full" src={item.img} width={56} height={56} alt={item.name} />
                  </Transition>
                ))}

              </div>
            </div>
            {/* Text */}
            <div className="mb-10 transition-all duration-150 delay-300 ease-in-out">
              <div className="relative flex flex-col" ref={testimonials}>

                {items.map((item, index) => (
                  <Transition
                    key={index}
                    show={active === index}
                    enter="transition ease-in-out duration-500 delay-200 order-first"
                    enterFrom="opacity-0 -translate-x-4"
                    enterTo="opacity-100 translate-x-0"
                    leave="transition ease-out duration-300 delay-300 absolute"
                    leaveFrom="opacity-100 translate-x-0"
                    leaveTo="opacity-0 translate-x-4"
                    beforeEnter={() => heightFix()}
                  >
                    <div className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">{item.quote}</div>
                  </Transition>
                ))}

              </div>
            </div>
            {/* Buttons */}
            <div className="flex flex-wrap justify-center -m-1.5">

              {items.map((item, index) => (
                <button className={`btn-sm m-1.5 text-xs py-1.5 text-slate-300 transition duration-150 ease-in-out [background:linear-gradient(theme(colors.slate.900),_theme(colors.slate.900))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] relative before:absolute before:inset-0 before:bg-slate-800/30 before:rounded-full before:pointer-events-none ${active === index ? 'opacity-100' : 'opacity-30 hover:opacity-60'}`} key={index} onClick={() => { setActive(index); setAutorotate(false); }}>
                  <span className="relative">
                    <span className="text-slate-50">{item.name}</span> <span className="text-slate-600">-</span> <span>{item.role}</span>
                  </span>
                </button>
              ))}

            </div>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/recruitment.tsx
Content:
import Image from 'next/image'
import Recruitment01 from '@/public/images/recruitment-01.jpg'
import Recruitment02 from '@/public/images/recruitment-02.jpg'
import Recruitment03 from '@/public/images/recruitment-03.jpg'
import Recruitment04 from '@/public/images/recruitment-04.jpg'

interface Item {
  area: string
  positions: {
    title: string
    location: string
    link: string
  }[]
}

export default function Recruitment() {

  const items: Item[] = [
    {
      area: 'Engineering',
      positions: [
        {
          title: 'Software Engineering Intern',
          location: 'Remote / North America',
          link: '#0',
        },
        {
          title: 'Software Engineer, Core Infrastructure',
          location: 'Remote',
          link: '#0',
        },
        {
          title: 'Software Engineer, Data Platform',
          location: 'Remote / Europe',
          link: '#0',
        },
        {
          title: 'Software Engineer, Marketing Systems',
          location: 'Remote / North America',
          link: '#0',
        },
      ]
    },
    {
      area: 'Marketing',
      positions: [
        {
          title: 'Product Marketing Manager',
          location: 'Remote / North America',
          link: '#0',
        },
        {
          title: 'Marketing Manager',
          location: 'Remote / Europe',
          link: '#0',
        },
      ]
    },
    {
      area: 'Design',
      positions: [
        {
          title: 'Product Designer, Consumer',
          location: 'Remote / North America',
          link: '#0',
        },
        {
          title: 'Senior Product Designer',
          location: 'Remote / Europe',
          link: '#0',
        },
        {
          title: 'Lead Designer',
          location: 'Remote / Europe',
          link: '#0',
        },
      ]
    },
  ]

  return (
    <section className="relative">

      {/* Blurred shape */}
      <div className="absolute top-0 -translate-y-1/3 left-1/2 -translate-x-1/2 ml-24 blur-2xl opacity-50 pointer-events-none -z-10" aria-hidden="true">
        <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
          <defs>
            <linearGradient id="bs3-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
              <stop offset="0%" stopColor="#6366F1" />
              <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
            </linearGradient>
          </defs>
          <path fill="url(#bs3-a)" fillRule="evenodd" d="m410 0 461 369-284 58z" transform="matrix(1 0 0 -1 -410 427)" />
        </svg>
      </div>

      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="py-12 md:py-20 border-t [border-image:linear-gradient(to_right,transparent,theme(colors.slate.800),transparent)1]">

          {/* Section header */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Join a team of makers</h2>
            <p className="text-lg text-slate-400">We are makers at heart. Problem solvers and storytellers. We are a diverse team of individuals who build things to make our customers happy.</p>
          </div>

          {/* Icons with text */}
          <div className="grid md:grid-cols-3 gap-6 lg:gap-10 max-w-xs mx-auto md:max-w-none -m-5">
            {/* Block #1 */}
            <div className="text-center p-5">
              <div className="inline-flex items-center justify-center h-12 w-12 rounded-full border border-transparent [background:linear-gradient(theme(colors.slate.800),_theme(colors.slate.800))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="24">
                  <g fill="none" fillRule="nonzero" opacity=".8">
                    <path className="fill-slate-600" d="M14.416 3.527C13.841 4.39 13.5 5.242 13.5 6a1.5 1.5 0 1 0 3 0c0-.758-.34-1.61-.916-2.473A8.962 8.962 0 0 0 15 2.748c-.2.239-.398.5-.584.78ZM17.5 6a2.5 2.5 0 1 1-5 0c0-.992.41-2.015 1.084-3.027a9.979 9.979 0 0 1 1.062-1.327L15 1.293l.354.353a9.979 9.979 0 0 1 1.062 1.326C17.091 3.986 17.5 5.009 17.5 6ZM6 6.5c-1.374 0-2.5-1.055-2.5-2.375 0-.243.043-.492.125-.746.176-.548.523-1.108.99-1.672A9.774 9.774 0 0 1 5.677.62L6 .344l.323.275a9.774 9.774 0 0 1 1.061 1.089c.468.563.815 1.123.991 1.671.082.254.125.503.125.746C8.5 5.445 7.374 6.5 6 6.5Zm-.615-4.154c-.393.474-.678.933-.808 1.339-.051.16-.077.307-.077.44C4.5 4.877 5.164 5.5 6 5.5s1.5-.623 1.5-1.375c0-.133-.026-.28-.077-.44-.13-.406-.415-.865-.808-1.34A8.746 8.746 0 0 0 6 1.682c-.21.205-.42.43-.615.665Z" />
                    <path className="fill-slate-200" d="M9.483 14.562A6.495 6.495 0 0 1 15 11.5h4.5v.5a8.5 8.5 0 0 1-8.5 8.5H9.5v3h-1v-7H7A6.5 6.5 0 0 1 .5 10v-.5H4c2.89 0 5.26 2.23 5.483 5.062Zm-.485.938H8.5v1h.174a6.45 6.45 0 0 1 .324-1Zm.502 4H11a7.5 7.5 0 0 0 7.484-7H15A5.5 5.5 0 0 0 9.5 18v1.5Zm-1-4V15A4.5 4.5 0 0 0 4 10.5H1.522A5.5 5.5 0 0 0 7 15.5h1.5Z" />
                  </g>
                </svg>
              </div>
              <div className="font-bold text-slate-100 mb-1">Passionate</div>
              <p className="text-sm text-slate-400">You are passionate about digital products of any kind and are a builder at heart.</p>
            </div>
            {/* Block #2 */}
            <div className="text-center p-5">
              <div className="inline-flex items-center justify-center h-12 w-12 rounded-full border border-transparent [background:linear-gradient(theme(colors.slate.800),_theme(colors.slate.800))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20">
                  <path className="fill-slate-200" d="M9.423 12.278H.87L11.614.458l-1.037 7.264h8.553L8.386 19.542l1.037-7.264Zm-6.293-1h7.447l-.74 5.18 7.033-7.736H9.423l.74-5.18-7.033 7.736Z" opacity=".8" />
                </svg>
              </div>
              <div className="font-bold text-slate-100 mb-1">Energetic</div>
              <p className="text-sm text-slate-400">You are passionate about digital products of any kind and are a builder at heart.</p>
            </div>
            {/* Block #3 */}
            <div className="text-center p-5">
              <div className="inline-flex items-center justify-center h-12 w-12 rounded-full border border-transparent [background:linear-gradient(theme(colors.slate.800),_theme(colors.slate.800))_padding-box,_conic-gradient(theme(colors.slate.400),_theme(colors.slate.700)_25%,_theme(colors.slate.700)_75%,_theme(colors.slate.400)_100%)_border-box] mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                  <g fill="none" fillRule="nonzero" opacity=".8">
                    <path className="fill-slate-600" d="M11.5 1h1v4h-1V1ZM23 11.5v1h-4v-1h4ZM12.5 23h-1v-4h1v4ZM1 12.5v-1h4v1H1Z" />
                    <path className="fill-slate-200" d="M12 23.5C5.649 23.5.5 18.351.5 12S5.649.5 12 .5 23.5 5.649 23.5 12 18.351 23.5 12 23.5Zm0-1c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5Zm0-8a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5Zm0-1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z" />
                  </g>
                </svg>
              </div>
              <div className="font-bold text-slate-100 mb-1">Achiever</div>
              <p className="text-sm text-slate-400">You are passionate about digital products of any kind and are a builder at heart.</p>
            </div>
          </div>

        </div>
      </div>

      {/* Images */}
      <div className="max-w-[1440px] mx-auto px-4 md:px-0">
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 lg:gap-6 md:-mx-5">
          <Image className="w-full aspect-[16/10] object-cover rounded-lg" src={Recruitment01} width={352} height={220} alt="Recruitment 01" />
          <Image className="w-full aspect-[16/10] object-cover rounded-lg" src={Recruitment02} width={352} height={220} alt="Recruitment 02" />
          <Image className="w-full aspect-[16/10] object-cover rounded-lg" src={Recruitment03} width={352} height={220} alt="Recruitment 03" />
          <Image className="w-full aspect-[16/10] object-cover rounded-lg" src={Recruitment04} width={352} height={220} alt="Recruitment 04" />
        </div>
      </div>

      {/* Positions */}
      <div className="relative px-4 sm:px-6">

        {/* Blurred shape */}
        <div className="absolute top-0 left-1/2 -translate-x-1/2 translate-y-1/3 ml-24 blur-2xl opacity-40 pointer-events-none" aria-hidden="true">
          <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
            <defs>
              <linearGradient id="bs2-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                <stop offset="0%" stopColor="#6366F1"></stop>
                <stop offset="100%" stopColor="#6366F1" stopOpacity="0"></stop>
              </linearGradient>
            </defs>
            <path fill="url(#bs2-a)" fillRule="evenodd" d="m346 898 461 369-284 58z" transform="translate(-346 -898)"></path>
          </svg>
        </div>

        <div className="max-w-3xl mx-auto py-12 md:py-20">
          <h3 className="h3 inline-flex bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-8 md:pb-16">Open positions</h3>
          <div className="space-y-8">

            {items.map((item, index) => (
              <div key={index}>
                <h4 className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">{item.area}</h4>
                <ul className="divide-y divide-slate-800">
                  {
                    item.positions.map((position, index) => (
                      <li key={index} className="flex flex-col md:flex-row flex-wrap justify-between py-5">
                        <span className="font-medium text-slate-50 mr-2">{position.title}</span>
                        <a className="inline-flex text-sm font-medium text-sky-500 group" href={position.link}>{position.location} <span className="tracking-normal group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </li>
                    ))
                  }
                </ul>
              </div>
            ))}

          </div>
        </div>
      </div>

    </section>
  )
}
File: ./components/cta.tsx
Content:
import { useState } from 'react';

export default function Cta() {
 

  return (
    <section>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="relative px-8 py-12 md:py-20 rounded-[3rem] overflow-hidden">
          {/* Radial gradient */}
          <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
            <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-70" />
            <div className="absolute w-1/4 h-1/4 translate-z-0 bg-sky-400 rounded-full blur-[40px]" />
          </div>
          {/* Blurred shape */}
          <div className="absolute bottom-0 translate-y-1/2 left-0 blur-2xl opacity-50 pointer-events-none -z-10" aria-hidden="true">
            <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
              <defs>
                <linearGradient id="bs5-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
                  <stop offset="0%" stopColor="#A855F7" />
                  <stop offset="100%" stopColor="#6366F1" stopOpacity="0" />
                </linearGradient>
              </defs>
              <path fill="url(#bs5-a)" fillRule="evenodd" d="m0 0 461 369-284 58z" transform="matrix(1 0 0 -1 0 427)" />
            </svg>
          </div>
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center">
            <div>
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">Bubble Bubble(버블버블): 생애주기별 시민체감형 법률 AI 원스톱 서비스</div>
            </div>
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">당신만을 위한 AI 법률 도우미</h2>
            <p className="text-lg text-slate-400 mb-8">AI 기술로 법률 서비스 취약계층을 보호하고, 범죄 예방 및 학습을 위한 솔루션을 제공합니다. 새로운 법률 서비스의 세계를 경험해보세요.</p>
           
            <div className="mt-4 max-w-xs mx-auto sm:max-w-none sm:inline-flex sm:justify-center space-y-4 sm:space-y-0 sm:space-x-4" data-aos="fade-down" data-aos-delay="400">
              <div>
                <a className="btn text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full transition duration-150 ease-in-out group" href="/survey">
                  법률 맞춤 추천 받기 <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
                </a>
              </div>
              <div>
                <a className="btn text-slate-200 hover:text-white bg-slate-900 bg-opacity-25 hover:bg-opacity-30 w-full transition duration-150 ease-in-out group" href="mailto:wks0968@gmail.com?subject=[버블버블]%20문의사항:%20&body=안녕하세요,%0D%0A%0D%0A버블버블에%20대한%20문의사항을%20아래에%20작성해%20주세요.%0D%0A%0D%0A1.%20문의%20유형:%20(예:%20서비스%20이용,%20기술적%20문제,%20제안사항%20등)%0D%0A2.%20상세내용:%0D%0A%0D%0A%0D%0A이름:%0D%0A연락처:%20(선택사항)%0D%0A%0D%0A감사합니다." target="_blank" rel="noopener noreferrer">
                  <svg className="shrink-0 fill-slate-300 mr-3" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                    <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                  </svg>
                  <span>협업 & 제안하기</span>
                </a>
              </div>
              {/* <div>
                <a className="btn text-slate-200 hover:text-white bg-slate-900 bg-opacity-25 hover:bg-opacity-30 w-full transition duration-150 ease-in-out group" href="https://somoim.friendscube.com/g/b66c90ac-1765-11ef-be8e-0a1883465d731" target="_blank" rel="noopener noreferrer">
                  <span>코딩 교육받기</span>
                  <span className="text-xs text-sky-500 ml-2 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out">(64명)</span>
                </a>
              </div> */}
            </div>
            {/* <p className="text-sm text-slate-100 mt-8" data-aos="fade-down" data-aos-delay="300">
              Powered by [대전 IT] 나는 솔로프리너 🍞💻❤️
            </p> */}
          </div>
        </div>
      </div>
    </section>
  );
}
File: ./components/story.tsx
Content:
import Image from 'next/image'
import Team from '@/public/images/team.jpg'

export default function Story() {
  return (
    <section className="relative">

      {/* Blurred shape */}
      <div className="absolute top-0 -mt-32 left-1/2 -translate-x-1/2 ml-10 blur-2xl opacity-70 pointer-events-none -z-10" aria-hidden="true">
        <svg xmlns="http://www.w3.org/2000/svg" width="434" height="427">
          <defs>
            <linearGradient id="bs4-a" x1="19.609%" x2="50%" y1="14.544%" y2="100%">
              <stop offset="0%" stopColor="#A855F7"></stop>
              <stop offset="100%" stopColor="#6366F1" stopOpacity="0"></stop>
            </linearGradient>
          </defs>
          <path fill="url(#bs4-a)" fillRule="evenodd" d="m0 0 461 369-284 58z" transform="matrix(1 0 0 -1 0 427)"></path>
        </svg>
      </div>

      <div className="px-4 sm:px-6">
        <div className="max-w-5xl mx-auto">
          <div className="pb-12 md:pb-20">

            {/* Section header */}
            <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
              <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">Our story (so far)</h2>
            </div>

            <div className="md:flex justify-between space-x-6 md:space-x-8 lg:space-x-14">
              <figure className="min-w-[240px]">
                <Image className="sticky top-8 mx-auto mb-12 md:mb-0 rounded-lg -rotate-[4deg]" src={Team} width={420} height={280} alt="Team" />
              </figure>
              <div className="max-w-[548px] mx-auto">
                <div className="text-slate-400 space-y-6">
                  <p>
                    We came together over a shared excitement about building a product that could solve our own problem of where our next favourite hack is coming from. But also a product that helps everyone thrive in this market: from founders and engineers to companies and investors.
                  </p>
                  <p>
                    Stellar is a product that connects people around the topics and ideas that fascinate them. <strong className="text-slate-50 font-medium">The idea that we can use technology to take our experience</strong>, as security lovers, to a new dimension and leave the computer industry in better shape while we're at it.
                  </p>
                  <p>
                    You can dive into the atoms that make up a product, share the moments that move you and discuss the ideas you find compelling. We want to create a ground for <strong className="text-slate-50 font-medium">discussion and bring knowledge together</strong>, while making it more accessible and easier to grasp.
                  </p>
                  <p>
                    Contrary to popular belief, this product is not random security. It has roots in a piece of classical literature, making it over 5 years old. Richard McClintock, a professor at <a className="text-sky-500 font-medium hover:underline" href="#0">Hampden-Sydney College</a> in Virginia, looked up one of the more obscure words, consectetur from a passage, and going through the cites of the word in classical literature, discovered the undoubtable source.
                  </p>
                  <p>
                    We all thrive on learning something new every day and everyone is constantly trying on different hats. We are working with new technologies while rethinking an old industry and are excited about all the possibilities and opportunities to innovate.
                    It's a problem deeply ingrained in traditional sectors like startups and the wider service industry but which has been compounded in the past five to ten years by the emergence of the mostly tech-powered gig economy which has created a new generation of shift workers and indeed
                  </p>
                </div>
              </div>
            </div>

          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/testimonials-carousel.tsx
Content:
'use client'

import { useEffect, useState } from 'react'
import Image from 'next/image'
import Particles from './particles'
import Highlighter, { HighlighterItem } from './highlighter'

import CarouselImg01 from '@/public/images/carousel-icon-01.svg'
import CarouselImg02 from '@/public/images/carousel-icon-02.svg'
import CarouselImg03 from '@/public/images/carousel-icon-03.svg'
import CarouselImg04 from '@/public/images/carousel-icon-04.svg'
import CarouselImg05 from '@/public/images/carousel-icon-05.svg'

// Import Swiper
import Swiper, { Navigation } from 'swiper'
import 'swiper/swiper.min.css'
Swiper.use([Navigation])

export default function TestimonialsCarousel() {

  const [swiperInitialized, setSwiperInitialized] = useState<boolean>(false)

  useEffect(() => {
    const carousel = new Swiper('.stellar-carousel', {
      breakpoints: {
        320: {
          slidesPerView: 1
        },
        640: {
          slidesPerView: 2
        },
        1024: {
          slidesPerView: 3
        }
      },
      grabCursor: true,
      loop: false,
      centeredSlides: false,
      initialSlide: 0,
      spaceBetween: 24,
      navigation: {
        nextEl: '.carousel-next',
        prevEl: '.carousel-prev',
      },
    })
    setSwiperInitialized(true)
  }, [])

  return (
    <section>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="pt-12 md:pt-20">

          {/* Section header */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <div>
              <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">The security first platform</div>
            </div>
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Spot issues faster</h2>
            <p className="text-lg text-slate-400">All the lorem ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet.</p>
          </div>

          {/* Carousel built with Swiper.js [https://swiperjs.com/] */}
          {/* * Custom styles in src/css/additional-styles/theme.scss */}
          <div className="relative before:absolute before:inset-0 before:-translate-x-full before:z-20 before:bg-gradient-to-l before:from-transparent before:to-slate-900 before:to-20% after:absolute after:inset-0 after:translate-x-full after:z-20 after:bg-gradient-to-r after:from-transparent after:to-slate-900 after:to-20%">
            <div className="stellar-carousel swiper-container group">
              <Highlighter className="swiper-wrapper w-fit" refresh={swiperInitialized}>
                {/* Carousel items */}
                <HighlighterItem className="swiper-slide h-auto group/slide">
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10 opacity-0 group-[.swiper-slide-active]/slide:opacity-100 group-hover/slide:opacity-100 transition-opacity duration-500 ease-in-out" quantity={3} refresh={swiperInitialized} /> 
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 rounded-full bg-slate-800 group-[.swiper-slide-active]/slide:bg-sky-500 transition-colors duration-500 ease-in-out blur-[60px]" />
                    </div>
                    <div className="flex flex-col p-6 h-full">
                      <Image className="mb-3" src={CarouselImg01} width={56} height={56} alt="Icon 01" />
                      <div className="grow">
                        <div className="font-bold text-lg mb-1">Anonymous User</div>
                        <div className="text-slate-400 mb-3">Incorporate rich user profiling, and facilitate more transactions.</div>
                      </div>
                      <div className="text-right">
                        <a className="text-sm font-medium text-slate-300 hover:text-white inline-flex items-center transition duration-150 ease-in-out group" href="#0">Learn More <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
                <HighlighterItem className="swiper-slide h-auto group/slide">
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10 opacity-0 group-[.swiper-slide-active]/slide:opacity-100 group-hover/slide:opacity-100 transition-opacity duration-500 ease-in-out" quantity={3} refresh={swiperInitialized} />                     
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 rounded-full bg-slate-800 group-[.swiper-slide-active]/slide:bg-sky-500 transition-colors duration-500 ease-in-out blur-[60px]" />
                    </div>
                    <div className="flex flex-col p-6 h-full">
                      <Image className="mb-3" src={CarouselImg02} width={56} height={56} alt="Icon 01" />
                      <div className="grow">
                        <div className="font-bold text-lg mb-1">Bot Detection</div>
                        <div className="text-slate-400 mb-3">Incorporate rich user profiling, and facilitate more transactions.</div>
                      </div>
                      <div className="text-right">
                        <a className="text-sm font-medium text-slate-300 hover:text-white inline-flex items-center transition duration-150 ease-in-out group" href="#0">Learn More <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
                <HighlighterItem className="swiper-slide h-auto group/slide">
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10 opacity-0 group-[.swiper-slide-active]/slide:opacity-100 group-hover/slide:opacity-100 transition-opacity duration-500 ease-in-out" quantity={3} refresh={swiperInitialized} />                     
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 rounded-full bg-slate-800 group-[.swiper-slide-active]/slide:bg-sky-500 transition-colors duration-500 ease-in-out blur-[60px]" />
                    </div>
                    <div className="flex flex-col p-6 h-full">
                      <Image className="mb-3" src={CarouselImg03} width={56} height={56} alt="Icon 01" />
                      <div className="grow">
                        <div className="font-bold text-lg mb-1">Social integrations</div>
                        <div className="text-slate-400 mb-3">Incorporate rich user profiling, and facilitate more transactions.</div>
                      </div>
                      <div className="text-right">
                        <a className="text-sm font-medium text-slate-300 hover:text-white inline-flex items-center transition duration-150 ease-in-out group" href="#0">Learn More <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
                <HighlighterItem className="swiper-slide h-auto group/slide">
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10 opacity-0 group-[.swiper-slide-active]/slide:opacity-100 group-hover/slide:opacity-100 transition-opacity duration-500 ease-in-out" quantity={3} refresh={swiperInitialized} />                     
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 rounded-full bg-slate-800 group-[.swiper-slide-active]/slide:bg-sky-500 transition-colors duration-500 ease-in-out blur-[60px]" />
                    </div>
                    <div className="flex flex-col p-6 h-full">
                      <Image className="mb-3" src={CarouselImg04} width={56} height={56} alt="Icon 01" />
                      <div className="grow">
                        <div className="font-bold text-lg mb-1">Progressive Profiling</div>
                        <div className="text-slate-400 mb-3">Incorporate rich user profiling, and facilitate more transactions.</div>
                      </div>
                      <div className="text-right">
                        <a className="text-sm font-medium text-slate-300 hover:text-white inline-flex items-center transition duration-150 ease-in-out group" href="#0">Learn More <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
                <HighlighterItem className="swiper-slide h-auto group/slide">
                  <div className="relative h-full bg-slate-900 rounded-[inherit] z-20 overflow-hidden">
                    {/* Particles animation */}
                    <Particles className="absolute inset-0 -z-10 opacity-0 group-[.swiper-slide-active]/slide:opacity-100 group-hover/slide:opacity-100 transition-opacity duration-500 ease-in-out" quantity={3} refresh={swiperInitialized} />                     
                    {/* Radial gradient */}
                    <div className="absolute bottom-0 translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-1/3 aspect-square" aria-hidden="true">
                      <div className="absolute inset-0 translate-z-0 rounded-full bg-slate-800 group-[.swiper-slide-active]/slide:bg-sky-500 transition-colors duration-500 ease-in-out blur-[60px]" />
                    </div>
                    <div className="flex flex-col p-6 h-full">
                      <Image className="mb-3" src={CarouselImg05} width={56} height={56} alt="Icon 05" />
                      <div className="grow">
                        <div className="font-bold text-lg mb-1">Secure Access</div>
                        <div className="text-slate-400 mb-3">Incorporate rich user profiling, and facilitate more transactions.</div>
                      </div>
                      <div className="text-right">
                        <a className="text-sm font-medium text-slate-300 hover:text-white inline-flex items-center transition duration-150 ease-in-out group" href="#0">Learn More <span className="tracking-normal text-sky-500 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span></a>
                      </div>
                    </div>
                  </div>
                </HighlighterItem>
              </Highlighter>
            </div>
          </div>

          {/* Arrows */}
          <div className="flex mt-8 justify-end">
            <button className="carousel-prev relative z-20 w-12 h-12 flex items-center justify-center group">
              <span className="sr-only">Previous</span>
              <svg className="w-4 h-4 fill-slate-500 group-hover:fill-sky-500 transition duration-150 ease-in-out" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                <path d="M6.7 14.7l1.4-1.4L3.8 9H16V7H3.8l4.3-4.3-1.4-1.4L0 8z" />
              </svg>
            </button>
            <button className="carousel-next relative z-20 w-12 h-12 flex items-center justify-center group">
              <span className="sr-only">Next</span>
              <svg className="w-4 h-4 fill-slate-500 group-hover:fill-sky-500 transition duration-150 ease-in-out" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                <path d="M9.3 14.7l-1.4-1.4L12.2 9H0V7h12.2L7.9 2.7l1.4-1.4L16 8z" />
              </svg>
            </button>
          </div>

        </div>
      </div>
    </section>
  )
}
File: ./components/clients.tsx
Content:
'use client'

import { useEffect } from 'react'
import Particles from './particles'

// Import Swiper
import Swiper, { Autoplay } from 'swiper'
import 'swiper/swiper.min.css'
Swiper.use([Autoplay])

export default function Clients() {

  const crimes = [
    "전세사기",
    "교통사고 피해",
    "루머",
    "명예훼손",
    "허위사실 유포",
    "사이버 렉카 피해",
    "딥페이크 범죄",
    "디지털 성범죄",
    "사이버 범죄",
    "사이버 불링",
    "의료 사기",
    "투자 사기",
    "스토킹",
    "아동 대상 범죄",
    "가정폭력",
    "횡령 및 배임",
    "마약 관련 범죄",
    "보이스피싱",
    "음주운전",
    "데이트폭력",
    "학교폭력",
    "신용카드 사기",
    "보험 사기",
    "불법 도박",
    "저작권 침해",
    "신분 도용",
    "주가 조작",
  ]

  useEffect(() => {
    const carousel = new Swiper('.clients-carousel', {
      slidesPerView: 'auto',
      spaceBetween: 64,
      centeredSlides: true,
      loop: true,
      speed: 5000,
      noSwiping: true,
      noSwipingClass: 'swiper-slide',
      autoplay: {
        delay: 0,
        disableOnInteraction: true,
      },
    })
  }, [])

  return (
    <section>
      <div className="relative max-w-6xl mx-auto px-4 sm:px-6">

        {/* Particles animation */}
        <div className="absolute inset-0 max-w-6xl mx-auto px-4 sm:px-6">
          <Particles className="absolute inset-0 -z-10" quantity={5} />
        </div>

        <div className="py-12 md:py-16">
          <div className="overflow-hidden">
            {/* Carousel built with Swiper.js [https://swiperjs.com/] */}
            {/* * Custom styles in src/css/additional-styles/theme.scss */}
            <div className="clients-carousel swiper-container relative before:absolute before:inset-0 before:w-32 before:z-10 before:pointer-events-none before:bg-gradient-to-r before:from-slate-900 after:absolute after:inset-0 after:left-auto after:w-32 after:z-10 after:pointer-events-none after:bg-gradient-to-l after:from-slate-900">
              <div className="swiper-wrapper !ease-linear select-none items-center">
                {/* Carousel items */}
                {crimes.map((crime, index) => (
                  <div key={index} className="swiper-slide !w-auto">
                    <div className="text-[#C4CFDD] text-xl font-bold">{crime}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
File: ./components/highlighter.tsx
Content:
'use client'

import React, { useRef, useState, useEffect } from 'react'
import MousePosition from './utils/mouse-position'

type HighlighterProps = {
  children: React.ReactNode
  className?: string
  refresh?: boolean
}

export default function Highlighter({
  children,
  className = '',
  refresh = false
}: HighlighterProps) {

  const containerRef = useRef<HTMLDivElement>(null)
  const mousePosition = MousePosition()
  const mouse = useRef<{ x: number; y: number }>({ x: 0, y: 0 })
  const containerSize = useRef<{ w: number; h: number }>({ w: 0, h: 0 })
  const [boxes, setBoxes] = useState<Array<HTMLElement>>([])

  useEffect(() => {    
    containerRef.current && setBoxes(Array.from(containerRef.current.children).map((el) => el as HTMLElement))
  }, [])
  
  useEffect(() => {    
    initContainer()
    window.addEventListener('resize', initContainer)

    return () => {
      window.removeEventListener('resize', initContainer)
    }
  }, [setBoxes])  

  useEffect(() => {
    onMouseMove()
  }, [mousePosition])

  useEffect(() => {
    initContainer()
  }, [refresh])  

  const initContainer = () => {
    if(containerRef.current) {
      containerSize.current.w = containerRef.current.offsetWidth
      containerSize.current.h = containerRef.current.offsetHeight
    }
  }  
  
  const onMouseMove = () => {    
    if (containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect()
      const { w, h } = containerSize.current
      const x = mousePosition.x - rect.left
      const y = mousePosition.y - rect.top
      const inside = x < w && x > 0 && y < h && y > 0      
      if (inside) {
        mouse.current.x = x
        mouse.current.y = y
        boxes.forEach((box) => {
          const boxX = -(box.getBoundingClientRect().left - rect.left) + mouse.current.x
          const boxY = -(box.getBoundingClientRect().top - rect.top) + mouse.current.y
          box.style.setProperty('--mouse-x', `${boxX}px`)
          box.style.setProperty('--mouse-y', `${boxY}px`)
        })
      }
    }
  }  

  return (
    <div className={className} ref={containerRef}>{children}</div>
  )
}

type HighlighterItemProps = {
  children: React.ReactNode,
  className?: string
}

export function HighlighterItem({
  children,
  className = ''
}: HighlighterItemProps) {
  return <div className={`relative h-full bg-slate-800 rounded-3xl p-px before:absolute before:w-96 before:h-96 before:-left-48 before:-top-48 before:bg-sky-500 before:rounded-full before:opacity-0 before:pointer-events-none before:transition-opacity before:duration-500 before:translate-x-[var(--mouse-x)] before:translate-y-[var(--mouse-y)] before:hover:opacity-20 before:z-30 before:blur-[100px] after:absolute after:inset-0 after:rounded-[inherit] after:opacity-0 after:transition-opacity after:duration-500 after:[background:_radial-gradient(250px_circle_at_var(--mouse-x)_var(--mouse-y),theme(colors.slate.400),transparent)] after:group-hover:opacity-100 after:z-10 overflow-hidden ${className}`}>{children}</div>
}

export function HighlighterItem02({
  children,
  className = ''
}: HighlighterItemProps) {
  return <div className={`relative h-full bg-slate-800 rounded-3xl p-px -m-px before:absolute before:w-64 before:h-64 before:-left-32 before:-top-32 before:bg-indigo-500 before:rounded-full before:opacity-0 before:pointer-events-none before:transition-opacity before:duration-500 before:translate-x-[var(--mouse-x)] before:translate-y-[var(--mouse-y)] before:hover:opacity-30 before:z-30 before:blur-[64px] after:absolute after:inset-0 after:rounded-[inherit] after:opacity-0 after:transition-opacity after:duration-500 after:[background:_radial-gradient(250px_circle_at_var(--mouse-x)_var(--mouse-y),theme(colors.slate.400),transparent)] after:group-hover:opacity-100 after:z-10 overflow-hidden ${className}`}>{children}</div>
}
File: ./components/hero-about.tsx
Content:
import Image from 'next/image'
import Particles from './particles'
import Illustration from '@/public/images/page-illustration.svg'
import AboutIllustration from '@/public/images/about-illustration.svg'
import Icon from '@/public/images/about-icon.svg'

export default function HeroAbout() {
  return (
  <section className="relative">

    {/* Radial gradient */}
    <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 pointer-events-none -z-10 w-[800px] aspect-square" aria-hidden="true">
      <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-30"></div>
      <div className="absolute w-64 h-64 translate-z-0 bg-sky-400 rounded-full blur-[80px] opacity-70"></div>
    </div>

    {/* Particles animation */}
    <Particles className="absolute inset-0 h-96 -z-10" quantity={10} />

    {/* Illustration */}
    <div className="md:block absolute left-1/2 -translate-x-1/2 -mt-16 blur-2xl opacity-90 pointer-events-none -z-10" aria-hidden="true">
      <Image src={Illustration} className="max-w-none" width={1440} height={427} alt="Page Illustration" />
    </div>

    <div className="max-w-6xl mx-auto px-4 sm:px-6">
      <div className="pt-32 pb-10 md:pt-40">

        {/* Hero content */}
        <div className="text-center">
          <div className="inline-flex font-medium bg-clip-text text-transparent bg-gradient-to-r from-sky-500 to-sky-200 pb-3">The folks behind the product</div>
          <h1 className="h1 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-6">Turning security into innovation</h1>
          {/* Rings illustration */}
          <div className="inline-flex items-center justify-center relative">
            {/* Particles animation */}
            <div className="absolute inset-0 -z-10" aria-hidden="true">
              <canvas data-particle-animation data-particle-quantity="10"></canvas>
            </div>
            <div className="inline-flex [mask-image:_radial-gradient(circle_at_bottom,transparent_15%,black_70%)]">
              <Image src={AboutIllustration} width={446} height={446} alt="About illustration" />
            </div>
            <Image className="absolute mt-[30%] drop-shadow-lg animate-float" src={Icon} width={72} height={72} alt="About icon" />
          </div>
        </div>

      </div>
    </div>

  </section>
  )
}
File: ./components/customers.tsx
Content:
import Image from 'next/image'
import CustomerImg01 from '@/public/images/customer-01.jpg'
import CustomerImg02 from '@/public/images/customer-02.jpg'
import CustomerImg03 from '@/public/images/customer-03.jpg'
import CustomerImg04 from '@/public/images/customer-04.jpg'
import CustomerImg05 from '@/public/images/customer-05.jpg'
import CustomerImg06 from '@/public/images/customer-06.jpg'
import CustomerImg07 from '@/public/images/customer-07.jpg'
import CustomerImg08 from '@/public/images/customer-08.jpg'
import CustomerImg09 from '@/public/images/customer-09.jpg'

export default function Customers() {

  const items = [
    {
      img: CustomerImg01,
      quote: "처음에는 AI가 내 상황을 제대로 이해할 수 있을지 걱정했어요. 하지만 딥페이크 피해에 대해 물어봤을 때, 정말 자세하고 이해하기 쉽게 설명해줬어요. 플로라의 따뜻한 위로는 정말 큰 힘이 되었습니다. 앞으로도 계속 발전하길 바라요!",
      name: '김민지',
      twitter: {
        handle: '@minji_kim',
        link: '#0'
      }
    },
    {
      img: CustomerImg02,
      quote: "전세사기 피해를 당할 뻔했는데, Bubble Bubble 덕분에 막을 수 있었어요. 티모가 계약 시 주의사항을 꼼꼼히 알려줘서 정말 도움됐습니다. 앞으로 더 많은 사람들이 이 서비스를 알게 되면 좋겠어요!",
      name: '이정호',
      twitter: {
        handle: '@jungho_lee',
        link: '#0'
      }
    },
    {
      img: CustomerImg03,
      quote: "처음에는 기계랑 대화하는 게 어색했어요. 그런데 음성으로 물어볼 수 있어서 편했고, 보이스피싱 예방법을 쉽게 설명해줘서 좋았어요. 플로라가 내 걱정을 들어주는 것 같아 마음이 편안해졌어요.",
      name: '박영숙',
      twitter: {
        handle: '@youngsook_park',
        link: '#0'
      }
    },
    {
      img: CustomerImg04,
      quote: "회사에서 발생한 횡령 문제로 고민이 많았는데, Bubble Bubble의 조언이 큰 도움이 되었습니다. 법적 대응 방법을 명확히 알려줘서 좋았어요. 다만 더 구체적인 판례도 볼 수 있었으면 좋겠어요.",
      name: '최준혁',
      twitter: {
        handle: '@junhyuk_choi',
        link: '#0'
      }
    },
    {
      img: CustomerImg05,
      quote: "데이트폭력 피해를 겪고 있었는데, Bubble Bubble이 제 상황을 정확히 파악하고 도움을 줬어요. 처음에는 개인정보 유출이 걱정됐지만, 안전하다는 걸 알고 안심했어요. 플로라의 위로가 특히 힘이 되었습니다.",
      name: '송미라',
      twitter: {
        handle: '@mira_song',
        link: '#0'
      }
    },
    {
      img: CustomerImg06,
      quote: "투자 사기를 당했을 때 어떻게 대처해야 할지 몰랐는데, Bubble Bubble이 명확한 해결 방법을 제시해줬어요. 티모의 조언 덕분에 법적 대응을 할 수 있었습니다. 초기에 서비스 이용법을 익히는 게 조금 어려웠어요.",
      name: '강동훈',
      twitter: {
        handle: '@donghoon_kang',
        link: '#0'
      }
    },
    {
      img: CustomerImg07,
      quote: "학교폭력 문제로 고민하다 Bubble Bubble을 사용했어요. AI가 제 상황을 이해할 수 있을지 걱정했지만, 정말 잘 이해하고 도와줬어요. 게임처럼 배우는 기능이 재미있어서 계속 사용하게 돼요.",
      name: '이서연',
      twitter: {
        handle: '@seoyeon_lee',
        link: '#0'
      }
    },
    {
      img: CustomerImg08,
      quote: "사이버 범죄에 대해 전혀 몰랐는데, Bubble Bubble이 쉽게 설명해줘서 좋았어요. 음성으로 대화할 수 있어 정말 편리했어요. 앞으로 더 다양한 주제로 확장되면 좋겠어요!",
      name: '홍길동',
      twitter: {
        handle: '@gildong_hong',
        link: '#0'
      }
    },
    {
      img: CustomerImg09,
      quote: "저작권 침해 문제로 고민하다 Bubble Bubble을 찾았어요. 티모가 제시한 해결 방법이 정말 실용적이었어요. 앞으로 더 많은 실제 사례가 추가되면 더욱 유용할 것 같아요!",
      name: '정수민',
      twitter: {
        handle: '@sumin_jung',
        link: '#0'
      }
    },
  ]

  return (
    <section className="relative">
      {/* Radial gradient */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none -z-10" aria-hidden="true">
        <div className="absolute flex items-center justify-center top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 w-1/3 aspect-square">
          <div className="absolute inset-0 translate-z-0 bg-sky-500 rounded-full blur-[120px] opacity-50"></div>
        </div>
      </div>
      <div className="max-w-6xl mx-auto px-4 sm:px-6">
        <div className="py-12 md:py-20">
          {/* Content */}
          <div className="max-w-3xl mx-auto text-center pb-12 md:pb-20">
            <h2 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60 pb-4">Bubble Bubble과 함께한 법률 여정 어떠세요?</h2>
            <p className="text-lg text-slate-400">당신의 권리를 지키는 스마트한 동행. 법률 문제로 고민하신 적 있나요? Bubble Bubble이 여러분의 든든한 법률 파트너가 되어드립니다. AI 기술을 활용한 맞춤형 상담으로 복잡한 법적 문제를 쉽게 해결해드립니다. 전세사기부터 사이버 범죄까지, 다양한 법률 이슈에 대한 정확한 정보와 해결책을 제시합니다. 여러분의 권리를 지키는 가장 스마트한 방법, 지금 바로 Bubble Bubble과 함께하세요.</p>
          </div>
          {/* Customers */}
          <div className="grid lg:grid-cols-3 gap-4 sm:gap-6 max-w-xs mx-auto lg:max-w-none">

            {items.map((item, index) => (
              <div key={index} className="relative p-5 before:absolute before:inset-0 before:-z-10 before:border before:border-slate-300 before:bg-slate-700 before:opacity-10 before:rounded-xl">
                <div className="flex items-center justify-between space-x-2 mb-4">
                  <div className="flex items-center space-x-4">
                    <Image className="shrink-0 rounded-full" src={item.img} width={44} height={44} alt={item.name} />
                    <div className="grow truncate">
                      <div className="font-bold text-slate-100 truncate">{item.name}</div>
                      <a className="text-sm text-slate-500 hover:text-slate-300 font-medium truncate transition-colors" href={item.twitter.link}>{item.twitter.handle}</a>
                    </div>
                  </div>
                  <svg className="shrink-0" xmlns="http://www.w3.org/2000/svg" width="90" height="14">
                    <path className="fill-sky-500" d="M7 0 5.006 5.368H0l4.232 3.221L2.195 14 7 10.344 11.82 14 9.768 8.589 14 5.368H8.98zM26 0l-1.994 5.368H19l4.232 3.221L21.195 14 26 10.344 30.82 14l-2.052-5.411L33 5.368h-5.02zM45 0l-1.994 5.368H38l4.232 3.221L40.195 14 45 10.344 49.82 14l-2.052-5.411L52 5.368h-5.02zM64 0l-1.994 5.368H57l4.232 3.221L59.195 14 64 10.344 68.82 14l-2.052-5.411L71 5.368h-5.02zM83 0l-1.994 5.368H76l4.232 3.221L78.195 14 83 10.344 87.82 14l-2.052-5.411L90 5.368h-5.02z" />
                  </svg>
                </div>
                <p className="text-sm text-slate-400">{item.quote}</p>
              </div>
            ))}

          </div>
        </div>
      </div>
    </section>
  )
}
